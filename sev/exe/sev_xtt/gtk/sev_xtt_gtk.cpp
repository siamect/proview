/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#include <locale.h>

#include <fstream>

#include "cow_gtk.h"

#include "co_error.h"
#include "co_string.h"

#include "rt_errh.h"

#include "xtt_tbl_gtk.h"

void tbl_close_cb(void* tbl)
{
  XttTblGtk* xtttbl = (XttTblGtk*)tbl;

  delete xtttbl;
  exit(0);
}

int main(int argc, char* argv[])
{
  pwr_tStatus sts;
  qcom_sAid aid;
  sevcli_tCtx sevcli;
  sevcli_sHistItem* items;
  unsigned int itemcnt;
  char servername[40] = "";

  // Get options
  for (int i = 1; i < argc; i++) {
    if (streq(argv[i], "-s") && i + 1 < argc) {
      strncpy(servername, argv[i + 1], sizeof(servername));
      i++;
    }
  }

  sts = qcom_Init(&sts, &aid, "sev_xtt");
  if (EVEN(sts))
    throw co_error(sts);

  sevcli_init(&sts, &sevcli);
  if (EVEN(sts)) {
    printf("Sev client init error %u\n", sts);
    exit(0);
  }

  if (!streq(servername, ""))
    sevcli_set_servernode(&sts, sevcli, servername);

  sevcli_get_itemlist(&sts, sevcli, &items, &itemcnt);
  if (EVEN(sts)) {
    printf("Sev client get itemlist error %u\n", sts);
    exit(0);
  }

  gtk_init(&argc, &argv);

  setlocale(LC_NUMERIC, "POSIX");
  setlocale(LC_TIME, "en_US");

  XttTblGtk* tbl = new XttTblGtk(0, 0, sevcli, items, itemcnt);
  tbl->close_cb = tbl_close_cb;

  gtk_main();
  return 1;
}
