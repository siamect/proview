/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cnv_style_h
#define cnv_style_h

/* cnv_style.h -- Convert style */

#include <string>
#include "pwr.h"

typedef enum { cnv_eAlignment_Left, cnv_eAlignment_Center } cnv_eAlignment;

class CnvStyle {
  public:
  CnvStyle()
  {
  }
  CnvStyle(std::string s_font, int s_font_size, int s_indentation,
      int s_top_offset, int s_bottom_offset, int s_alignment, int s_pagebreak,
      int s_sidebreak, int s_display_number)
      : font(s_font), font_size(s_font_size), indentation(s_indentation),
        top_offset(s_top_offset), bottom_offset(s_bottom_offset),
        alignment(s_alignment), pagebreak(s_pagebreak), sidebreak(s_sidebreak),
        display_number(s_display_number)
  {
  }
  std::string font;
  int font_size;
  int indentation;
  int top_offset;
  int bottom_offset;
  int alignment;
  int pagebreak;
  int sidebreak;
  int display_number;
};

class CnvIdStyle {
  public:
  CnvIdStyle()
  {
    h1 = CnvStyle("Helvetica-Bold-ISOLatin1", 14, 0, 30, 25,
        cnv_eAlignment_Left, 0, 0, 1);
    h2 = CnvStyle("Helvetica-Bold-ISOLatin1", 12, 0, 25, 20,
        cnv_eAlignment_Left, 0, 0, 1);
    h3 = CnvStyle("Helvetica-Bold-ISOLatin1", 10, 0, 15, 10,
        cnv_eAlignment_Left, 0, 0, 1);
    text = CnvStyle(
        "Helvetica-ISOLatin1", 10, 0, 11, 2, cnv_eAlignment_Left, 0, 0, 0);
    boldtext = CnvStyle(
        "Helvetica-Bold-ISOLatin1", 10, 0, 11, 2, cnv_eAlignment_Left, 0, 0, 0);
    link = CnvStyle("Helvetica-Oblique-ISOLatin1", 8, 0, 11, 2,
        cnv_eAlignment_Left, 0, 0, 0);
    image = CnvStyle("Helvetica-Oblique-ISOLatin1", 10, 0, 10, 0,
        cnv_eAlignment_Left, 0, 0, 0);
    code = CnvStyle(
        "Courier-ISOLatin1", 10, 0, 11, 2, cnv_eAlignment_Left, 0, 0, 0);
  }
  CnvStyle h1;
  CnvStyle h2;
  CnvStyle h3;
  CnvStyle text;
  CnvStyle boldtext;
  CnvStyle link;
  CnvStyle image;
  CnvStyle code;
};

#endif
