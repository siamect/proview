/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

/* cnv_content.cpp --
   Table of content list. */

/*_Include files_________________________________________________________*/

extern "C" {
#include "co_dcli.h"
}
#include "co_string.h"

#include "cnv_content.h"

int CnvContent::find_link(const char* subject, char* text, int* page)
{
  char key_part[4][40];
  char subject_part[4][40];
  int i, j;
  int subject_nr;
  int key_nr;
  int hit = 0;

  subject_nr = dcli_parse(subject, " 	", "", (char*)subject_part,
      sizeof(subject_part) / sizeof(subject_part[0]), sizeof(subject_part[0]),
      0);

  for (j = 0; j < (int)tab.size(); j++) {
    key_nr = dcli_parse(tab[j].subject, " 	", "", (char*)key_part,
        sizeof(key_part) / sizeof(key_part[0]), sizeof(key_part[0]), 0);
    if (key_nr == subject_nr) {
      for (i = 0; i < key_nr; i++) {
        if (str_NoCaseStrcmp(subject_part[i], key_part[i]) == 0) {
          if (i == key_nr - 1) {
            hit = 1;
            break;
          }
        } else
          break;
      }
    }
    if (hit)
      break;
  }
  if (!hit)
    return 0;
  strcpy(text, tab[j].text);
  *page = tab[j].page_number;
  return 1;
}

void CnvContent::add(CnvContentElem& elem)
{
  tab.push_back(elem);
}
