/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cnv_xtthelptotext_h
#define cnv_xtthelptotext_h

#include "cnv_xtthelpto.h"
#include "cnv_content.h"

class CnvCtx;

class CnvXtthelpToText : public CnvXtthelpTo {
  public:
  CnvXtthelpToText(CnvCtx* cnv_ctx)
      : ctx(cnv_ctx), first_topic(1), in_topic(0), print_disable(0)
  {
  }
  virtual ~CnvXtthelpToText();

  Cnv_eXtthelpToType type()
  {
    return Cnv_eXtthelpToType_Text;
  }
  void* insert(navh_eItemType item_type, const char* text1, const char* text2,
      const char* text3, const char* link, const char* link_bookmark,
      const char* file_name, navh_eHelpFile file_type, int help_index,
      const char* bookmark, int coding);
  void subject_to_fname(char* fname, const char* subject, int path);

  CnvCtx* ctx;
  std::ofstream fp;
  int first_topic;
  int in_topic;
  int print_disable;
};

#endif
