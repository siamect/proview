!** Description: Generate a wtt symbolfile with a symbol for each $PlantHier
! 
# ProviewR   Open Source Process Control.
# Copyright (C) 2005-2021 SSAB EMEA AB.
#
# This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
# along with ProviewR. If not, see <http://www.gnu.org/licenses/>
#
# Linking ProviewR statically or dynamically with other modules is
# making a combined work based on ProviewR. Thus, the terms and
# conditions of the GNU General Public License cover the whole 
# combination.
#
# In addition, as a special exception, the copyright holders of
# ProviewR give you permission to, from the build function in the
# ProviewR Configurator, combine ProviewR with modules generated by the
# ProviewR PLC Editor to a PLC program, regardless of the license
# terms of these modules. You may copy and distribute the resulting
# combined work under the terms of your choice, provided that every 
# copy of the combined work is accompanied by a complete copy of 
# the source code of ProviewR (the version used to produce the
# combined work), being distributed under the terms of the GNU 
# General Public License plus this exception.
!
!

function int find_planthier( string parent, int file)
  string child;
  string short_child;
  string class;
  int    pos;

  child = GetChild( parent);
  while ( child != "")
    class = GetObjectClass( child);
    if ( class == "$PlantHier")
      pos = strrchr( child, "-");
      pos++;
      short_child = extract( pos, 80, child);
      fprintf( file, "define %s \"show child/name=%s\"\n", short_child, child);
      printf( "Symbol %s -> %s\n", short_child, child);
    endif
    if ( ! (class == "PlcPgm" || class == "$MountObject"))
      find_planthier( child, file);
    endif
    child = GetNextSibling( child);
  endwhile
endfunction


main()
  string	filename = "pwrp_login:wtt_symbols.pwr_com";
  int 		file;
  string 	name;
  string 	class;
  int		sts;
  int		cancel;
  string	msg;
  int		all_volumes;
  string	current_volume;
  string	volume;

  sts = ContinueDialog("Confirm", "This script will generate a symbolfile for wtt");
  if ( !sts)
    exit();
  endif

! Get filename

  msg = "Do you want to create the default file " + filename;
  sts = ConfirmDialog("Default name", msg, cancel);
  if ( cancel)
    exit();
  endif

  if ( !sts)
    sts = PromptDialog( "Filename", "Enter filename", filename);
    if ( !sts)
      exit();
    endif
  endif

! This volume or all volumes

  msg = "Do you want to create the default file " + filename;
  all_volumes = ConfirmDialog("All volumes", "Do you want to create symbols for all volumes in this database", cancel);
  if ( cancel)
    exit();
  endif

  file = fopen( filename, "w");
  if ( !file)
    printf( "Unable to open file %s, filename");
    exit();
  endif

  fprintf( file, "!** Description: Wtt symbol file, generated by wtt_sym_gen.pwr_com\n");

  if ( all_volumes)
    current_volume = GetCurrentVolume();

    volume = GetVolumeList();
    while ( volume != "") 
      if ( GetVolumeClass( volume) == "$RootVolume")
        set volume/volume='volume'

        printf( "-- Processing volume %s\n", volume);
        name = GetRootList();
        while( name != "")
          class = GetObjectClass( name);
          if ( class == "$PlantHier")
            find_planthier( name, file);
          endif
          name = GetNextSibling( name);
        endwhile

      endif
      volume = GetNextVolume( volume);
    endwhile
    set volume/volume='current_volume'
  else

    name = GetRootList();
    while( name != "")
      class = GetObjectClass( name);
      if ( class == "$PlantHier")
        find_planthier( name, file);
      endif
      name = GetNextSibling( name);
    endwhile

  endif

  fclose( file);


  msg = filename + " is created\nDo you want to execute this file";
  if ( ConfirmDialog( "Execute", msg))
    @'filename'
  endif
endmain
