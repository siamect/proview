/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#include <fstream>

#include "co_dcli.h"
#include "co_cdh.h"
#include "co_depend.h"
#include "co_string.h"

CoDepend::CoDepend()
{
  strcpy(filename, "");
  strcpy(dependfile, "");
}

void CoDepend::add(const char* fname)
{
  if (streq(filename, ""))
    return;

  std::string fnamestr(fname);
  depend.push_back(fnamestr);
}

void CoDepend::set_dependfile(char* dname)
{
  strncpy(dependfile, dname, sizeof(dependfile));
}

void CoDepend::set_filename(char* fname)
{
  strncpy(filename, fname, sizeof(filename));
}

void CoDepend::print()
{
  if (streq(filename, ""))
    return;

  dcli_translate_filename(dependfile, dependfile);
  dcli_translate_filename(filename, filename);

  std::ofstream fp(filename);

  fp << dependfile << " : \\\n";
  for (unsigned int i = 0; i < depend.size(); i++)
    fp << depend[i] << " \\\n";

  fp << '\n';
  fp.close();
}
