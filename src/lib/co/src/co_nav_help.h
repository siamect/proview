/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef co_nav_help_h
#define co_nav_help_h

#include "pwr.h"

/* co_nav_help.h -- Help file parser */

#if defined __cplusplus
extern "C" {
#endif

#ifndef co_api_h
typedef enum {
  navh_eHelpFile_,
  navh_eHelpFile_Base,
  navh_eHelpFile_Project,
  navh_eHelpFile_Other
} navh_eHelpFile;
#endif

typedef enum {
  navh_eItemType_Help,
  navh_eItemType_HelpBold,
  navh_eItemType_HelpHeader,
  navh_eItemType_Header,
  navh_eItemType_HeaderLarge,
  navh_eItemType_HorizontalLine,
  navh_eItemType_Topic,
  navh_eItemType_EndTopic,
  navh_eItemType_Image,
  navh_eItemType_DocTitlePage,
  navh_eItemType_DocInfoPage,
  navh_eItemType_Chapter,
  navh_eItemType_EndChapter,
  navh_eItemType_HeaderLevel,
  navh_eItemType_EndHeaderLevel,
  navh_eItemType_PageBreak,
  navh_eItemType_Style,
  navh_eItemType_HelpCode,
  navh_eItemType_Option
} navh_eItemType;

class NavHelp {
  public:
  NavHelp(
      void* h_parent_ctx, const char* h_base_file, const char* h_project_file);

  void* parent_ctx;
  void* (*insert_cb)(void*, navh_eItemType, const char*, const char*,
      const char*, const char*, const char*, const char*, navh_eHelpFile, int,
      const char*, int);
  void (*draw_cb)(void*, int, void*);
  pwr_tFileName base_file;
  pwr_tFileName project_file;
  int noprop;

  int help(const char* key, const char* help_bookmark, navh_eHelpFile file_type,
      const char* file_name, void** bookmark, bool strict = false);
  int get_next_key(const char* help_key, navh_eHelpFile file_type,
      const char* file_name, bool strict, char* next_key);
  int get_previous_key(const char* help_key, navh_eHelpFile file_type,
      const char* file_name, bool strict, char* prev_key);
  int help_index(navh_eHelpFile file_type, const char* file_name);
  void set_propagate(int prop)
  {
    noprop = !prop;
  }
};

#if defined __cplusplus
}
#endif
#endif
