/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef co_nav_crr_h
#define co_nav_crr_h

/* co_nav_crr.h -- Display crossreferences */

#if defined __cplusplus
extern "C" {
#endif

#include "pwr.h"

typedef enum {
  navc_eItemType_Crossref,
  navc_eItemType_Header,
  navc_eItemType_Text
} navc_eItemType;

class NavCrr {
  public:
  NavCrr(void* c_parent_ctx, void* c_parent_node)
      : parent_ctx(c_parent_ctx), parent_node(c_parent_node) {}
  void* parent_ctx;
  void* parent_node;
  void (*insert_cb)(void*, void*, navc_eItemType, char*, char*, int);
  int (*name_to_objid_cb)(void*, char*, pwr_tObjid*);
  int (*get_volume_cb)(void*, pwr_tVid*, pwr_tVid);
  int crr_signal(char* filename, char* signalname);
  int crr_object(char* filename, char* objectname);
  int crr_code(
      char* filename, char* str, int brief, int func, int case_sensitive);
  int get_signals(char* filename, char* objectname);
};

#if defined __cplusplus
}
#endif
#endif
