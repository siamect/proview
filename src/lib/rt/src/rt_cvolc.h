/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef rt_cvolc_h
#define rt_cvolc_h

/* rt_cvolc.h -- Cached volumes, client calls.  */

#include "rt_cvol.h"

/* Callable functions.  */

void* cvolc_GetObjectInfo(pwr_tStatus* sts, const gdb_sNode* np,
    const pwr_sAttrRef* arp, gdb_sCclass* ccp, const pwr_sAttrRef* rarp,
    pwr_tUInt32 ridx, mvol_sAttribute* ap, void* p, int size);

void cvolc_LockObject(pwr_tStatus* sts, gdb_sObject* op);

gdb_sObject* cvolc_NameToObject(pwr_tStatus* sts, gdb_sObject* p_op,
    cdh_sParseName* pn, int index, pwr_tBitMask trans);

gdb_sObject* cvolc_OidToObject(pwr_tStatus* sts, gdb_sVolume* vp,
    pwr_tObjid oid, pwr_tBitMask trans, cvol_eHint hint);

pwr_tBoolean cvolc_SetObjectInfo(pwr_tStatus* sts, const gdb_sNode* np,
    const pwr_sAttrRef* arp, const gdb_sCclass* ccp, const pwr_sAttrRef* rarp,
    pwr_tUInt32 ridx, mvol_sAttribute* ap, const void* p, int size);

void cvolc_TouchObject(gdb_sObject* op);

void cvolc_UnlockObject(pwr_tStatus* sts, gdb_sObject* op);

void cvolc_FileList(pwr_tStatus* sts, gdb_sObject* p_op, char* dir,
    char* pattern, pwr_tString40* filelist[], int* filecnt);

void cvolc_ClassList(pwr_tStatus* sts, pwr_tNid nid, int cidcnt, pwr_tCid* cid,
    int attrobjects, pwr_tAttrRef* classlist[], int* listcnt);

#endif
