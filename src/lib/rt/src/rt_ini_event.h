/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef rt_ini_event_h
#define rt_ini_event_h

#include "pwr.h"

typedef union {
  pwr_tBitMask m;
  pwr_32Bits(pwr_Bits(swapInit, 1), pwr_Bits(rebuildInit, 1),
      pwr_Bits(newPlcInit, 1), pwr_Bits(newPlcInitDone, 1),
      pwr_Bits(newPlcStart, 1), pwr_Bits(newPlcStartDone, 1),
      pwr_Bits(oldPlcStop, 1), pwr_Bits(oldPlcStopDone, 1),

      pwr_Bits(swapDone, 1), pwr_Bits(terminate, 1), pwr_Bits(simLoadStart, 1),
      pwr_Bits(simLoadDone, 1),

      pwr_Bits(plcProc1, 1), pwr_Bits(plcProc2, 1), pwr_Bits(plcProc3, 1),
      pwr_Bits(plcProc4, 1), pwr_Bits(plcProc5, 1), pwr_Bits(plcProc6, 1),
      pwr_Bits(plcProc7, 1), pwr_Bits(plcProc8, 1), pwr_Bits(plcProc9, 1),
      pwr_Bits(plcProc10, 1), pwr_Bits(plcProc11, 1), pwr_Bits(plcProc12, 1),
      pwr_Bits(plcProc13, 1), pwr_Bits(plcProc14, 1), pwr_Bits(plcProc15, 1),
      pwr_Bits(plcProc16, 1), pwr_Bits(plcProc17, 1), pwr_Bits(plcProc18, 1),
      pwr_Bits(plcProc19, 1), pwr_Bits(plcProc20, 1)) b;

#define ini_mEvent__ 0
#define ini_mEvent_swapInit pwr_Bit(0)
#define ini_mEvent_rebuildInit pwr_Bit(1)
#define ini_mEvent_newPlcInit pwr_Bit(2)
#define ini_mEvent_newPlcInitDone pwr_Bit(3)
#define ini_mEvent_newPlcStart pwr_Bit(4)
#define ini_mEvent_newPlcStartDone pwr_Bit(5)
#define ini_mEvent_oldPlcStop pwr_Bit(6)
#define ini_mEvent_oldPlcStopDone pwr_Bit(7)
#define ini_mEvent_swapDone pwr_Bit(8)
#define ini_mEvent_terminate pwr_Bit(9)
#define ini_mEvent_simLoadStart pwr_Bit(10)
#define ini_mEvent_simLoadDone pwr_Bit(11)
#define ini_mEvent_plc1 pwr_Bit(12)
#define ini_mEvent_plc2 pwr_Bit(13)
#define ini_mEvent_plc3 pwr_Bit(14)
#define ini_mEvent_plc4 pwr_Bit(15)
#define ini_mEvent_plc5 pwr_Bit(16)
#define ini_mEvent_plc6 pwr_Bit(17)
#define ini_mEvent_plc7 pwr_Bit(18)
#define ini_mEvent_plc8 pwr_Bit(19)
#define ini_mEvent_plc9 pwr_Bit(20)
#define ini_mEvent_plc10 pwr_Bit(21)
#define ini_mEvent_plc11 pwr_Bit(22)
#define ini_mEvent_plc12 pwr_Bit(23)
#define ini_mEvent_plc13 pwr_Bit(24)
#define ini_mEvent_plc14 pwr_Bit(25)
#define ini_mEvent_plc15 pwr_Bit(26)
#define ini_mEvent_plc16 pwr_Bit(27)
#define ini_mEvent_plc17 pwr_Bit(28)
#define ini_mEvent_plc18 pwr_Bit(29)
#define ini_mEvent_plc19 pwr_Bit(30)
#define ini_mEvent_plc20 pwr_Bit(31)
#define ini_mEvent_ (~ini_mEvent__)
} ini_mEvent;

#endif
