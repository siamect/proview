/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef pwr_h
#include "pwr.h"
#endif

#define UC_NORMAL 0
#define UC_READ 1
#define UC_WRITE 2
#define UC_READ2 3
#define UC_WRITE2 4

#define _z_ ,

/* Direct link table */
typedef struct {
  void** Pointer;
  pwr_sAttrRef AttrRef;
  pwr_tClassId ObjType;
  pwr_tUInt32 Size;
  pwr_tUInt32 UseCode;
  pwr_tUInt32 Offset;
} plc_t_rtdbref;

typedef struct {
  pwr_tBoolean ActualValue;
} plc_sClass_Di;

typedef struct {
  pwr_tBoolean ActualValue;
} plc_sClass_Do;

typedef struct {
  pwr_tBoolean ActualValue;
} plc_sClass_Po;

typedef struct {
  pwr_tBoolean ActualValue;
} plc_sClass_Dv;

typedef struct {
  pwr_tInt32 RawValue;
} plc_sClass_Co;

typedef struct {
  pwr_tFloat32 ActualValue;
} plc_sClass_Ai;

typedef struct {
  pwr_tFloat32 ActualValue;
} plc_sClass_Ao;

typedef struct {
  pwr_tFloat32 ActualValue;
} plc_sClass_Av;

typedef struct {
  pwr_tInt32 ActualValue;
} plc_sClass_Ii;

typedef struct {
  pwr_tInt32 ActualValue;
} plc_sClass_Io;

typedef struct {
  pwr_tInt32 ActualValue;
} plc_sClass_Iv;

typedef struct {
  pwr_tBoolean ActualValue;
} plc_sClass_BBoolean;

typedef struct {
  pwr_tInt64 ActualValue;
} plc_sClass_BInt64;

typedef struct {
  pwr_tInt32 ActualValue;
} plc_sClass_BInt32;

typedef struct {
  pwr_tInt16 ActualValue;
} plc_sClass_BInt16;

typedef struct {
  pwr_tInt8 ActualValue;
} plc_sClass_BInt8;

typedef struct {
  pwr_tFloat32 ActualValue;
} plc_sClass_BFloat32;

typedef struct {
  pwr_tFloat64 ActualValue;
} plc_sClass_BFloat64;

typedef struct {
  char ActualValue[1];
} plc_sClass_BString;

typedef struct {
  pwr_tTime ActualValue;
} plc_sClass_ATv;

typedef struct {
  pwr_tDeltaTime ActualValue;
} plc_sClass_DTv;

typedef struct {
  pwr_tString80 ActualValue;
} plc_sClass_Sv;
