! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_systemsup.wb_load -- Defines the class SystemSup.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Group Supervision,NodeConfiguration
!  @Summary System supervisory
!  System Supervisory.
!  SystemSup objects are used by the event monitor to send
!  system events and alarms to outunits. 
!  All SystemSup objects are placed in the SystemEvent array
!  in the MessageHandler object.
!
! @b See Also
!  @classlink MessageHandler pwrb_messagehandler.html
!*/
  Object SystemSup $ClassDef 654 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_RtConnectionsAndDevBodies
      Attr PopEditor = 2
      Attr Flags |= pwr_mClassDef_Internal
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "SystemSup"
      EndBody
      !/** 
      !  Type of system event
      !*/
      Object SystemEvent $Attribute 1 
        Body SysBody
          Attr TypeRef = "pwrb:Type-SystemEventTypeEnum"
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_CONST
        EndBody
      EndObject
      !/** 
      !  Description
      !*/
      Object Description $Attribute 2 
        Body SysBody
          Attr PgmName = "Description"
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Specifies whether to enable or disable the action,
      !*/
      Object DetectOn $Attribute 3 
        Body SysBody
          Attr PgmName = "DetectOn"
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Alarm message. Optional text which will be written out
      !  at alarm state if DetectOn is TRUE.
      !*/
      Object DetectText $Attribute 4 
        Body SysBody
          Attr PgmName = "DetectText"
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Return message. Text which will be written in the event
      !  list at return to normal state.
      !*/
      Object ReturnText $Attribute 5 
        Body SysBody
          Attr PgmName = "ReturnText"
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Specifies the type of the message (=DetectText ) which
      !  will be sent at alarm state.
      !  ALARM -- 64 The message always requires an
      !              acknowledgement and sent to the alarm
      !  
      !  INFO  -- 32 If the message requires acknowledgement is
      !              it sent to the info part of the alarm
      !              window and the event list, otherwise only
      !*/
      Object EventType $Attribute 6 
        Body SysBody
          Attr PgmName = "EventType"
          Attr TypeRef = "pwrb:Type-EventTypeEnum"
        EndBody
      EndObject
      !/**
      !  Priorities concerning alarm messages.
      !  
      !   -- 67   A-alarm; highest priority. (=43Hex)
      !   -- 66   B-alarm  (= 42Hex)
      !   -- 65   C-alarm  (= 41Hex)
      !   -- 64   D-alarm ; lowest priority. (=40Hex)
      !*/
      Object EventPriority $Attribute 7 
        Body SysBody
          Attr PgmName = "EventPriority"
          Attr TypeRef = "pwrb:Type-EventPrioEnum"
        EndBody
      EndObject
      !/**
      !  Bit map. A combination of flags can be attached to the
      !  message. The possible values are as follows:
      !  
      !  -- Return (1)  If this flag exists the return message ReturnText
      !                 will be sent to the event lists at the out units,
      !  -- Ack (2)     If this flag exists the acknowledgement message
      !                 will be sent to the event lists at the out-units,
      !  -- Bell(4)     If the single out unit has a beep-function this
      !                 will be activated when the message is received.
      !  -- Force (8)   The message is sent to every out unit regardless
      !  -- InfoWindow (16)  If the message is of the type INFO it will be
      !                 placed in the event list. If this flag exists the
      !                 message is also placed in the INFO square of the
      !                 alarm window where acknowledgement is to be done.
      !  -- Returned (32) The alarm status is set to returned already
      !                 when the alarm is emitted.
      !  -- NoObject (64) Not used
      !  -- Email (128) The message will be handled by the email server
      !                 and forwarded to the specified receiver.
      !  -- SMS (256)   The message will be handled by the SMS server
      !                 and forwarded to the specified receiver.
      !  -- UserDetectTime (512) DetectTime is set by the user when the 
      !                 alarm condition is set.
      !*/
      Object EventFlags $Attribute 8 
        Body SysBody
          Attr PgmName = "EventFlags"
          Attr TypeRef = "pwrb:Type-EventFlagsMask"
        EndBody
      EndObject
      !/**
      !  Reference to a sound object, that defines the sound at the operator
      !  place when the alarm is active. If no sound object is supplied, an
      !  ordinary beep is used. The sound object should be of class Sound
      !  or SoundSequence
      !*/
      Object Sound $Attribute 9
        Body SysBody
          Attr PgmName = "Sound"
          Attr TypeRef = "pwrs:Type-$AttrRef"
        EndBody
      EndObject
      !/**
      !  Optional text supplying more information about the event.
      !  The more text can for example contain actions to be made when an alarm is detected.
      !*/
      Object MoreText $Attribute 10
        Body SysBody
          Attr PgmName = "MoreText"
          Attr TypeRef = "pwrs:Type-$Text256"
        EndBody
      EndObject
      !/**
      !  Recipient for epost and mms alarms.
      !  The recipient is a user defined in the user database in the 
      !  current system group.
      !  Recipient can also be a list of users separated by comma, eg
      !  'dennis, jimmy'. Also symbols defined in the Symbol table in
      !  the PostConfig object can be used. Symbols should be referenced
      !  with a $ sign before the symbol name, eg '$on_duty'.
      !
      !  The users should be defined in the current system group or in a
      !  subgroup to this, If a subgroup is used, the subgroup should
      !  be specified in the recipient name, eg 'sms.dennis'.
      !*/
      Object Recipient $Attribute 11 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String40"
        EndBody
      EndObject
      !/**
      !  Attribute is filled in by the user if the input named
      !  IN is left open. If the input is connected the names
      !  are filled in by the PROVIEW/R system at compilation.
      !*/
      Object Attribute $Attribute 12 
        Body SysBody
          Attr PgmName = "Attribute"
          Attr TypeRef = "pwrs:Type-$AttrRef"
          Attr Flags |= PWR_MASK_NOEDIT
        EndBody
      EndObject
      !/**
      !  Status value. Bit map containing 16 bits where the 8
      !  least significant bits denote the state and the 8 most
      !  significant bits the priority.
      !  The state is a combination of:
      !  
      !     -- 0    Normal state
      !     -- 1    Alarm state
      !     -- 2    Unacknowledged alarm
      !  The priority is one of the priorities EventPriority.
      !  
      !  The following status can exist:
      !     EventPriority + 1 => Priority + alarm state
      !     EventPriority + 3 => Priority + unacknowledged alarm
      !  and alarm state
      !*/
      Object AlarmStatus $Attribute 13 
        Body SysBody
          Attr PgmName = "AlarmStatus"
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Date and time when alarm state was detected.
      !*/
      Object DetectTime $Attribute 14 
        Body SysBody
          Attr PgmName = "DetectTime"
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Date and time when the last return to normal was
      !  detected.
      !*/
      Object ReturnTime $Attribute 15 
        Body SysBody
          Attr PgmName = "ReturnTime"
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Event identity.
      !*/
      Object EventId $Attribute 16 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
    EndObject
    Object Template SystemSup
      Body RtBody
        Attr EventType = 64
        Attr EventPriority = 67
        Attr EventFlags = 7
        Attr DetectOn = 1
      EndBody
    EndObject
  EndObject
EndSObject
