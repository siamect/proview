! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_nodeconfig.wb_load -- Defines the class nodeconfig.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Group ProjectConfiguration
!  @Summary Configures a ProviewR node in the current project.
!  The NodeConfig object configures a node in the current project
!  on which the ProviewR runtime environment should be started.
!
!  The NodeConfig object is created in the project volume as a child to
!  a BusConfig-object in the node-hierachy. Is is the root of an object 
!  tree of  volumeload and distribution object, which together configures 
!  QCOM, nethandler and the distributor. The following objects can be a part
!  of the tree.
!
!  The NodeConfig object should have a RootVolumeLoad object as
!  a child, that states the volume to load on this node. 
!
!  Any additional classvolumes that belongs to a mounted volume can
!  be loaded with a ClassVolumeLoad object.
!
!  Distribution objects (Distribute, ApplDistribute) configures 
!  application programs and other files that should be copied to the node.
!
! @b See also
!  @classlink RootVolumeLoad pwrb_rootvolumeload.html
!  @classlink ClassVolumeLoad pwrb_classvolumeload.html
!  @classlink FriendNodeConfig pwrb_friendnodeconfig.html
!  @classlink Distribute pwrb_distribute.html  
!*/
  Object NodeConfig $ClassDef 160 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_Standard
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "NodeConfig"
      EndBody
      !/**
      !  Description of the node
      !*/
      Object Description $Attribute 1 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  The name of the node, i.e. the network node hostname.
      !*/
      Object NodeName $Attribute 2 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Operating system of the node.
      !*/
      Object OperatingSystem $Attribute 3 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$OpSysEnum"
        EndBody
      EndObject
      !/**
      !  @Summary Boot system of the node.
      !  Boot system of the node.
      !  Loadfiles, applications and graph-files will be copied to this
      !  node by the distributor.
      !  In most cases this is the node itself. 
      !
      !  For ELN systems that is booted from a VMS node, the the VMS-node
      !  is the boot node.
      !  If the node is a development node which has access to the
      !  directories of the development environment, no distribution is
      !  required. This is marked with a '-' sign in the BootNode attribute.
      !*/
      Object BootNode $Attribute 4 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      ! QCOM bus number.
      ! Obsolete since V4.0
      !*/
      Object BusNumber $Attribute 5 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags = PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      ! IP address of the node in format a.b.c.d, e.g. 192.168.32.144,
      ! or the host name.
      !*/
      Object Address $Attribute 6 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      ! QCOM port, if different from standard port.
      !*/
      Object Port $Attribute 7 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Gathers all plcprograms to a single thread with on scantime.
      !*/
      Object SimulateSingleProcess $Attribute 8 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      ! Scantime of the single plc-thread.
      !*/
      Object SimulateSingleScanTime $Attribute 9 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      ! Disables distribution for this node.
      !*/
      Object DistributeDisable $Attribute 10
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      ! @Summary Remote shell access type.
      ! Remote shell access type, SSH or RSH.
      ! SSH will copy the distribtion package with scp and unpack it with SSH.
      ! This recommended of security reasons. It requires createion of a public/private
      ! key pair, where the public should be copied to the target node.
      !
      ! RSH will copy with ftp and unpack with RSH. I requires a .rhosts file on the target
      ! node and that the login of user pwrp is unchanged.
      !*/
      Object RemoteAccessType $Attribute 11 
        Body SysBody
          Attr TypeRef = "pwrb:Type-RemoteShellEnum"
        EndBody
      EndObject
      !/**
      ! QCom minimum resend time in seconds.
      !*/
      Object QComMinResendTime $Attribute 12 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      ! QCom maxium resend time in seconds.
      !*/
      Object QComMaxResendTime $Attribute 13 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      ! QCom max export buffer quota.
      !*/
      Object QComExportBufQuota $Attribute 14 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! QCom acknowledge delay time in seconds.
      !*/
      Object QComAckDelay $Attribute 15 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      ! QCom segment size.
      !*/
      Object QComSegmentSize $Attribute 16 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Secondary node.
      !*/
      Object SecondaryNode $Attribute 17 
        Body SysBody
          Attr Flags = PWR_MASK_CLASS
          Attr TypeRef = "pwrb:Class-RedundanceNodeConfig"
        EndBody
      EndObject
    EndObject
    Object Template NodeConfig
      Body RtBody
        Attr QComExportBufQuota = 600000
        Attr QComAckDelay = 0.002
      EndBody
    EndObject
    Object PostCreate $DbCallBack
      Body SysBody
        Attr MethodName = "NodeConfig-PostCreate"
      EndBody
    EndObject
    Object NavigatorPosnn $Menu
      Object Pointed $Menu
	Object History $MenuButton
	  Body SysBody
	    Attr ButtonName = "History"
	    Attr MethodName = "$Object-History"
	    Attr FilterName = "$Object-HistoryFilter"
	    Attr MethodArguments[0] = "NodeBuild,CreatePackage,CopyPackage"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object NavigatorPoson $Menu
      Object Pointed $Menu
	Object History $MenuButton
	  Body SysBody
	    Attr ButtonName = "History"
	    Attr MethodName = "$Object-History"
	    Attr FilterName = "$Object-HistoryFilter"
	    Attr MethodArguments[0] = "NodeBuild,CreatePackage,CopyPackage"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object NavigatorPosos $Menu
      Object Pointed $Menu
	Object History $MenuButton
	  Body SysBody
	    Attr ButtonName = "History"
	    Attr MethodName = "$Object-History"
	    Attr FilterName = "$Object-HistoryFilter"
	    Attr MethodArguments[0] = "NodeBuild,CreatePackage,CopyPackage"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object NavigatorPosms $Menu
      Object Pointed $Menu
	Object History $MenuButton
	  Body SysBody
	    Attr ButtonName = "History"
	    Attr MethodName = "$Object-History"
	    Attr FilterName = "$Object-HistoryFilter"
	    Attr MethodArguments[0] = "NodeBuild,CreatePackage,CopyPackage"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object NavigatorPosmn $Menu
      Object Pointed $Menu
	Object History $MenuButton
	  Body SysBody
	    Attr ButtonName = "History"
	    Attr MethodName = "$Object-History"
	    Attr FilterName = "$Object-HistoryFilter"
	    Attr MethodArguments[0] = "NodeBuild,CreatePackage,CopyPackage"
	  EndBody
	EndObject
      EndObject
    EndObject
  EndObject
EndSObject
