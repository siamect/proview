! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_biintarray20.wb_load -- Defines the class BiIntArray20.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Group PlantConfiguration,Signals
!  @Summary Integer array input signal.
!  Integer array input signal.
!  
!  Configures a buffer input signal. The signal is an array of Int32 
!  with 20 elements.
!  
!  The BiIntArray20 object should be connected to a channel object
!  of type ChanBi in the node hierarchy.
!*/
  Object BiIntArray20 $ClassDef 560 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_Standard
      Attr PopEditor = 1
      Attr Flags |= pwr_mClassDef_IO
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "BiIntArray20"
      EndBody
      !/**
      !  Super class.
      !*/
      Object Super $Attribute 1 
        Body SysBody
          Attr TypeRef = "pwrb:Class-Bi"
          Attr Flags |= PWR_MASK_CLASS
          Attr Flags |= PWR_MASK_SUPERCLASS
        EndBody
      EndObject
      !/**
      !  Pointer to ActualValue. The value is updated
      !  continuously. ConversionOn in the channel
      !  object ChanBi specifies if the value shall be 
      !  converted before storage.
      !*/
      Object ActualValue $Attribute 2 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Int32"
          Attr Flags |= PWR_MASK_POINTER
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_ARRAY
	  Attr Elements = 20
	  Attr Size = 80
        EndBody
      EndObject
      !/**
      !  InitialValue specifies starting value of the signal at
      !  so called 'cold start'. Which value that is used as
      !  starting value at warm restart ( = change of PLC
      !  program ) depends on whether the signal is new or not.
      !  If the signal has exist in the last program its last
      !  value will be used as starting value, otherwise InitialValue
      !*/
      Object InitialValue $Attribute 3 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Int32"
          Attr Flags |= PWR_MASK_ARRAY
	  Attr Elements = 20
        EndBody
      EndObject
    EndObject
    Object Template BiIntArray20
      Body RtBody
	Attr Super.Size = 80
      EndBody
    EndObject
  EndObject
EndSObject
