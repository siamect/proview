! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_table.wb_load -- Defines the class Table.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Group Plc,PlcAnalog
!  @Summary Table for curve interpolation.
!  A Curve object interpolates in a table specified by a
!  Table object.
!  @image orm_table_fo.gif
!
!  The table has to consist of at least 2 of up to 50
!  possible pairs of numbers (x,y).
!  The x-values have to be arranged in an increasing
!  order. At step functions two consecutive x-values are
!  always equal.
!  Several Curve objects can be connected to one and the
!  same Table object.
!  
!  The object contains only data without any executable
!  code.
!
! @h1 Examples
!
! @b Example 1
!  Assume a valve with a strong non-linear characteristic
!  between control signal and flow. To improve the performance
!  at a wide operational range it is possible to let the control
!  signal from a Pid object pass a Curve object before it feeds
!  the actuator. The Table object is to realize a characteristic
!  inverse to that of the valve. 
!
! @b Example 2
!  Positioning forward/backward + analog reference to specify
!  the speed. Positional error greater than 10 will result in
!  a maximum speed of 100. Positional error less than 2 will give
!  a minimum speed of 10. Positional error between 2 and 10 gives
!  linear speed in the interval 10 and 100. 
!
!  The positional error ( position - set value) is connected to a
!  Curve object. A Table object with 4 pairs of numbers is needed:
!
!  X1 = -10 Y1 = 100 X2 = -2 Y2 = 10
!  X3 = 2 Y3 = 10 X4 = 10 Y4 = 100 
!  @image orm_en1-228.gif
!
! @b Example 3
!  @image orm_en1-229.gif
!  Square signal. 
!*/
  Object Table $ClassDef 236 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_Connections
      Attr PopEditor = 2
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "table"
      EndBody
      !/**
      !  The output has to be connected to a Curve object.
      !
      !  TabVect[0]
      !  Specifies the current number of pairs of numbers in the
      !  table.
      !  
      !  TabVect[1], TabVect[2]
      !  The initial pair of numbers {x1, y1}
      !  
      !  TabVect[3], TabVect[4]
      !  The second pair of numbers {x2, y2}
      !*/
      Object TabVect $Output 1 
        Body SysBody
          Attr PgmName = "TabVect"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Flags |= PWR_MASK_REDUTRANSFER
	  Attr Elements = 101
          Attr TypeRef = "pwrs:Type-$Float32"
          Attr GraphName = "TAB"
        EndBody
      EndObject
    EndObject
    Object DevBody $ObjBodyDef 2 
      Object PlcNode $Buffer 1 
        Body SysBody
          Attr Class = pwr_eClass_PlcNode
	  Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
    EndObject
    Object GraphPlcNode $GraphPlcNode
      Body SysBody
        Attr object_type = 130
        Attr parameters[0] = 0
        Attr parameters[1] = 0
        Attr parameters[2] = 1
        Attr parameters[3] = 0
        Attr subwindows = 0
        Attr graphmethod = 0
        Attr graphindex = 0
        Attr default_mask[0] = 0
        Attr default_mask[1] = 1
        Attr segname_annotation = 1
        Attr compmethod = 21
        Attr compindex = 0
        Attr tracemethod = 0
        Attr traceindex = 0
	Attr executeordermethod = 0
        Attr objname = "Table"
        Attr graphname = "Table"
        Attr debugpar = ""
      EndBody
    EndObject
    Object Template Table
      Body RtBody
        Attr TabVect[0] = 2.0
        Attr TabVect[3] = 100.0
        Attr TabVect[4] = 100.0
      EndBody
    EndObject
  EndObject
EndSObject
