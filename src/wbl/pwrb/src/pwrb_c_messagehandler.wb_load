! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_messagehandler.wb_load -- Defines the class MessageHandler.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Group Servers,NodeConfiguration
!  @Summary Configures the event monitor
!  Specifies attributes to a single message handler.
!  
!  Every message handler job needs a MessageHandler
!  object.
!  @image orm_en1-120.gif
!  Message Handler (Mh) Jobs in Different Nodes with their MessageHandler Objects
! 
!  If any MessageHandler object is not explicitly
!  configured to a node it will likewise be created in the
!  runtime system. In this case the attributes are
!  assigned their default values. If the user does not
!  accept these default values, please create a
!  MessageHandler object below the node's $Node object,
!  name it MessageHandler and assign desired values to the
!  attributes.
!  
!  In connection with configuring of a $Node object the
!  development environment normally configure a
!  MessageHandler object as well.
!
! @b Object graph
!  @image orm_messagehandler_og.gif
!*/
  Object MessageHandler $ClassDef 146 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_Standard
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "MessageHandler"
      EndBody
      !/**
      !  Not yet implemented.
      !*/
      Object OutunitServer $Attribute 1 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  If true, current alarm blocking are stored to file 
      !  and recovered after a restart.
      !*/
      Object BlockFile $Attribute 2 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Size of event log.
      !  Max number of events that can be stored in the event log.
      !*/
      Object EventLogSize $Attribute 3 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Specifies the maximum number of events that the node's
      !  message handler contemporary will contain in its event
      !  list, i.e. the skyline of the events. When NoOfEvents
      !  exceeds MaxNoOfEvents the oldest event disappears from
      !  the list.
      !*/
      Object EventListSize $Attribute 4 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Specifies the maximum number of contemporary alarms to
      !  any application job. The attribute is used to prevent a
      !  single job from occupying whole event list of the
      !  message handler.
      !*/
      Object MaxApplAlarms $Attribute 5 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Specifies the maximum number of contemporary system alarms.
      !  The attribute is used to limit alarm allocation when
      !  system alarms are not acknowledged.
      !*/
      Object MaxSystemAlarms $Attribute 23 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Cycle time for detecting alarm conditions for supervision
      !  objects which detection is handled by the event monitor, that
      !  is supervision objects that is not in a PlcPgm and not under
      !  a signal object.
      !*/
      Object DetectTimer $Intern 6 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  Cycle time for reading status of supervision object and sending
      !  alarm messages.
      !*/
      Object MessageTimer $Intern 7 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      Object AlarmFirstIdx $Attribute 8 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object AlarmLastIdx $Attribute 9 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  The number of active alarms counted from time of boot.
      !*/
      Object AlarmCount $Attribute 10 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object AlarmMaxCount $Attribute 11 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object BlockFirstIdx $Attribute 12 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object BlockLastIdx $Attribute 13 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object BlockCount $Attribute 14 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object BlockMaxCount $Attribute 15 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object EventFirstIdx $Attribute 16 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object EventLastIdx $Attribute 17 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  The number of events counted from time of boot.
      !*/
      Object EventCount $Attribute 18 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object EventMaxCount $Attribute 19 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object FreeCount $Attribute 20 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      Object ScanCycleSup $Attribute 21 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Alarms and events emitted by the system.
      !  An array of supervisory objects that is triggered by various 
      !  system events or errors.
      !*/
      Object SystemEvents $Attribute 22 
        Body SysBody
          Attr TypeRef = "pwrb:Class-SystemSup"
          Attr Flags |= PWR_MASK_ARRAY
          Attr Flags |= PWR_MASK_CLASS
	  Attr Elements = 14
        EndBody
      EndObject
    EndObject
    Object Template MessageHandler
      Body RtBody
        Attr EventListSize = 100
        Attr MaxApplAlarms = 50
        Attr MaxSystemAlarms = 50
        Attr DetectTimer = 1.0
        Attr MessageTimer = 1.0
        Attr ScanCycleSup = 1
	Attr SystemEvents[0].SystemEvent = 0
	Attr SystemEvents[0].Description = "Link down event"
	Attr SystemEvents[0].DetectOn = 1
	Attr SystemEvents[0].DetectText = "Link down to node"
	Attr SystemEvents[0].ReturnText = "Link up to node"
	Attr SystemEvents[0].EventType = 256
	Attr SystemEvents[0].EventPriority = 67
	Attr SystemEvents[0].EventFlags = 7
	Attr SystemEvents[1].SystemEvent = 1
	Attr SystemEvents[1].Description = "Node up event"
	Attr SystemEvents[1].DetectOn = 1
	Attr SystemEvents[1].DetectText = "Node up"
	Attr SystemEvents[1].ReturnText = ""
	Attr SystemEvents[1].EventType = 32
	Attr SystemEvents[1].EventPriority = 67
	Attr SystemEvents[1].EventFlags = 55
	Attr SystemEvents[2].SystemEvent = 2
	Attr SystemEvents[2].Description = "Node restart event"
	Attr SystemEvents[2].DetectOn = 1
	Attr SystemEvents[2].DetectText = "Node restart initiated, node"
	Attr SystemEvents[2].ReturnText = "Node restart completion, node"
	Attr SystemEvents[2].EventType = 256
	Attr SystemEvents[2].EventPriority = 67
	Attr SystemEvents[2].EventFlags = 7
	Attr SystemEvents[3].SystemEvent = 3
	Attr SystemEvents[3].Description = "Outunit restart event"
	Attr SystemEvents[3].DetectOn = 1
	Attr SystemEvents[3].DetectText = "Outunit restarted, node"
	Attr SystemEvents[3].ReturnText = ""
	Attr SystemEvents[3].EventType = 32
	Attr SystemEvents[3].EventPriority = 67
	Attr SystemEvents[3].EventFlags = 55
	Attr SystemEvents[4].SystemEvent = 4
	Attr SystemEvents[4].Description = "Emergency break with reboot event"
	Attr SystemEvents[4].DetectOn = 1
	Attr SystemEvents[4].DetectText = "Emergency break reboot, node"
	Attr SystemEvents[4].ReturnText = ""
	Attr SystemEvents[4].EventType = 256
	Attr SystemEvents[4].EventPriority = 67
	Attr SystemEvents[4].EventFlags = 7
	Attr SystemEvents[5].SystemEvent = 5
	Attr SystemEvents[5].Description = "Emergency break with fixed output values event"
	Attr SystemEvents[5].DetectOn = 1
	Attr SystemEvents[5].DetectText = "Emergency break, fixed output values, node"
	Attr SystemEvents[5].ReturnText = ""
	Attr SystemEvents[5].EventType = 256
	Attr SystemEvents[5].EventPriority = 67
	Attr SystemEvents[5].EventFlags = 7
	Attr SystemEvents[6].SystemEvent = 6
	Attr SystemEvents[6].Description = "Emergency break with stop I/O"
	Attr SystemEvents[6].DetectOn = 1
	Attr SystemEvents[6].DetectText = "Emergency break, I/O stopped, node"
	Attr SystemEvents[6].ReturnText = ""
	Attr SystemEvents[6].EventType = 256
	Attr SystemEvents[6].EventPriority = 67
	Attr SystemEvents[6].EventFlags = 7
	Attr SystemEvents[7].SystemEvent = 7
	Attr SystemEvents[7].Description = "Simulate load event"
	Attr SystemEvents[7].DetectOn = 1
	Attr SystemEvents[7].DetectText = "Simulate load started, node"
	Attr SystemEvents[7].ReturnText = "Simulate load completion, node"
	Attr SystemEvents[7].EventType = 256
	Attr SystemEvents[7].EventPriority = 67
	Attr SystemEvents[7].EventFlags = 7
	Attr SystemEvents[8].SystemEvent = 8
	Attr SystemEvents[8].Description = "System status error event"
	Attr SystemEvents[8].DetectOn = 1
	Attr SystemEvents[8].DetectText = "System status error, node"
	Attr SystemEvents[8].ReturnText = ""
	Attr SystemEvents[8].EventType = 256
	Attr SystemEvents[8].EventPriority = 67
	Attr SystemEvents[8].EventFlags = 7
	Attr SystemEvents[9].SystemEvent = 9
	Attr SystemEvents[9].Description = "System status warning event"
	Attr SystemEvents[9].DetectOn = 1
	Attr SystemEvents[9].DetectText = "System status warning, node"
	Attr SystemEvents[9].ReturnText = ""
	Attr SystemEvents[9].EventType = 256
	Attr SystemEvents[9].EventPriority = 66
	Attr SystemEvents[9].EventFlags = 7
	Attr SystemEvents[10].SystemEvent = 10
	Attr SystemEvents[10].Description = "IO Soft error limit reached event"
	Attr SystemEvents[10].DetectOn = 1
	Attr SystemEvents[10].DetectText = "IO Soft error limit reached, node"
	Attr SystemEvents[10].ReturnText = ""
	Attr SystemEvents[10].EventType = 256
	Attr SystemEvents[10].EventPriority = 66
	Attr SystemEvents[10].EventFlags = 7
	Attr SystemEvents[11].SystemEvent = 11
	Attr SystemEvents[11].Description = "IO Hard error limit reached event"
	Attr SystemEvents[11].DetectOn = 1
	Attr SystemEvents[11].DetectText = "IO Hard error limit reached, node"
	Attr SystemEvents[11].ReturnText = ""
	Attr SystemEvents[11].EventType = 256
	Attr SystemEvents[11].EventPriority = 67
	Attr SystemEvents[11].EventFlags = 7
	Attr SystemEvents[12].SystemEvent = 12
	Attr SystemEvents[12].Description = "Application alarm quota exceeded event, node"
	Attr SystemEvents[12].DetectOn = 1
	Attr SystemEvents[12].DetectText = "Application alarm quota exceeded, node"
	Attr SystemEvents[12].ReturnText = ""
	Attr SystemEvents[12].EventType = 32
	Attr SystemEvents[12].EventPriority = 67
	Attr SystemEvents[12].EventFlags = 55
	Attr SystemEvents[13].SystemEvent = 13
	Attr SystemEvents[13].Description = "System alarm quota exceeded event"
	Attr SystemEvents[13].DetectOn = 1
	Attr SystemEvents[13].DetectText = "System alarm quota exceeded, node"
	Attr SystemEvents[13].ReturnText = ""
	Attr SystemEvents[13].EventType = 32
	Attr SystemEvents[13].EventPriority = 67
	Attr SystemEvents[13].EventFlags = 55
      EndBody
    EndObject
  EndObject
EndSObject
