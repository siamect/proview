! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_chanao.wb_load -- Defines the class ChanAo.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Group IO,Channels,NodeConfiguration
!  @Summary Configures an analog output channel
!  Configures an analog output channel independent of the
!  type of physical Ao-card.
!
!  Figure below shows the step in Ao-signal conversion. ActualValue
!  SigValue and RawValue belong to the Ao object. The card polynomial
!  is defined in a card object, the Emerg attributes in a $Node object,
!  and the rest in the ChanAo object
!  @image orm_en1-33.gif
!  Attributes Used in Ao-signal Conversion
!  
!  If EmergBreakTrue = TRUE and EmergBreakSelect = 2 then
!  the output is based on FixedOutValue. Otherwise TestOn
!  will settles which attribute the output is based on.
!  
!  For linear conversion, the conversion from engineering value to raw value can
!  be specified by four ranges
!
! - raw value range            RawValRangeLow - RawValRangeHigh
! - channel signal value range ChannelSigValRangeLow - ChannelSigValRangeHigh
! - sensor signal value range  SensorSigValRangeLow - SensorSigValRangeHigh
! - actual value range         ActValRangeLow - ActValRangeHigh
!
! @image orm_chanao_conv.png
!
! @bHints  
!  ChanAo objects are configured below a suitable card
!  object.
!  
!  Rack and card objects to different I/O systems are
!  documented separately.
!  To create card object with channel objects belonging to
!  it the function 'Configure Card' in "Utility Window" is
!  recommended.
!
! @b Object graph
!  @image orm_chanao_og.gif
!*/
  Object ChanAo $ClassDef 30 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_Standard
      Attr Flags |= pwr_mClassDef_IO
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "ChanAo"
      EndBody
      !/**
      !  Optional text, for example to describe the channel or
      !  its employment.
      !*/
      Object Description $Attribute 1 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Name of a signal object, i.e. Ao object, connected with
      !  the channel object.
      !*/
      Object SigChanCon $Attribute 2
        Body SysBody
          Attr TypeRef = "pwrs:Type-$AttrRef"
	  Attr Flags |= PWR_MASK_STATE
	  Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  The identity of the channel. Optional, for example Ao0
      !  to denote the first channel, physical cable marking,
      !  etc.
      !*/
      Object Identity $Attribute 3 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String40"
        EndBody
      EndObject
      !/**
      !  The Number attribute is used to associate the ChanAo
      !  object to a fixed channel on the card named by
      !  SigChanCon. The physical channels of the card are
      !  numbered in the interval {0,1, ... , (MaxNoOfChannels-1)}
      !  ,where MaxNoOfChannels is an attribute in the card
      !  object.
      !  
      !  The channels of the card are numbered according to the
      !  instructions of the card manufacturer.
      !*/
      Object Number $Attribute 4 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt16"
        EndBody
      EndObject
      !/**
      !  Specifies if the output signal will be based on the
      !  ActualValue or the TestValue; see figure 3-4. FALSE
      !  means that ActualValue is used; TRUE means TestValue.
      !*/
      Object TestOn $Attribute 5 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      !  The output signal is based on the TestValue instead of
      !  ActualValue when TestOn is TRUE.
      !*/
      Object TestValue $Attribute 6 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      !  Action value. The output signal is equal to
      !  FixedOutValue when EmergBreakTrue is TRUE and
      !  EmergBreakSelect = 2. The EmergBreak-attributes belong
      !  to the $Node object.
      !*/
      Object FixedOutValue $Attribute 7 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      Object CalculateNewCoef $Attribute 8
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Specifies in which way the engineering value will be
      !  converted to SigValue. The possible types of
      !  conversions are:
      !  
      !     -- 0   No conversion: SigValue = ActualValue
      !     -- 1   Normal conversion according to the output signal polynomial:
      !        SigValue = OutPolyCoef0 + OutPolyCoef1 * ActualValue
      !  
      !  The attribute ActualValue belongs to an Ai object.
      !*/
      Object OutPolyType $Attribute 9
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt16"
        EndBody
      EndObject
      !/**
      !  The constant term in a OutPolyType expression, see
      !  above.
      !*/
      Object OutPolyCoef0 $Attribute 10
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  Coefficient in an OutPolyType expression, see above.
      !*/
      Object OutPolyCoef1 $Attribute 11
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  The Low and High values of ActValRange specifies the
      !  range of the ActualValue of the signal. These values are 
      !  correlated to the SensorSigValRange.
      !*/
      Object ActValRangeLow $Attribute 12
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      Object ActValRangeHigh $Attribute 13
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      Object SigValPolyCoef0 $Attribute 14
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      Object SigValPolyCoef1 $Attribute 15
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_STATE
        EndBody
      EndObject
      !/**
      !  The Low and High values of SensorSigValRange specifies the
      !  part of the ChannelSigValRange that is used by the sensor.
      !  For example, the channel can have a signal range of -20 - 20 mA
      !  but the sensor only utilizes 4 - 20 mA.
      !*/
      Object SensorSigValRangeLow $Attribute 16
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      Object SensorSigValRangeHigh $Attribute 17
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      Object SigValueUnit $Attribute 18
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String16"
        EndBody
      EndObject
      !/**
      !  The Low and High values of ChannelSigValRange specifies the
      !  signal range of the channel.
      !*/
      Object ChannelSigValRangeLow $Attribute 19
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      Object ChannelSigValRangeHigh $Attribute 20
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  The Low and High values of RawValRange specifies the
      !  raw value range of the channel.
      !*/
      Object RawValRangeLow $Attribute 21
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      Object RawValRangeHigh $Attribute 22
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  Specifies the data representation of the raw value.
      !*/
      Object Representation $Attribute 23
        Body SysBody
          Attr TypeRef = "pwrb:Type-DataRepEnum"
        EndBody
      EndObject
    EndObject
    Object Template ChanAo
      Body RtBody
        Attr OutPolyType = 1
        Attr ActValRangeLow = -100
        Attr ActValRangeHigh = 100
        Attr SensorSigValRangeLow = -5
        Attr SensorSigValRangeHigh = 5
        Attr ChannelSigValRangeLow = -5
        Attr ChannelSigValRangeHigh = 5
        Attr SigValueUnit = "V"
      EndBody
    EndObject
    Object Defaults $Object
      Body SysBody
        Attr Name = "%02.2d"
      EndBody
    EndObject
    Object PostCreate $DbCallBack
      Body SysBody
        Attr MethodName = "ChanIi-PostCreate"
      EndBody
    EndObject
    Object ConfiguratorPcsnn $Menu
      Object Pointed $Menu
	Object SetDefaults $MenuButton
	  Body SysBody
	    Attr ButtonName = "Default Name..."
	    Attr MethodName = "$Object-SetDefaults"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object ConfiguratorPcscs $Menu
      Object Pointed $Menu
	Object SetDefaults $MenuButton
	  Body SysBody
	    Attr ButtonName = "Default Name..."
	    Attr MethodName = "$Object-SetDefaults"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object ConfiguratorPcscn $Menu
      Object Pointed $Menu
	Object SetDefaults $MenuButton
	  Body SysBody
	    Attr ButtonName = "Default Name..."
	    Attr MethodName = "$Object-SetDefaults"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object ConfiguratorPcson $Menu
      Object Pointed $Menu
	Object SetDefaults $MenuButton
	  Body SysBody
	    Attr ButtonName = "Default Name..."
	    Attr MethodName = "$Object-SetDefaults"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object ConfiguratorPcsmn $Menu
      Object Pointed $Menu
	Object SetDefaults $MenuButton
	  Body SysBody
	    Attr ButtonName = "Default Name..."
	    Attr MethodName = "$Object-SetDefaults"
	  EndBody
	EndObject
      EndObject
    EndObject
    Object RtXtt $RtMenu
      Object Signal $MenuRef
	Body SysBody
	  Attr ButtonName = "Signal"
	  Attr RefAttribute = "SigChanCon"
	EndBody
      EndObject
    EndObject
  EndObject
EndSObject
