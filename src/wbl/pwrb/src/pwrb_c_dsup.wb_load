! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_dsup.wb_load -- Defines the class DSup.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Code rt_plc_macro_sup.h
!  @Group Plc,PlcLogic,Supervision,PlantConfiguration
!  @Summary Digital supervisory
!  Digital Supervisory.
!  @image orm_dsup_fo.gif
!
!  Supervises a binary quantity in an arbitrary object in
!  regard to alarm position. CtrlPosition specifies if
!  true or false constitutes the alarm position. The alarm
!  message can be delayed by a time specified by TimerTime.
!  
!  The DSup object reacts in two ways when the quantity is
!  in the alarm position:
!
!  1  the act-output is unconditionally set to indicate
!     alarm state.
!  
!  2  after the time defined by TimerTime a message is
!     sent to the out units, for instance operator
!     stations. This reaction can be suppressed by means
!     of DetectOn.
!  
!  A message contains the text string DetectText as well
!  as flags ( see EventFlags) to handle supplementary
!  activities.
!  Different types of activities exist; (see EventType )
!  
!  - ALARM   The message remains as long as the alarm
!          position exists and no acknowledgement is
!  
!  - INFO    If the message demands an acknowledgement
!          this is sent to the info part of the alarm
!          window from, where it can be acknowledged,
!          otherwise only to the event list.
!
!          An acknowledgeable info-message disappears
!          from the info part of the alarm window as
!          soon as it has been acknowledged without
!          waiting for return to normal state. As soon
!          as the supervised signal that gave an info
!          message, reaches the same position again and
!          this has been detected a new message is generated.
!  
!  
!  The ALARM messages are given different priorities, (
!  see EventPriority ). The texts of A- respectively
!  B-alarms are displayed both in the alarm window and the
!  alarm list. Acknowledgement can be done from both
!  places. In the alarm window the number of
!  unacknowledged C- resp. D-alarms is shown, while the
!  text is put into the alarm list, where the
!  acknowledgement can be done too.
!
!  Different types of out units exist:
!  
!  - OPERATOR: The select list is defined by an attribute
!    in a User object.
!  - PRINTER:    The select list is defined by an
!    attribute in an EventPrinter
!    object.
!  
!  Note! A message created by an DSup object gets the same
!  identity as the supervised object. The attribute
!  SelectList in out unit objects, e.g. User objects,
!  specifies the hierarchies from which messages are to be
!  received.
!  
! @b Hints
!  Supervision of a trailing edge can be done when the In-signal
!  has been inverted.
!  
!  The supervised quantity may belongs to an arbitrary
!  object. This means not only signal objects but also
!  other objects may supervised; e.g. attributes in a
!  user-defined object.
!  It is possible to configure both ASup and DSup objects
!  in different ways. At configuring in a PLC program the
!  PLC job will do the supervision. When the objects are
!  configured outside PLC program, then it is done by the Configuration
!  Editor and the eventmonitor takes care of the
!  supervision.
!
! @b See Also
!  @classlink ASup pwrb_asup.html
!*/
  Object DSup $ClassDef 110 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_RtConnectionsAndDevBodies
      Attr PopEditor = 2
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "DSup"
      EndBody
      !/**
      !  Supervised signal. Can be inverted to supervise a false
      !  signal.
      !*/
      Object In $Input 1 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_RTVIRTUAL
          Attr Flags |= PWR_MASK_NOEDIT
          Attr GraphName = "in"
        EndBody
      EndObject
      !/**
      !  Specifies whether to enable or disable the supervision.
      !  Note that blocking is done when Control is FALSE. The
      !  input signal can be inverted.
      !  
      !  FALSE disables the supervision and TRUE or open input
      !  enables the supervision.
      !*/
      Object Control $Input 2 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_RTVIRTUAL
          Attr Flags |= PWR_MASK_NOEDIT
          Attr GraphName = "con"
        EndBody
      EndObject
      !/**
      !  Specifies the status of supervised quantity. FALSE
      !  means normal state and TRUE means alarm state.
      !  The output signal can for instance be used to activate
      !  an action sequence at alarm state.
      !*/
      Object Action $Output 3 
        Body SysBody
          Attr PgmName = "Action"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE 
          Attr Flags |= PWR_MASK_NOEDIT 
          Attr Flags |= PWR_MASK_REDUTRANSFER
          Attr GraphName = "act"
        EndBody
      EndObject
      !/**
      !  Specifies if the alarm state has been acknowledged or
      !  not. FALSE means that unacknowledged alarm exists. The
      !  output is set TRUE after booting and when the alarm
      !  state has been acknowledged.
      !*/
      Object Acked $Output 4 
        Body SysBody
          Attr PgmName = "Acked"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE 
          Attr Flags |= PWR_MASK_NOEDIT 
          Attr Flags |= PWR_MASK_REDUTRANSFER
          Attr GraphName = "ack"
        EndBody
      EndObject
      !/**
      !  Specifies whether to enable or disable the blocking. No
      !  messages from the supervision object will be sent away
      !  as long as the object is blocked. The blocking does not
      !  influence on the 'act' output of the object.
      !  
      !  FALSE disables the the blocking and TRUE enables the
      !  blocking. When a supervisory object in alarm position
      !  is blocked current messages will be cancelled.
      !  Blocking /deblocking is done by means of the 'Alarm
      !  Blocking Window' in the operator environment.
      !*/
      Object Blocked $Output 5 
        Body SysBody
          Attr PgmName = "Blocked"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE 
          Attr Flags |= PWR_MASK_NOEDIT 
          Attr Flags |= PWR_MASK_REDUTRANSFER
          Attr GraphName = "blk"
        EndBody
      EndObject
      ! ++
      ! Sup struct
      !
      !/**
      !  Optional text to describe the object. It is used in the
      !  picture Alarm Limits which is activated from the
      !  operator window.
      !*/
      Object Description $Attribute 6 
        Body SysBody
          Attr PgmName = "Description"
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Specifies whether to enable or disable the action,
      !  which at alarm state implies DetectText to be sent or
      !  not. FALSE means that no message will be sent at alarm
      !  state; TRUE means that DetectText is sent at alarm
      !  state.
      !*/
      Object DetectOn $Attribute 7 
        Body SysBody
          Attr PgmName = "DetectOn"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Alarm message. Optional text which will be written out
      !  at alarm state if DetectOn is TRUE.
      !*/
      Object DetectText $Intern 8 
        Body SysBody
          Attr PgmName = "DetectText"
          Attr TypeRef = "pwrs:Type-$String80"
          Attr NiNaAnnot = 2
          Attr NiNaCond = 1
        EndBody
      EndObject
      !/**
      !  Return message. Text which will be written in the event
      !  list at return to normal state.
      !*/
      Object ReturnText $Attribute 9 
        Body SysBody
          Attr PgmName = "ReturnText"
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Specifies the type of the message (=DetectText ) which
      !  will be sent at alarm state.
      !  ALARM -- 64 The message always requires an
      !              acknowledgement and sent to the alarm
      !  
      !  INFO  -- 32 If the message requires acknowledgement is
      !              it sent to the info part of the alarm
      !              window and the event list, otherwise only
      !*/
      Object EventType $Attribute 10 
        Body SysBody
          Attr PgmName = "EventType"
          Attr TypeRef = "pwrb:Type-EventTypeEnum"
        EndBody
      EndObject
      !/**
      !  Priorities concerning alarm messages.
      !  
      !   -- 67   A-alarm; highest priority. (=43Hex)
      !   -- 66   B-alarm  (= 42Hex)
      !   -- 65   C-alarm  (= 41Hex)
      !   -- 64   D-alarm ; lowest priority. (=40Hex)
      !*/
      Object EventPriority $Attribute 11 
        Body SysBody
          Attr PgmName = "EventPriority"
          Attr TypeRef = "pwrb:Type-EventPrioEnum"
        EndBody
      EndObject
      !/**
      !  Bit map. A combination of flags can be attached to the
      !  message. The possible values are as follows:
      !  
      !  -- Return (1)  If this flag exists the return message ReturnText
      !                 will be sent to the event lists at the out units,
      !  -- Ack (2)     If this flag exists the acknowledgement message
      !                 will be sent to the event lists at the out-units,
      !  -- Bell(4)     If the single out unit has a beep-function this
      !                 will be activated when the message is received.
      !  -- Force (8)   The message is sent to every out unit regardless
      !  -- InfoWindow (16)  If the message is of the type INFO it will be
      !                 placed in the event list. If this flag exists the
      !                 message is also placed in the INFO square of the
      !                 alarm window where acknowledgement is to be done.
      !  -- Returned (32) The alarm status is set to returned already
      !                 when the alarm is emitted.
      !  -- NoObject (64) Not used
      !  -- Email (128) The message will be handled by the email server
      !                 and forwarded to the specified receiver.
      !  -- SMS (256)   The message will be handled by the SMS server
      !                 and forwarded to the specified receiver.
      !  -- UserDetectTime (512) DetectTime is set by the user when the 
      !                 alarm condition is set.
      !*/
      Object EventFlags $Attribute 12 
        Body SysBody
          Attr PgmName = "EventFlags"
          Attr TypeRef = "pwrb:Type-EventFlagsMask"
        EndBody
      EndObject
      !/**
      !  Reference to a sound object, that defines the sound at the operator
      !  place when the alarm is active. If no sound object is supplied, an
      !  ordinary beep is used. The sound object should be of class Sound
      !  or SoundSequence
      !*/
      Object Sound $Attribute 36
        Body SysBody
          Attr PgmName = "Sound"
          Attr TypeRef = "pwrs:Type-$AttrRef"
        EndBody
      EndObject
      !/**
      !  Optional text supplying more information about the event.
      !  The more text can for example contain actions to be made when an alarm is detected.
      !*/
      Object MoreText $Attribute 37
        Body SysBody
          Attr PgmName = "MoreText"
          Attr TypeRef = "pwrs:Type-$Text256"
        EndBody
      EndObject
      !/**
      !  Recipient for epost and mms alarms.
      !  The recipient is a user defined in the user database in the 
      !  current system group.
      !  Recipient can also be a list of users separated by comma, eg
      !  'dennis, jimmy'. Also symbols defined in the Symbol table in
      !  the PostConfig object can be used. Symbols should be referenced
      !  with a $ sign before the symbol name, eg '$on_duty'.
      !
      !  The users should be defined in the current system group or in a
      !  subgroup to this, If a subgroup is used, the subgroup should
      !  be specified in the recipient name, eg 'sms.dennis'.
      !*/
      Object Recipient $Attribute 38 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String40"
        EndBody
      EndObject
      !/**
      !  Attribute is filled in by the user if the input named
      !  IN is left open. If the input is connected the names
      !  are filled in by the PROVIEW/R system at compilation.
      !*/
      Object Attribute $Attribute 13 
        Body SysBody
          Attr PgmName = "Attribute"
          Attr TypeRef = "pwrs:Type-$AttrRef"
        EndBody
      EndObject
      !/**
      !  Status value. Bit map containing 16 bits where the 8
      !  least significant bits denote the state and the 8 most
      !  significant bits the priority.
      !  The state is a combination of:
      !  
      !     -- 0    Normal state
      !     -- 1    Alarm state
      !     -- 2    Unacknowledged alarm
      !  The priority is one of the priorities EventPriority.
      !  
      !  The following status can exist:
      !     EventPriority + 1 => Priority + alarm state
      !     EventPriority + 3 => Priority + unacknowledged alarm
      !  and alarm state
      !*/
      Object AlarmStatus $Attribute 14 
        Body SysBody
          Attr PgmName = "AlarmStatus"
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Used internal at the event detection.
      !*/
      Object AlarmCheck $Attribute 15 
        Body SysBody
          Attr PgmName = "AlarmCheck"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Specifies if an alarm state will be detected or not.
      !  FALSE means that an alarm state will not be detected;
      !  TRUE means that an alarm state will be detected.
      !*/
      Object DetectCheck $Attribute 16 
        Body SysBody
          Attr PgmName = "DetectCheck"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Specifies if the message has already been sent to the
      !  out units (or more precisely the message handler) or
      !  not. TRUE means that the message has been sent.
      !*/
      Object DetectSend $Attribute 17 
        Body SysBody
          Attr PgmName = "DetectSend"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Date and time when alarm state was detected.
      !*/
      Object DetectTime $Attribute 18 
        Body SysBody
          Attr PgmName = "DetectTime"
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Specifies if the object has returned to normal state or
      !  not. TRUE means that the object has returned to normal
      !  state.
      !*/
      Object ReturnCheck $Attribute 19 
        Body SysBody
          Attr PgmName = "ReturnCheck"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Specifies if the return message, ReturnText, has been
      !  sent to the out units or not. TRUE means that the
      !  return message has been sent.
      !*/
      Object ReturnSend $Attribute 20 
        Body SysBody
          Attr PgmName = "ReturnSend"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Date and time when the last return to normal was
      !  detected.
      !*/
      Object ReturnTime $Attribute 21 
        Body SysBody
          Attr PgmName = "ReturnTime"
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Date and time when the last acknowledgement of normal
      !  state was detected.
      !*/
      Object AckTime $Attribute 22 
        Body SysBody
          Attr PgmName = "AckTime"
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
        EndBody
      EndObject
      !/**
      !  Identity of the out unit (operator) which made an
      !  acknowledgement.
      !*/
      Object AckOutunit $Attribute 23 
        Body SysBody
          Attr PgmName = "AckOutunit"
          Attr TypeRef = "pwrs:Type-$Objid"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !
      ! End of Sup struct
      ! --
      ! ++
      ! DSup inf struct
      !
      !/**
      !  Value of supervised parameter at TimeOfDetect.
      !*/
      Object ActualValue $Attribute 24 
        Body SysBody
          Attr PgmName = "ActualValue"
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Specifies if alarm position is TRUE or FALSE.
      !  FALSE = When the In-signal makes the transition 
      !  1 --> 0 => alarm state
      !  We prefer to avoid this case by inversion of the input signal
      !  TRUE  = When the In-signal makes the transition 
      !  0 --> 1 => alarm state. This is the normal case.
      !*/
      Object CtrlPosition $Attribute 25 
        Body SysBody
          Attr PgmName = "CtrlPosition"
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Used by the SuppressSup object to suppress the alarm.
      !*/
      Object Suppressed $Attribute 39 
        Body SysBody
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !
      ! End of DSup inf struct
      ! --
      ! ++
      ! Timer struct
      !
      !/**
      !  Indicates an active timer.
      !*/
      Object TimerFlag $Intern 26 
        Body SysBody
          Attr PgmName = "TimerFlag"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Points to the next element in the timer queue.
      !*/
      Object TimerNext $Intern 27 
        Body SysBody
          Attr PgmName = "TimerNext"
          Attr Flags |= PWR_MASK_POINTER
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
	  Attr Flags |= PWR_MASK_PRIVATE
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Number of remaining ticks.
      !*/
      Object TimerCount $Intern 28 
        Body SysBody
          Attr PgmName = "TimerCount"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_REDUTRANSFER
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Points to a Do or Dv object or, if these are not used,
      !  to TimerDoDum. After a time of TimerTime the signal
      !  specified by TimerDo is cleared.
      !*/
      Object TimerDO $Intern 29 
        Body SysBody
          Attr PgmName = "TimerDO"
          Attr Flags |= PWR_MASK_POINTER
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_PRIVATE
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Delay in seconds. Specifies when, since an alarm state
      !  has occurred, the message will be sent. If the alarm
      !  state disappears before the time has elapsed no message
      !  is generated.
      !  TimerTime >= the executing period of the PLC program.
      !*/
      Object TimerTime $Intern 30 
        Body SysBody
          Attr PgmName = "TimerTime"
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  Dummy. If TimerDoDum does not point to a Do or Dv
      !  object it points to this attribute.
      !*/
      Object TimerDODum $Intern 31 
        Body SysBody
          Attr PgmName = "TimerDODum"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Identity of this object is set at load file creation.
      !  Used by the run time system.
      !*/
      Object TimerObjDId $Intern 32 
        Body SysBody
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr TypeRef = "pwrs:Type-$Objid"
        EndBody
      EndObject
      !/**
      !  The operator's authorities to change TimerTime. Not
      !  implemented.
      !  
      !   0   -- Changes not allowed.
      !   !=0 -- Changes allowed.
      !*/
      Object TimerAcc $Intern 33 
        Body SysBody
          Attr PgmName = "TimerAcc"
          Attr TypeRef = "pwrs:Type-$Int32"
        EndBody
      EndObject
      !/**
      !  Specifies a valid interval at changes made by the
      !  operator on TimerTime.
      !  
      !  TimerMin <= TimerTime <= TimerMax
      !*/
      Object TimerMin $Intern 34 
        Body SysBody
          Attr PgmName = "TimerMin"
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      Object TimerMax $Intern 35 
        Body SysBody
          Attr PgmName = "TimerMax"
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !
      ! End Timer struct
      ! --
    EndObject
    Object DevBody $ObjBodyDef 2 
      !/**
      !  Specifies if DetectText is to be displayed in the
      !  symbol of the DSup object or not. FALSE means no
      !  displaying and TRUE displaying.
      !*/
      Object ShowDetectText $Intern 1 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  'Attribute' is assigned a value that should not be changed.
      !  Normally the 'Attribute' value is fetched from the object connected 
      !  to the In input pin. If LockAttribute is set, and Attribute is 
      !  assigned a value, this value will not be changed by the compiler.
      !*/
      Object LockAttribute $Intern 3 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      Object PlcNode $Buffer 2 
        Body SysBody
          Attr Class = pwr_eClass_PlcNode
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
    EndObject
    Object GraphPlcNode $GraphPlcNode
      Body SysBody
        Attr object_type = 99
        Attr parameters[0] = 2
        Attr parameters[1] = 0
        Attr parameters[2] = 3
        Attr parameters[3] = 0
        Attr subwindows = 0
        Attr graphmethod = 9
        Attr graphindex = 0
        Attr default_mask[0] = 1
        Attr default_mask[1] = 0
        Attr segname_annotation = 1
        Attr rtbody_annotation = 1
        Attr compmethod = 25
        Attr compindex = 0
        Attr executeordermethod = 2
        Attr tracemethod = 3
        Attr traceindex = 1
        Attr objname = "DSup"
        Attr graphname = "DSup"
        Attr debugpar = "Action"
      EndBody
    EndObject
    Object Template DSup
      Body RtBody
        Attr Control = 1
        Attr EventType = 64
        Attr EventPriority = 67
        Attr EventFlags = 7
        Attr DetectOn = 1
        Attr CtrlPosition = 1
      EndBody
      Body DevBody
        Attr ShowDetectText = 1
      EndBody
    EndObject
    Object PostCreate $DbCallBack
      Body SysBody
        Attr MethodName = "DSup-PostCreate"
      EndBody
    EndObject
    Object PostMove $DbCallBack
      Body SysBody
        Attr MethodName = "DSup-PostMove"
      EndBody
    EndObject
  EndObject
EndSObject
