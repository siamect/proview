! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_xttgraph.wb_load -- Defines the class XttGraph.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Group Operator,NodeConfiguration
!  @Summary Defines the action of a pushbutton in the operator window
!  The XttMultiView object defines a xtt window that is built by a number 
!  Ge graphs, alarm windows, curves other multiviews etc.
!  The window is structured as a table with rows and columns. 
!  The content and layout of each table cell is specified in the Action array. 
!  Each element in the action array correspons to a cell in the table where
!  index 0 is the top cell in the first column, index 1 the second row in
!  the first column etc.
!
!  Example Action array index for a multiview with 3 rows and 3 columns
!  ----------------
!  | 0  | 3  | 6  |
!  ----------------
!  | 1  | 4  | 7  |
!  ----------------
!  | 2  | 5  | 8  |
!  ----------------
!
!  The type of window displayed in a cell is specified in Action[].Type.
!
!  Graph
!  Specify the pwg file in Action[].Action.
!
!  ObjectGraph
!  Specify the pwg file in Action[].Action and the instance object in Action[].Object[0].
!
!  AlarmList and EventList
!  Specify an AlarmView in the Action[]Object[0] attribute.
!
!  MultiView
!  Specify the name of the XttMultiView object in Actino[].Action.
!
!  TrendCurve
!  Specify the DsTrend, DsTrendCurve or PlotGroup object in Action[].Object[0].
!
!  SevHistory
!  Specify the SevHist, SevHistObject or PlotGroup object in Action[].Object[0].
!
!  Video
!  Specify the XttVideo object in Action.Object[0].
!  
!  The multiwiew is opened by the xtt command
!
!  > open multiview 'object' [/width=] [/height=] [/xpos=] [/ypos=]  
!
!  This command can be inserted into an XttGraph object and thus be opened
!  as a fast avail or startup application.
!
! @b See also
!  @classlink OpPlace pwrb_opplace.html
!*/
!
  Object XttMultiView $ClassDef 606 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_Standard
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "XttMultiView"
      EndBody
      !/**
      !  Description of the object.
      !*/
      Object Description $Attribute 1 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      ! Layout management.
      ! - Box   The cells in each row is packed in horizontal boxes, and these boxes are 
      !         then packed in a vertical box.
      ! - Fix   Fix layout with position specified in X, Y and size in Width and Height.
      !         Column and row doesn't have any meaning and only specifies the number of cells.
      !         Not resizeable.
      ! - Pane  The cells in each row is inserted in horizontal paned windows, and these
      !         Windows are then inserted in vertical paned windows. Maximum two rows and two
      !         columns are supported.
      ! - Table The cells are ordered in rows and columns. Not resizable.
      !*/
      Object Layout $Attribute 2
        Body SysBody
          Attr TypeRef = "pwrb:Type-MultiViewLayoutEnum"
          Attr Flags = 0
        EndBody
      EndObject
      !/**
      ! Number of columns.
      !*/
      Object Columns $Attribute 3
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags = 0
        EndBody
      EndObject
      !/**
      ! Number of rows.
      !*/
      Object Rows $Attribute 4
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !    Array with actions for each element of the view.
      !*/
      Object Action $Attribute 5
        Body SysBody
          Attr TypeRef = "pwrb:Class-MultiViewElement"
          Attr Flags |= PWR_MASK_ARRAY 
          Attr Flags |= PWR_MASK_CLASS
	  Attr Elements = 25
        EndBody
      EndObject
      !/**
      ! Title of the window.
      !*/
      Object Title $Attribute 6
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String40"
        EndBody
      EndObject
      !/**
      ! Text of the pushbutton in the operator window (NYI).
      !*/
      Object ButtonText $Attribute 7
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String40"
        EndBody
      EndObject
      !/**
      ! X position in pixel for the window.
      !*/
      Object X $Attribute 8
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Int32"
          Attr Flags = 0
        EndBody
      EndObject
      !/**
      ! Y position in pixel for the window.
      !*/
      Object Y $Attribute 9
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Int32"
          Attr Flags = 0
        EndBody
      EndObject
      !/**
      ! Width of the window in pixel.
      !*/
      Object Width $Attribute 10
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Int32"
          Attr Flags = 0
        EndBody
      EndObject
      !/**
      ! Height of the window in pixel.
      !*/
      Object Height $Attribute 11
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Int32"
          Attr Flags = 0
        EndBody
      EndObject
      !/**
      ! Options for the graph.
      !
      ! - FullScreen  Open the graph as full screen without frame.
      ! - Maximize    Open the graph maximized, not covering the operator window (NYI).
      ! - FullMaximize Open the graph maximized, covering the operator window.
      ! - Iconify     Open the graph iconified.
      ! - ColumnSeparators Vertical separators between the columns added.
      ! - RowSeparators Horizontal separators between the rows added.
      !*/
      Object Options $Attribute 12
        Body SysBody
          Attr TypeRef = "pwrb:Type-MultiViewOptionsMask"
          Attr Flags = 0
        EndBody
      EndObject
      !/**
      !  @Summary Configuration status.
      !  Configuration status.
      !  Status in the development environment for an hierarchy, 
      !  plcprogram or process graph, set by the designer to indicate
      !  the current state. If a status is set for an object, it is 
      !  marked red, yellow or green in the configurator. Also the 
      !  status text if viewed surrounded by angel brackets.
      !*/
      Object ConfigurationStatus $Attribute 13
        Body SysBody
          Attr TypeRef = "pwrs:Type-$ConfigStatusEnum"
        EndBody
      EndObject
    EndObject
    Object Template XttMultiView
      Body RtBody
      EndBody
    EndObject
  EndObject
EndSObject
