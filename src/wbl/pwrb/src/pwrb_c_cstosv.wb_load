! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_cstosv.wb_load -- Defines the class CStoSv.
!
SObject pwrb:Class
!/**
!  @Version 1.0
!  @Code rt_plc_macro_string.h
!  @Group Plc,PlcString
!  @Summary Conditional storage of string value.
!  Conditional storage of string value.
!  @image orm_cstosv_fo.gif
!
!  Conditional storage of a string value on a specified
!  local Sv object.
!  Conditional is aimed at the con-input, which is
!  supposed to be connected.
!  
!  The conditional input signal can be inverted by means
!  of the Attribute Editor.
!
!  The string input can be connected to an output of type String.
!  It can also be hidden and instead, a constant string can be inserted,
!  as a value of the input. The constant string is displayed in the plc-sheet.
!  
!  It is not allowed, by means of a function in C or PLC
!  programs, to write in any of the inputs.
!*/
  Object CStoSv $ClassDef 305 
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_RtConnectionsAndDevBodies
      Attr Flags = pwr_mClassDef_DevOnly
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "cstosv"
      EndBody
      !/**
      !  @Summary Input string.
      !  The input is connected to a string value or left
      !  open. In the latter case the value of In, is considered
      !  to be stored.
      !*/
      Object In $Input 1 
        Body SysBody
          Attr PgmName = "ActualValue"
          Attr Flags |= PWR_MASK_RTVIRTUAL
          Attr Flags |= PWR_MASK_DEVBODYREF
          Attr TypeRef = "pwrs:Type-$String80"
          Attr GraphName = "VAL"
          Attr NiNaAnnot = 2
        EndBody
      EndObject
      !/**
      !  Specifies whether a storage will be done or not. FALSE
      !  means no storage and TRUE means storage of an analog
      !  value.
      !*/
      Object Cond $Input 2 
        Body SysBody
          Attr PgmName = "Cond"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_RTVIRTUAL
          Attr Flags |= PWR_MASK_DEVBODYREF
          Attr Flags |= PWR_MASK_NOEDIT
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr GraphName = "con"
        EndBody
      EndObject
    EndObject
    Object DevBody $ObjBodyDef 2 
      !/**
      !  Specifies the name of the object where to store the
      !  value.
      !*/
      Object SvObject $Intern 1 
        Body SysBody
          Attr PgmName = "SvObject"
          Attr TypeRef = "pwrs:Type-$AttrRef"
          Attr GraphName = "In"
          Attr NiNaAnnot = 1
          Attr NiNaSegments = 1
        EndBody
      EndObject
      !/**
      !  Specifies how many segments of the Sv object name that
      !  is to be displayed in the symbol of the CStoSv object.
      !  The segments are counted from behind.
      !*/
      Object SvObjectSegments $Intern 2 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Int32"
        EndBody
      EndObject
      Object PlcNode $Buffer 3 
        Body SysBody
          Attr Class = pwr_eClass_PlcNode
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
    EndObject
    Object GraphPlcNode $GraphPlcNode
      Body SysBody
        Attr object_type = 261
        Attr parameters[0] = 2
        Attr parameters[1] = 0
        Attr parameters[2] = 0
        Attr parameters[3] = 0
        Attr subwindows = 0
        Attr graphmethod = 8
        Attr graphindex = 1
        Attr default_mask[0] = 3
        Attr default_mask[1] = 0
        Attr segname_annotation = 0
        Attr devbody_annotation = 1
        Attr rtbody_annotation = 1
        Attr compmethod = 11
        Attr compindex = 0
        Attr tracemethod = 0
        Attr traceindex = 1
        Attr connectmethod = 18
        Attr executeordermethod = 2
        Attr objname = "CStoSv"
        Attr graphname = "CStoSv"
        Attr debugpar = "Cond"
      EndBody
    EndObject
    Object Template CStoSv
      Body RtBody
        Attr Cond = 1
      EndBody
      Body DevBody
        Attr SvObjectSegments = 2
      EndBody
    EndObject
  EndObject
EndSObject
