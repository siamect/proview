! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrb_c_cyclesup.wb_load -- Defines the class CycleSup.
!
SObject pwrb:Class
!/**
! @Code rt_csup.c
! @Group Supervision,NodeConfiguration
! @Summary Object used for supervision of a plc thread
! Object used for supervision of a plc thread. A max delay time is specified
! and aswell the action that should be taken when a delay occurs. Several 
! objects with different action can be used for one plc thread.
! 
! Delay is detected by every thread and rt_emon.
! If thread itself is hanging in execution, delay could anyway be detected by
! another thread or by rt_emon. This depends of course on at what priorities 
! the processes are running.
!*/
  Object CycleSup $ClassDef 281
    Body SysBody
      Attr Editor = pwr_eEditor_AttrEd
      Attr Method = pwr_eMethod_Standard
      Attr PopEditor = 2
    EndBody
    Object RtBody $ObjBodyDef 1 
      Body SysBody
        Attr StructName = "CycleSup"
      EndBody
      !/**
      !  Maximum delay time [s]. When a delay longer than this occurs take specified action.
      !*/
      Object MaxDelay $Attribute 1
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  Same as 'MaxDelay' but represented as a delta-time.
      !*/
      Object DelayLimit $Attribute 2
        Body SysBody
          Attr TypeRef = "pwrs:Type-$DeltaTime"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Action to be taken if a delay occurs. 1 = Alarm, 2 = Stall.
      !*/
      Object DelayAction $Attribute 3
        Body SysBody
          Attr TypeRef = "pwrb:Type-SupDelayActionEnum"
        EndBody
      EndObject
      !/**
      !  Number of delays that has occured.
      !*/
      Object DelayCount $Attribute 4
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Number of cycles the CycleSup-object has been monitored by rt_emon
      !*/
      Object DetectCount $Attribute 5
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Number of cycles for plc thread.
      !*/
      Object CycleCount $Attribute 6
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Next time limit for a delay to occur.
      !*/
      Object NextLimit $Attribute 7
        Body SysBody
          Attr TypeRef = "pwrs:Type-$DeltaTime"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Time for the last delay that occured.
      !*/
      Object LastDelay $Attribute 8
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Time when the first delay occured.
      !*/
      Object DelayedTime $Attribute 9
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Delay detected by plc thread itself. Reseted by rt_emon when it detects it.
      !*/
      Object Delayed $Attribute 10
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE 
          Attr Flags |= PWR_MASK_NOEDIT 
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  rt-emon has detected a delay. Reset when thread running timely again.
      !*/
      Object DelayNoted $Attribute 11
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE 
          Attr Flags |= PWR_MASK_NOEDIT 
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Time when thread started running timely the last time.
      !*/
      Object TimelyTime $Attribute 12
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Thread is running timely (no delay).
      !*/
      Object Timely $Attribute 13
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE 
          Attr Flags |= PWR_MASK_NOEDIT 
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      ! ++
      ! Sup struct
      !
      !/**
      !  Specifies whether to enable or disable the supervision.
      !  Note that blocking is done when Control is FALSE. The
      !  input signal can be inverted.
      !  
      !  FALSE disables the supervision and TRUE or open input
      !  enables the supervision.
      !*/
      Object Control $Input 14
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Specifies the status of supervised quantity. FALSE
      !  means normal state and TRUE means alarm state.
      !  The output signal can for instance be used to activate
      !  an action sequence at alarm state.
      !*/
      Object Action $Attribute 15
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_NOEDIT
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Specifies if the alarm state has been acknowledged or
      !  not. FALSE means that unacknowledged alarm exists. The
      !  output is set TRUE after booting and when the alarm
      !  state has been acknowledged.
      !*/
      Object Acked $Attribute 16
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE 
          Attr Flags |= PWR_MASK_NOEDIT 
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Specifies whether to enable or disable the blocking. No
      !  messages from the supervision object will be sent away
      !  as long as the object is blocked. The blocking does not
      !  influence on the 'act' output of the object.
      !  
      !  FALSE disables the the blocking and TRUE enables the
      !  blocking. When a supervisory object in alarm position
      !  is blocked current messages will be cancelled.
      !  Blocking /deblocking is done by means of the 'Alarm
      !  Blocking Window' in the operator environment.
      !*/
      Object Blocked $Attribute 17
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE 
          Attr Flags |= PWR_MASK_NOEDIT 
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Optional text to describe the object.
      !*/
      Object Description $Attribute 18
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Specifies whether to enable or disable the action,
      !  which at alarm state implies DetectText to be sent or
      !  not. FALSE means that no message will be sent at alarm
      !  state; TRUE means that DetectText is sent at alarm
      !  state.
      !*/
      Object DetectOn $Attribute 19
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_NOEDIT 
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Alarm message. Optional text which will be written out
      !  at alarm state if DetectOn is TRUE.
      !*/
      Object DetectText $Attribute 20
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Return message. Text which will be written in the event
      !  list at return to normal state.
      !*/
      Object ReturnText $Attribute 21
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String80"
        EndBody
      EndObject
      !/**
      !  Specifies the type of the message (=DetectText ) which
      !  will be sent at alarm state.
      !  ALARM -- 64 The message always requires an
      !              acknowledgement and sent to the alarm
      !  
      !  INFO  -- 32 If the message requires acknowledgement is
      !              it sent to the info part of the alarm
      !              window and the event list, otherwise only
      !*/
      Object EventType $Attribute 22
        Body SysBody
          Attr TypeRef = "pwrb:Type-EventTypeEnum"
        EndBody
      EndObject
      !/**
      !  Priorities concerning alarm messages.
      !  
      !   -- 67   A-alarm; highest priority. (=43Hex)
      !   -- 66   B-alarm  (= 42Hex)
      !   -- 65   C-alarm  (= 41Hex)
      !   -- 64   D-alarm ; lowest priority. (=40Hex)
      !*/
      Object EventPriority $Attribute 23
        Body SysBody
          Attr TypeRef = "pwrb:Type-EventPrioEnum"
        EndBody
      EndObject
      !/**
      !  Bit map. A flag combination may be attached to the
      !  message:
      !  
      !  1  =   If this flag exists the return message
      !         ReturnText will be sent to the event lists of
      !  
      !  2  =   If this flag exists the acknowledgement message
      !         will be sent to the event lists of the out
      !  
      !  4  =   If the out unit has a peep-function this will
      !         be activated when the message is received.
      !  
      !  8  =   The message is sent to every out unit
      !  
      !  16 =   If the message is of the type INFO it will be
      !         placed in the event list. If this flag exists
      !         the message is also placed in the INFO square
      !         of the alarm window where acknowledgement is to
      !*/
      Object EventFlags $Attribute 24
        Body SysBody
          Attr TypeRef = "pwrb:Type-EventFlagsMask"
        EndBody
      EndObject
      !/**
      !  Reference to a sound object, that defines the sound at the operator
      !  place when the alarm is active. If no sound object is supplied, an
      !  ordinary beep is used. The sound object should be of class Sound
      !  or SoundSequence
      !*/
      Object Sound $Attribute 46
        Body SysBody
          Attr PgmName = "Sound"
          Attr TypeRef = "pwrs:Type-$AttrRef"
        EndBody
      EndObject
      !/**
      !  Optional text supplying more information about the event.
      !  The more text can for example contain actions to be made when an alarm is detected.
      !*/
      Object MoreText $Attribute 47
        Body SysBody
          Attr PgmName = "MoreText"
          Attr TypeRef = "pwrs:Type-$Text256"
        EndBody
      EndObject
      !/**
      !  Recipient for epost and mms alarms.
      !  The recipient is a user defined in the user database in the 
      !  current system group.
      !  Recipient can also be a list of users separated by comma, eg
      !  'dennis, jimmy'. Also symbols defined in the Symbol table in
      !  the PostConfig object can be used. Symbols should be referenced
      !  with a $ sign before the symbol name, eg '$on_duty'.
      !
      !  The users should be defined in the current system group or in a
      !  subgroup to this, If a subgroup is used, the subgroup should
      !  be specified in the recipient name, eg 'sms.dennis'.
      !*/
      Object Recipient $Attribute 48 
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String40"
        EndBody
      EndObject
      !/**
      !  Attribute is filled in by the user if the input named
      !  IN is left open. If the input is connected the names
      !  are filled in by the PROVIEW/R system at compilation.
      !*/
      Object Attribute $Attribute 25
        Body SysBody
          Attr TypeRef = "pwrs:Type-$AttrRef"
        EndBody
      EndObject
      !/**
      !  Status value. Bit map containing 16 bits where the 8
      !  least significant bits denote the state and the 8 most
      !  significant bits the priority.
      !  The state is a combination of:
      !  
      !     -- 0    Normal state
      !     -- 1    Alarm state
      !     -- 2    Unacknowledged alarm
      !  The priority is one of the priorities EventPriority.
      !  
      !  The following status can exist:
      !     EventPriority + 1 => Priority + alarm state
      !     EventPriority + 3 => Priority + unacknowledged alarm
      !  and alarm state
      !*/
      Object AlarmStatus $Attribute 26
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Used internal at the event detection.
      !*/
      Object AlarmCheck $Attribute 27
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Specifies if an alarm state will be detected or not.
      !  FALSE means that an alarm state will not be detected;
      !  TRUE means that an alarm state will be detected.
      !*/
      Object DetectCheck $Attribute 28
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Specifies if the message has already been sent to the
      !  out units (or more precisely the message handler) or
      !  not. TRUE means that the message has been sent.
      !*/
      Object DetectSend $Attribute 29
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Date and time when alarm state was detected.
      !*/
      Object DetectTime $Attribute 30
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Specifies if the object has returned to normal state or
      !  not. TRUE means that the object has returned to normal
      !  state.
      !*/
      Object ReturnCheck $Attribute 31
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Specifies if the return message, ReturnText, has been
      !  sent to the out units or not. TRUE means that the
      !  return message has been sent.
      !*/
      Object ReturnSend $Attribute 32
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Date and time when the last return to normal was
      !  detected.
      !*/
      Object ReturnTime $Attribute 33
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Date and time when the last acknowledgement of normal
      !  state was detected.
      !*/
      Object AckTime $Attribute 34
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Time"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Identity of the out unit (operator) which made an
      !  acknowledgement.
      !*/
      Object AckOutunit $Attribute 35
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Objid"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !
      ! End of Sup struct
      ! --
      ! ++
      ! Timer struct
      !
      !/**
      !  Indicates an active timer.
      !*/
      Object TimerFlag $Attribute 36
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Points to the next element in the timer queue.
      !*/
      Object TimerNext $Attribute 37
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_POINTER
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_PRIVATE
        EndBody
      EndObject
      !/**
      !  Number of remaining ticks.
      !*/
      Object TimerCount $Attribute 38
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Points to a Do or Dv object or, if these are not used,
      !  to TimerDoDum. After a time of TimerTime the signal
      !  specified by TimerDo is cleared.
      !*/
      Object TimerDO $Attribute 39
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_POINTER
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
          Attr Flags |= PWR_MASK_PRIVATE
        EndBody
      EndObject
      !/**
      !  Delay in seconds. Specifies when, since an alarm state
      !  has occurred, the message will be sent. If the alarm
      !  state disappears before the time has elapsed no message
      !  is generated.
      !  TimerTime >= the executing period of the PLC program.
      !*/
      Object TimerTime $Attribute 40
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  Dummy. If TimerDoDum does not point to a Do or Dv
      !  object it points to this attribute.
      !*/
      Object TimerDODum $Attribute 41
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
          Attr Flags |= PWR_MASK_STATE
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  Identity of this object is set at load file creation.
      !  Used by the run time system.
      !*/
      Object TimerObjDId $Attribute 42
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Objid"
          Attr Flags |= PWR_MASK_INVISIBLE
        EndBody
      EndObject
      !/**
      !  The operator's authorities to change TimerTime. Not
      !  implemented.
      !  
      !   0   -- Changes not allowed.
      !   !=0 -- Changes allowed.
      !*/
      Object TimerAcc $Attribute 43
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Int32"
        EndBody
      EndObject
      !/**
      !  Specifies a valid interval at changes made by the
      !  operator on TimerTime.
      !  
      !  TimerMin <= TimerTime <= TimerMax
      !*/
      Object TimerMin $Attribute 44
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !*/
      Object TimerMax $Attribute 45
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !
      ! End Timer struct
      ! --
    EndObject
    Object Template CycleSup
      Body RtBody
        Attr Control = 1
        Attr DelayAction = 1
        Attr EventType = 64
        Attr EventPriority = 67
        Attr EventFlags = 7
        Attr DetectOn = 1
      EndBody
    EndObject
    Object PostCreate $DbCallBack
      Body SysBody
        Attr MethodName = "CycleSup-PostCreate"
      EndBody
    EndObject
    Object PostMove $DbCallBack
      Body SysBody
        Attr MethodName = "CycleSup-PostMove"
      EndBody
    EndObject
  EndObject
EndSObject
