! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrs_t_typeid.wb_load -- Defines the basic type TypeId
!
SObject pwrs:Type
!/**
!  @Version 1.0
!  @Code pwr.h
!  @Group BasicTypes,Types
!  Type identity. Basic type.
!
!  Every type has a unique identity, derived from the classvolume
!  identity and the type index.
!
!  A type is described by a typedefinition object in a class volume. This
!  objects has a specific object identity, which is specified by the vid, tyg
!  and tix.
!  @image orm_typeid_1.gif
!  The figure above describes an objid for typedefinition objects. The black fields
!  must have the values specified in the figure, the gray fields are reserved
!  for future use.
! @b vid
!  The volume identity of the class volume where the class i defined. Only the
!  two lower entities of the volume identity can be used.
! @b tyg
!  The type group. The groups of typedefinition objects are:
!    0     Basic types, i.e. types defined with a $Type object.
!    1     Derived types, i.e. types defined with a $TypeDef object.
!    2-15  Reserved for future use.
! @b tix
!  The index of a type within a classvolume. The tix consists of 11 bits, which
!  implies that each group in a class volume can have types with index in the 
!  interval [1,2047]
!
! @b TypeId
!  The typeid is a 32-bit reduction of the 64-bit object identity of the 
!  Type or TypeDef object for the type. It contains the vid, tyg and tix of the type.
!  @image orm_typeid_2.gif
!  If the type is a class, the typeid contains the vid, cix and bix for the class.
!  So far the bix is always 1, only an RtBody or SysBody can be a type.
!  @image orm_typeid_3.gif
!
! @b c-binding
!  The classid is defined with a #define statement of type pwr_t<type name>
!  in the struct file for the the classvolume.
!  For system types, these definitions reside in pwr.h.
!*/
  Object $TypeId pwr_eClass_Type pwr_eTix_TypeId
    Body SysBody
      Attr Type = pwr_eType_TypeId
      Attr Size = 4
    EndBody
  EndObject
EndSObject
