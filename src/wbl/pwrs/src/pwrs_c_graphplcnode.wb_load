! 
!  ProviewR   Open Source Process Control.
!  Copyright (C) 2005-2021 SSAB EMEA AB.
! 
!  This file is part of ProviewR.
!
!  This program is free software; you can redistribute it and/or 
!  modify it under the terms of the GNU General Public License as 
!  published by the Free Software Foundation, either version 2 of 
!  the License, or (at your option) any later version.
!
!  This program is distributed in the hope that it will be useful 
!  but WITHOUT ANY WARRANTY; without even the implied warranty of 
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
!  GNU General Public License for more details.
!
!  You should have received a copy of the GNU General Public License 
!  along with ProviewR. If not, see <http://www.gnu.org/licenses/>
! 
!  Linking ProviewR statically or dynamically with other modules is
!  making a combined work based on ProviewR. Thus, the terms and
!  conditions of the GNU General Public License cover the whole 
!  combination.
! 
!  In addition, as a special exception, the copyright holders of
!  ProviewR give you permission to, from the build function in the
!  ProviewR Configurator, combine ProviewR with modules generated by the
!  ProviewR PLC Editor to a PLC program, regardless of the license
!  terms of these modules. You may copy and distribute the resulting
!  combined work under the terms of your choice, provided that every 
!  copy of the combined work is accompanied by a complete copy of 
!  the source code of ProviewR (the version used to produce the
!  combined work), being distributed under the terms of the GNU 
!  General Public License plus this exception.
!
!  pwrs_c_graphplcnode.wb_load -- Defines the class GraphPlcNode.
!
SObject pwrs:Class
!/**
!  @Version 1.0
!  @Group ClassDefinition
!  Description class for a Buffer in plc objects.
!  The buffer contains graphic data used by the plc editor.
!*/
  Object $GraphPlcNode $ClassDef pwr_eCix_GraphPlcNode
    Body SysBody
      Attr Flags |= pwr_mClassDef_DevOnly
      Attr Flags |= pwr_mClassDef_System
    EndBody
    Object SysBody $ObjBodyDef 1
      Body SysBody
        Attr StructName = "GraphPlcNode"
      EndBody
      !/**
      !  Plceditor type for the class.
      !*/
      Object object_type $Attribute 1
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
          Attr Flags |= PWR_MASK_ALWAYSWBL
        EndBody
      EndObject
      !/**
      !  @Summary Number of input, intern and output attributes.
      !  Number of input, intern and output attributes.
      !  Element 0 : the number of input attributes.
      !  Element 1 : the number of intern attributes.
      !  Element 3 : the number of output attributes.
      !  Element 4 : not used.
      !*/
      Object parameters $Attribute 2
        Body SysBody
          Attr Flags |= PWR_MASK_ARRAY
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr Elements = 4
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Number of plc subwindows.
      !*/
      Object subwindows $Attribute 3
        Body SysBody
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Class of subwindows.
      !*/
      Object subwindow_class $Attribute 4
        Body SysBody
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 2
          Attr TypeRef = "pwrs:Type-$ClassId"
        EndBody
      EndObject
      !/**
      !  Not used.
      !*/
      Object sw_page_x $Attribute 5
        Body SysBody
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 2
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  Not used.
      !*/
      Object sw_page_y $Attribute 6
        Body SysBody
          Attr Flags |= PWR_MASK_ARRAY
          Attr Elements = 2
          Attr TypeRef = "pwrs:Type-$Float32"
        EndBody
      EndObject
      !/**
      !  @Summary Method for drawing the plc symbol.
      !  Method for drawing the plc symbol.
      !  
      !  0: The ordinary symbol for an object. Symbol with 
      !      - header row containing class name, 
      !      - footer row containing object names,
      !      - leadnames for all inputs and outputs.
      !  @image orm_filter_fo.gif
      !  1: Symbol for objects where the inputs and outputs doesn't have to
      !     be specified. 
      !     Symbol without leadnames for inputs and outputs. 
      !  @image orm_inv_fo.gif
      !  2: Equivalent with method 0, but equiped with an extra annotation
      !     field above the footer.
      !  3: Method for Text objects.
      !  4: Method for objects with special design.
      !  5: Method for a grafcet order.
      !  6: Method for document objects.
      !  7: Method for singlerow objects with maximum one input and one output.
      !     Displays the class name and object name in the object.
      !  @image orm_scantime_fo.gif
      !  8 and 9: This method uses method 7, 15 or 0 dependent on the number of
      !     used inputs and outputs.
      !  14: Method for singleline arithm objects.
      !  15: Method for double row objects with maximum two inputs and two outputs.
      !  @image orm_cstoiv_fo.gif
      !*/
      Object graphmethod $Attribute 7
        Body SysBody
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Index used by the grapich method.
      !*/
      Object graphindex $Attribute 8
        Body SysBody
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  @Summary The default input and output configuration.
      !  The default input and output configuration.
      !  An array of bitmasks.
      !  Element 0: mask for input attributes, if a bit is set, the corresponding
      !             input will be displayed.
      !  Element 1: mask for output attributes, if a bit is set, the corresponding
      !             output will be displayed.
      !  Element 2: mask for input attributes, if a bit is set, the corresponding
      !             output will be inverted.
      !*/
      Object default_mask $Attribute 9
        Body SysBody
          Attr Flags |= PWR_MASK_ARRAY
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr Elements = 2
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Annotation in which the object name will be displayed.
      !  The common graph methods uses annotation 1 to display the object name.
      !*/
      Object segname_annotation $Attribute 10
        Body SysBody
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Attributes whose value will be displayed in an annotation
      !  will be searched for in RtBody.
      !*/
      Object rtbody_annotation $Attribute 11
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  Attributes whose value will be displayed in an annotation
      !  will be serach for in DevBody.
      !*/
      Object devbody_annotation $Attribute 12
        Body SysBody
          Attr TypeRef = "pwrs:Type-$Boolean"
        EndBody
      EndObject
      !/**
      !  @Summary Compilation method. Method that generates plc code for the object.
      !  Compilation method. Method that generates plc code for the object.
      !
      !  2:  Method for object without any plc code.
      !  4:  Method for an object with a standard function call.
      !  5:  Method for an object with a standard macro call.
      !  58: Method for an object with template plc code in class definition.
      !*/
      Object compmethod $Attribute 13
        Body SysBody
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Not used.
      !*/
      Object compindex $Attribute 14
        Body SysBody
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      ! Metod used by trace.
      !*/
      Object tracemethod $Attribute 15
        Body SysBody
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Not used.
      !*/
      Object traceindex $Attribute 16
        Body SysBody
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  @Summary Method to connect the object to another object.
      !  Method to connect the object to another object.
      !  0: No connect function.
      !*/
      Object connectmethod $Attribute 17
        Body SysBody
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  @Summary Method to calculate the execute order in the plc program.
      !  Method to calculate the execute order in the plc program.
      !  0: No executable code for this object.
      !  2: Ordinary method for objects with executable code.
      !*/
      Object executeordermethod $Attribute 18
        Body SysBody
          Attr Flags |= PWR_MASK_ALWAYSWBL
          Attr TypeRef = "pwrs:Type-$UInt32"
        EndBody
      EndObject
      !/**
      !  Name for class displayed in the plc editor.
      !*/
      Object objname $Attribute 19
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String16"
        EndBody
      EndObject
      !/**
      !  Name for an object instance created in the plc editor.
      !*/
      Object graphname $Attribute 20
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String16"
        EndBody
      EndObject
      !/**
      !  Name of the attribute that trace uses to display the status of the object.
      !*/
      Object debugpar $Attribute 21
        Body SysBody
          Attr TypeRef = "pwrs:Type-$String32"
        EndBody
      EndObject
    EndObject
    Object Template $GraphPlcNode
      Body SysBody
        Attr object_type = 11
!        Attr segname_annotation = 1
!        Attr compmethod = 4
!        Attr executeordermethod = 2
      EndBody
    EndObject
    Object AnteCreate $DbCallBack
      Body SysBody
        Attr MethodName = "$ObjBodyDef-AnteCreate"
      EndBody
    EndObject
  EndObject
EndSObject
