
<topic> __DocumentTitlePage

<image> pwr_logga_doc.png





<h1> Ge konstruktörshandbok












<hr>
2021-01-14
Version 5.8.0	
<hr>
</topic>

<topic> __DocumentInfoPage


Copyright (C) 2005-2021 SSAB EMEA AB

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
Texts.


</topic>

<chapter>

<option> printdisable
<topic>index
Ge Konstruktörshandbok

Inledning <link>geref_intro
Terminologi <link>geref_term
Arbeta med editorn <link>geref_work
Fönster <link>geref_windows
Objekt <link>geref_objects
SubGraf <link>geref_subgraph
Dynamik <link>geref_dynamic
Aktion <link>geref_action
Skapa en SubGraf <link>geref_create_subgraph
Grupper <link>geref_groups
GIF och JPEG bilder <link>geref_images
Kopplingar <link>geref_connections
Editera <link>geref_edit
Testa <link>geref_testing
Utvecklingsmiljö <link>geref_development
Kommandon <link>geref_command
Script <link>geref_script
Web bilder <link>geref_web
Runtime <link>geref_runtime
Script och kommandon <link>gecmd
</topic>
<option> printenable

<topic>geref_intro
Inledning

Ge är en editor för att bygga bilder för underhåll och enklare operatörskommunikation i 
ProviewR. Editorn är integrerad med ProviewR's utvecklingsmiljö och startas från navigatören.
Bilderna byggs upp av bas-objekt i form av rektanglar, cirklar, linjer och texter, och av 
subgrafer, som är en slags sammansatta objekt. Ge innehåller en uppsättning subgrafer för 
några vanliga komponenter: ventiler, motorer, pumpar mm. Andra symboler kan konstruktören 
rita själv i Ge. Formen på objekten lagras som vektorer vilket, tillsammans med 
transformationsmatriser gör att de kan zoomas, skalas och roteras obegränsat.
I runtime finns en rad olika möjligheter att använda ge-bilderna. De kan startas från xtt 
som motif-applikationer ( på VMS, Lynx eller Linux), eller som java-applikationer (på Linux).
Bilderna kan även exporteras som Java-applets vilka kan exekveras av webläsare som Internet
Explorer eller Netscape. Vidare kan man exportera subgrafer som java-bönor vilka kan 
användas i en java-IDE som t ex JBuilder.
</topic>
</chapter>

<chapter>
<topic>geref_term
Terminologi

Här förklaras några termer som används i manualen.
<h2>Graf
En bild består av en graf.
<h2>Subgraf
En samling basobjekt kan sparas som en subgraf. En subgraf fungerar som en slags klass eller 
mall, och i en graf kan man skapa instanser av subgrafen, subgraf-objekt. Lagrade subgrafer 
hamnar i subgraf-plaletten.
<h2>Basobjekt
Basobjekt är objekt av typen rektanglar, ellipser, linjer, polylinjer, texter, kopplingspunkter
och noter.
<h2>Sammansatta objekt
Mer komplexa objekt. Bar och trend objekt.
<h2>Annotation
Text i en subgraf som kan vara unik för varje instans.
<h2>Komponent
En instans av en subgraf eller en grupp.
<h2>Koppling
En linje som sammanbinder två subgrafer. Linjen kan vara rak eller innehålla brytpunkter som 
delar upp den i
vertikala och horisontala delar.
<h2>Kopplingspunkt
Punkt i en subgraf till vilken man kan fästa en koppling.
<h2>Signal
Signal används generellt som benämning på attribut i ett objekt i ProviewR's realtidsdatabas. 
Ofta är det fråga om värdet för en Di, Do, Dv, Ai, Ao eller Av men det kan vara ett attribut i 
vilket objekt som helst.
<h2>MB1
Vänster musknapp.
<h2>MB2
Musknappen i mitten (om denna saknas kan man ibland trycka ner vänster och höger musknapp 
samtidigt).
<h2>MB3
Höger musknapp.
<h2>Rtdb
ProviewRs realtids-databas.
</topic>
</chapter>

<chapter>
<topic>geref_work
Arbeta med editorn

<option> printdisable
Basobjekt <link>geg_baseobjects
Editering <link>geg_editing
Subgrafer <link>geg_subgraphs
Speciella objekt <link>geg_specialobjects
Dynamik och action <link>geg_dynamics
png, gif och jpg bilder <link>geg_images
Skapa en subgraf <link>geg_createsubgraph
Konfigurera <link>geg_configure
Riktlinjer <link>geg_guidelines
</topic>
<option> printenable

<headerlevel>
<topic>geg_baseobjects
Base objects
Vi ska börja med att titta på enkla objekt som linjer, rektanglar cirklar och polyliner. Dessa
objekt kallas för basobjekt. Basobjekten ligger till vänster i vertygpanelens nedersta rad.

<image>geg_fig1.png
<b>Figur Knappar för att skapa basobjekt

<option> printdisable
Rektangel <link>geg_baseobject_rectangle
Linje <link>geg_baseobject_line
Cirkel <link>geg_baseobject_arc
Polyline <link>geg_baseobject_polyline
Text <link>geg_baseobject_text
<option> printenable
</topic>

<headerlevel>

<topic>geg_baseobject_rectangle
Rektangel
Man ritar en rektangel genom att aktivera rektangelknappen i verktygspanelen, trycka ner höger
musknapp där rektangelns ena hörn ska vara, dra med musknappen intryckt till motsatt hörn och
släppa upp musknappen där. Med default-inställningarna skapas nu en rektangel med en svart 
ram. 

<image> geg_fig3.png
<b>Fig Rektangel

Vi ska nu se hur man kan ändra utseendet på rektangeln. I verktygspanelen finns knapparna
för kant, fyllnad och 3D. De fungerar så att om ett objekt är utvalt, ändas egenskapen på det
utvalda objektet. Samtidigt utgör den aktuella inställningen default värde för nya objekt som
skapas.

<h1>Objekts-editorn
Genom att dubbelklicka på rektangeln öppnas ett fönster där man kan sätta olika egenskaper på
rektangeln. Ett attribut ändras genom att man väljer ut attributet, trycker på pil höger
(eller Ctrl+Q) och matar in the nya värdet.

<image> geg_fig2.png
<b>Fig Objekteditorn

<h1>Fyllnadsfärg
Vi kan fylla rektangeln med färg genom att klicka på Fill knappen i verkygspanelen. 
<image> geg_fig4.png
Färgen ändras genom att först välja ut rektangeln genom att klicka på den, och sedan klicka 
på önskad färg i färg-paletten.
<image> geg_fig5.png
<b>Fig Rektangel med fyllnadsfärg

<h1>Kant
Kanten på rektangeln kan tas bort med Kant knappen i verktygspanelen. Men det krävs att
rektangeln är antingen fylld eller har en 3D ram (se nedan) för att kanten ska kunna tas bort.
Är kanten borttagen kan man addera den med Kant knappen.

<image> geg_fig6.png
<b>Fig Rektangel utan kant

<h1>Kanttjocklek
Tjockleken på kanten kan ändras med Linewidth menyn i verkygspanelen. Välj ut rektangeln och 
ställ in önskad linjebredd. Linjebredden räknas i pixel och en bredd mellan 1 och 8 pixel
kan väljas.

<image> geg_fig7.png
<b>Fig Rektangel med bredare kant

<h1>Kantfärg
Även färgen på kanten kan ändras. Välj ut rektangeln, välj 'Border' i färg-paletten och klicka
på önskad färg.

<image> geg_fig8.png
<b>Fig Ändrad kantfärg

<h1>3D
Med 3D knappen i verktygspanelen ritas kant på rektangeln som ger relief verkan. 
<image> geg_fig9.png
<b>Fig Rektangel med 3D

Bredden på relief kanten kan ändras med attributet shadow_width. Öppna objekts-editorn genom 
att dubbelklicka på rektangeln och sätt ett nytt värde på shadow_width. Enheten på 
shadow_width är % av bredden eller höjden (den minsta av dem).

<image> geg_fig10.png
<b>Fig Bredd 3 % till vänster och 15 % till höger

Man kan även ändra på relief kantens kontrast med shadow_contrast. Genom att öka värdet till 3
blir skuggan mörkare och den ljusa kanten ljusare. Tillåtna värden är 1-3.

Om reliefen ska gå utåt eller inåt påverkas av attributet relief. Up innebär att reliefen
går utåt, dvs den övre kanten färgas ljus och den undre mörk. Vid Down skiftas detta så att
den över färgas mörk och den under ljus, vilket ger effekt av en inåtgående relief. Störst
relief effekt får man om reliefen ritas med samma färg som bakgrunden.

<image> geg_fig11.png
<b>Fig Relief Up till vänster och Down till höger

<h1>Gradient
Med de tre gradient knapparna kan man sätta en gradient på rektangeln, dvs en färgförskjutning
från ljusare till mörkare färgton. 

<image> geg_fig12.png
<b>Fig Rektanglar med olika gradient

I gradient menyn finns ytterligare 17 varianter av gradient att välja mellan. Nedan visas
Horizontal Tube2 som lämpare sig för cylindriska föremål.

<image> geg_fig13.png
<b>Fig Rektangel med gradient Horizontal Tube2

Kontrasten på gradienten kan påverkas med gradient_contrast attributet i objekts-editorn.
Kontrasten kan ha ett värde mellan 0 och 10.

<h1>Rita en kvadrat
För att rita en kvadrat trycker man Ctrl+E (Scale equal) innan man ritar rektangeln. 
Återställ Equal scale genom att högerklicka i arbetsarean.

<h1>Rita flera rektanglar
Om man ska rita flera rektanglar kan man hålla ner Shift-tangenten samtidigt som man klickar 
på rektangel-knappen i vertygspanelen. Då kan man rita flera rektanglar utan att klicka på 
rektangel-knappen för varje ny rektangel. Funktionen återställs genom att högerklicka i 
arbetsarean.
 
</topic>
<topic>geg_baseobject_line
Linje
Man ritar en linje genom att aktivera linje knappen i verktygspanelen, trycka ner höger 
musknapp där linjen ska starta, dra med musknappen intryckt till slutpositionen och där 
släppa upp musknappen. 

<image> geg_fig14.png
<b>Fig Linje

<h1>Linjebredd
Linjebredden kan ändras genom att välja ut linjen och välja bredden i Linewidth menyn.
<image> geg_fig15.png
<b>Fig Linewidth satt till 8

<h1>Färg
Färgen ändras genom att välja ut linjen, klicka på Border i färg-paletten och klicka på önskad
färg.
<image> geg_fig16.png
<b>Fig Färgad linje

<h1>Linjetyp
Det finns ett antal olika linjetyper att välja mellan. Välj ut linjen och aktivera önskad typ
i Linetype menyn

<image> geg_fig17.png
<b>Fig Olika linjetyper

<h1>Horisontella och vertikala linjer
För att rita en horisontell linje trycker man Ctrl+H (MoveRestrictions Horizontal) innan man
ritar linjen. En vertikal linje ritas genom att först trycka Ctrl+G (MoveRestrictions 
Vertical). MoveRestrictions återställs genom att högerklicka i arbetsarean.

<h1>Rita flera linjer
Om man ska rita flera linjer kan man hålla ner Shift-tangenten samtidigt som man klickar på
linje-knappen i vertygspanelen. Då kan man rita flera linjer utan att klicka på linje-knappen
för varje ny linje. Funktionen återställs genom att högerklicka i arbetsarean. 

</topic>

<topic> geg_baseobject_arc
Ellips och cirkel
Rita en ellips genom att välja ellips-knappen i vertygspanelen, trycka ner vänstra musknappen,
dra med knappen intryckt och slutligen släppa upp knappen.

<image> geg_fig20.png
<b>Fig Ellips

Liksom för rektangeln kan man sätta egenskaper för kant, fyllnad, kantfärg, fyllnadsfärg,
3D och gradient. Några exempel visas nedan.
<image> geg_fig18.png
<b>Fig Cirkel med olika kombinationer av kant, fyllnad, 3D och gradient.

<h1>Cirkelbåge
Man kan även rita en cirkelbåge, genom att i objekts-editorn ange angle1 och angle2.
angle1 är vinkeln från den horisontella axeln till segmentets början, och angle2 är vinkeln
för segmentets utbredning.

<h1>Rita flera ellipser
Genom att hålla ner Shift-tangenten samtidigt som man klickar på ellips-knappen i 
vertygspanelen kan man rita flera ellipser utan att klicka på ellips-knappen
för varje ny ellips. Funktionen återställs genom att högerklicka i arbetsarean. 

<image> geg_fig19.png
<b>Fig Cirkel-segment med angle1=30 and angle2=270

</topic>

<topic> geg_baseobject_polyline
Polylinje och polygon
En polylinje ritas genom att klicka på polyline-knappen in vertygspanelen, trycka ner vänster
musknapp vid startpunkten, hålla musknappen intryckt och dra till nästa brytpunkt, släppa upp
musknappen, trycka ner igen och dra till nästa brytpunkt osv. När sista linjen är ritad
högerklickar man i arbetsarean för att avsluta polylinjen.

<image> geg_fig21.png
<b>Fig Polylinje

Olika kombinationer av kant, fyllnad, 3D, gradient, linjebredd och färg kan användas för
polylinjer
<image> geg_fig22.png
<b>Fig Några kombinationer av fyllnad, 3D och gradient

<h1>3D
För att kunna använd 3D effekten på polylinjer bör polylinjen vara sluten, dvs startpunkten
sammanfaller med slutpunkten. För att rita en sluten polylinje aktiverar man Snap to grid i 
verktygspanelen innan man ritar polylinjen.

<h1>Ändra en polylinje
För att flytta en brytpunkt i en polylinje väljer man ut polylinjen och aktiverar sedan 
Edit/Edit Polyline in menyn. Brytpunkterna och ändpunkterna blir nu känsliga man kan flytta
på dem genom att dra med vänstra musknappen.

<h1>Vertikala och horisontella linjer
Ofta vill man enbart ha vertikala och horisontella linjer i polylinjen. Genom att trycka
Ctrl+H (MoveRestrictions horizontal) så blir den första linjen horisontell. Sedan ändras 
riktningen för varje ny del-linje, så att den andra blir vertikal, den tredje horisontal osv. 
Trycker man Ctrl+G (MoveRestrictions vertical) istället blir den första vertikal, den andra 
horisontell osv.
</topic>

<topic> geg_baseobject_text
Text
Texter ritas genom att aktivera text-knappen i verktygspanelen. Klicka i arbetsarean och mata
in texten i inmatningsfältet lägst ner i editorn.

<image> geg_fig23.png
<b>Fig Text

<h1>Objekt attribut
Genom att dubbelklicka på texten öppnas objekteditorn med objektets attribut. Attributet
Adjustment kan ställas in för höger-, mitten-, eller väster-justerad text.

<image> geg_fig24.png
<b>Fig Objekteditorn med val av justering

<h1>Text storlek
Man ändrar storlek på texten med Textsize menyn i verktygspanelen. Välj ut texten och ange 
lämplig storlek i menyn. Man kan även använda skalnings-funktionen för att ändra storlek.

<h1>Font
Fonten ställs in med font menyn in verktygspanelen. De fonter som finns a välja mellan är
Helvetica, Times, New Century Schoolbook, Courier och Lucida Sans. Välj ut texten och ange 
lämplig font i menyn.

<h1>Färg
Text färg väljs genom att markera Text knappen i färg-paletten och sedan klicka på en färg.
<image> geg_fig25.png
<b>Fig Färgad text

<h1>Rotera en text
En text kan roteras i steg om 90 grader genom att använda rotations-knappen i vertygspanelen.
Endast texter som är mitt-justerade, dvs har Adjustment satt till Center i objekteditorn,
kan roteras.
<image> geg_fig26.png
<b>Fig Roterad text

<h1>Ändra en text
För att ändra en text väljer man ut texten och trycker på Ctrl+T (Change Text). Ett
inmatningfält öppnas i editorns nederkant där man kan ange en ny text.

<h1>Bitmap fonter
Normalt används fonter som är fullt skalbara och antialiaserade. I visa lägen kan 
bitmap-fonter vara att föredra. De finns bara i vissa storlekar mellan 8 och 24, men kräver 
avsevärt mindre processorkraft att hantera. Bitmap-fonter väljs genom att sätta BitmapFonts 
i Graph Attributes till 1.

<h1>Fontinställning i fönsterhanteraren
Många fönsterhanterar har inställningsmöjligheter som påverkar fonterna. I Gnome hittar man
inställningar under System/Inställningar/Utseende/Typsnitt. Här kan man välja mellan olika
renderingar.

</topic>
</headerlevel>

<topic> geg_editing
Editering
I det här avsnittet ska vi titta närmare på olika editerings-funktioner, t ex hur man flyttar,
skalar, färgsätter objekt mm.

<h1>Skapa objekt
Hur man skapar basobjekt finns närmare beskrivet i kapitlet om basobjekt ovan. Normalt skapar
man ett objekt genom att klicka på symbolen i verktygspanelen, och klicka eller dra med
MB1 i arbetsarean. Subgrafer skapas genom att välja en subgraf i subgraf-paletten och klicka
med MB2 i arbetsarean.

<h1>Välja ut objekt
Man väljer ut ett objekt med Klick MB1. Ett utvalt objekt markaras med röd färg. Om man vill 
välja ut fler objekt kan man klicka på dessa med Shift/Klick MB1.

För att välja ut objekt inom ett visst område kan man även dra med MB1 i arbetsarean. De 
objekt som ligger inom utvalsrektangeln kommer att väljas ut. Eftersom man även flyttar 
objekt genom att dra med MB1 gäller att att inte få träff på något objekt när man startar 
draget. Om det är det svårt att undvika kan man använda Shift/Drag MB1 istället som adderar 
objekt till utvalslistan.

Notera att när man ändrar färg på ett utvalt objekt så försvinner rödmarkeringen, eftersom
man då visar den nya färgen istället. Men objektet är fortfarande utvalt trots att det inte
är rödmarkerat.

Genom att klicka med MB3 i arbetsarean tömmer man utvalslistan.

<h1>Ta bort objekt
För att ta bort ett objekt väljer man ut det och trycker på Delete knappen. Man kan även ta
bort ett objekt genom att dubbelklicka med MB2 på objektet. Genom att dubbelklicka med MB2 
någonstans i arbetsarean tar man bort alla utvalda objekt.

<h1>Flytta på objekt
Man flyttar på ett objekt genom att dra med MB1. Om man vill flytta flera objekt samtidigt, 
väljer men ut dem och drar i ett av objekten. Alla utvalda objekt följer då med. Om man 
enbart vill flytta vertikalt eller horisontalt, kan man använda 
Functions/MoveRestrictions/Vertical (Ctrl+G) eller Functions/MoveRestrictions/Horizontal 
(Ctrl+H). Dessa funktioner är verksamma tills man återställer med MB3.

Om man har aktiverat Snap to grid i verktygspanelen, justeras objektets position till närmsta
gridpunkt vid en förflyttning.

Man kan även flytta ett objekt med move kommandot. Det ger större precision än om man flyttar
med musen. Man kan flytta genom att ange relativa eller absoluta koordinater. Kombinationer
av relativa och absoluta är också tillåtet. Kommandot för att flytta det utvalda objektet
till punkten (1, 1) är

<c>ge> move selected /absx=1 /absy=1


<h1>Objekt med fix position
Objekt som ligger i bakgrunden är det lätt att flytta på av misstag när man editerar. För
vissa objekt, rektanglar, ellipser och polylinjer, kan man sätta attributet 'fixposition' som
låser objektet vid en viss position.

<h1>Kopiera objekt
Man kopierar objekt genom att välja ut dem, och aktivera Edit/Copy (Ctrl+C) och Edit/Paste 
(Ctrl+V) i menyn. Efter paste blir de nya objekten hängande på markören och genom att klicka 
med MB1 fäster man dem i arbetsarean. Vid kopiering kan man liksom vid förflyttning, välja 
vertikal (Ctrl+G) eller horisontal (Ctrl+H) förflytting.

<h1>Skala ett objekt
Man skalar objekt genom att välja ut dem, klicka på Scale knappen i vertygspanelen, och sedan
dra i den fyrkant som ritas runt objekten. Avsluta med klick MB3. Om man vill att 
proportionerna mellan bredd och höjd ska behållas, trycker man först Ctrl+E (Scale Equal).

Det finns även en knapp för att dubblera storleken på objekten, och en för att halvera
storleken.

<h1>Rotera ett objekt
Man kan rotera ett objekt med rotations-knappen i vertygspanelen. Den roterar utvalda objekt
i steg om 90 grader.

Om man vill ha en annan rotationsvinkel aktiverar man Edit/Rotate i menyn. Observera att 
rektanglar och ellipser endast kan roteras i steg om 90 grader, och för att texter ska
kunna roteras måste attributet Adjustment för texten vara satt till Center.

<h1>Spegling
Det finns två knappar i verktygspanelen för att spegla. En för horisonell spegling och en for
vertikal spegling. Speglingen utförs på utvalda objekt.

<image> geg_fig27.png
<b>Fig Horisontell spegling

<image> geg_fig28.png
<b>Fig Vertikal spegling
<h1>Ändra färg på ett objekt
Det finns tre olika typer av färger man kan välja i färgpaletten, fyllnadsfärg, kantfärg och
textfärg. I paletten finns knapparna Fill, Border och Text där man markerar vilken färgtyp
som ska väljas. När man sedan väljer en färg i paletten ändras färgen på utvalda objekt. 
Den valda färgkombinationen sätts även på nya objekt som skapas.

<b>Fyllnadsfärg
För att sätta fyllnadsfärg på ett objekt, väljer man ut objektet, kontrollerar att Fill är
markerat i paletten, annars klickar man på Fill. Därefter väljer man den färg man vill sätta
på objektet. I exemplet nedan ändras fyllnadsfärgen från blått till grönt.

<image> geg_fig30.png
<b>Fig Fill är markerat och en grön nyans har valts

<image> geg_fig29.png
<b>Fig Fyllnadsfärg ändras från blått till grönt

<b>Kantfärg
Kantfärgen kan ändras på liknande sätt. Här väljer man först Border i färgpaletten, därefter
väljer man en kantfärg som sätts på utvalt objekt.

<image> geg_fig32.png
<b>Fig Border är markerat och en blågrön nyans har valts för kantfärgen

<image> geg_fig31.png
<b>Fig Kantfärg ändras från svart till blågrönt

<b>Textfärg
För att ändra text-färgen väljer man Text i färgpaletten, därefter väljer man en textfärg som
sätts på utvalt objekt.

<image> geg_fig34.png
<b>Fig Text är markerat och en grön nyans har valts för textfärgen

<image> geg_fig33.png
<b>Fig Textfärg ändras från svart till grönt

<h1>Bakgrundsfärg
Man sätter bakgrundsfärgen i bilden genom att välja en fyllnadsfärg i färg-paletten och 
aktivera Functions/Set Background Color i menyn.

<h1>Grid
Det två knapparna Show grid och Snap to grid, tillsammans med Gridsize menyn hanterar 
grid-funktionen. Show grid visar alla gridpunkter, och med Gridsize menyn kan man ställa
in avståndet mellan gridpunkterna. När Snap to grid är aktiverat, justeras koordinater för
objekt som skapas och flyttas till nämaste grid-punkt.

Grid-storleken kan sättas till 1.0, 0.5, 0.25 eller 0.10 i Gridsize menyn. Med 'set gridsize'
kommandot kan man även sätta andra värden på grid-storleken. För att sätta grid-storleken till
0.20 är kommandot

<c>ge> set gridsize 0.20

<h1>Ordna objekt
Det finns ett antal knappar i verktygspanelen för att justera positionen för en serie av 
objekt så att de hamnar på samma horisontella eller vertikala nivå.

Man kan justera läget så att objekten läggs på lika avstånd från varandra.

<h1>Grupper
Man skapar en grupp av en antal objekt genom att välja ut objekten och trycka på Group
knappen i verktygspanelen. Gruppen behandlas sedan som om det vore ett enskilt objekt, t ex
när man väljer ut den, flyttar på den eller skalar den. Vill man ändra på ett del-objekt
i en grupp måste man först lösa upp gruppen med Ungroup knappen, sedan kan man göra ändringen
och gruppera igen.

Grupper har egenskaperna dynamik och aktion, dvs man kan koppla dem till signaler i databasen
och t ex ändra färg på gruppen beroende på signalens status. Man kan även göra dem 
klick-känsliga och sätta signaler när man klickar på dem. Det här är egenskaper som man delar
med subgrafer, men som basobjekten saknar. Vill man sätta dynamik på ett basobjekt, t ex en
rektangel är det dock bara att skapa en grupp med enbart rektangeln, och man har möjlig att 
sätta dynamik och aktion på den. På det här sättet man man göra en indikator, trycknapp eller
stapeldiagram av rektangeln.

<image> geg_fig35.png
<b>Fig Objekteditorn för grupp med attribut för dynamik och aktion

</topic>


<topic> geg_subgraphs
Subgrafer
Subgraf är en grafisk komponent som är uppbyggd av bas-objekt. Ofta symboliserar den ett visst
element i anläggningen, t ex en ventil eller pump, men den kan också vara en trycknapp eller
inmatningsfält.

<h1>Skapa en subgraf
Till höger i editor finns subgrafs-paletten, och man lägger in en subgraf genom att välja
en subgraf i paletten och klicka med MB2 i arbetsarean. I figuren nedan har vi valt en Ventil
under mappen Process.

<image> geg_fig36.png
<b>Fig En subgraf i form av en ventil

De flesta subgrafer kan man sätta 3D och olika typer av gradienter på. Det finns dock en del 
subgrafer som inte är anpassade för detta.

<image> geg_fig38.png
<b>Fig Ventil med 3D till vänster, och 3D + gradient till höger


<h1>Ändra färg
Ventilen i figuren är en monokrom subgraf och dessa kan man ändra färg på genom att välja en
fyllnadsfärg i färgpaletten, på samma sätt som för bas-objekt. Man kan även ändra på kant
färgen och kantbredden.

<image> geg_fig37.png
<b>Fig Blåfärgad ventil

<h1>Polykroma subgrafer
För subgrafer som innehåller olika färger ändrar man färgen med funktionen för att skifta 
färg eller med färgtons paletten. Låt oss skapa en brännare (Process/Burner) som innehåller 
färgerna gult och orange.

<image> geg_fig40.png
<b>Fig Polykrom subgraf

Om vi sätter en fyllnadsfärg tappar vi färgteckningen och brännaren blir enfärgad. I stället
använder vi knapparna för att skifta färg i verkygspanelen (högra knapparna i figuren nedan).
Välj ut subgrafen och klicka på pilarna för att skifta färgen.

<image> geg_fig44.png
<b>Fig Knappar för att skifta färg

Nu roteras färgerna på färgcirkeln så att vi fortfarande har två olika färger is subgrafen, 
och vi behåller den färgkontrast som fanns från början. Man kan även använda knapparna för
att ändra intensitet och ljushet som ligger till vänster om färgskiftknapparna.

<image> geg_fig41.png
<b>Fig Exempel på brännare med skiftade färger

Man kan även använda färgtons-paletten (nedre delen av färgpaletten i figuren nedan). Välj
ut subgrafen och klicka på en färgton i paletten.

<image> geg_fig43.png
<b>Fig Färgtons-paletten

Resultatet blir nu att de olika delarna har samma färgton, men ljuskontrasten mellan olika
delar behålls.

<image> geg_fig42.png
<b>Fig Brännare med olika färgton applicerad

<h1>Kopplingspunkter
Vissa subgrafer innehåller kopplingspunkter som gör att man dra kopplingar mellan subgraferna.
Man skapar en koppling genom att dra med MB2 från en kopplingspunkt i en subgraf, och släppa
upp MB2 vid en kopplingspunkt i en annan subgraf. På kopplingarna kan man sätta linjebredd,
färg och 3D. Släpper man en koppling i arbetsarean, skapas en knutpunkt med kopplingspunkter
i olika riktningar, som man kan dra vidare till andra subgrafer.

<image> geg_fig39.png
<b>Fig Subgrafer med kopplingar

<h1>Dynamik och aktion
Liksom grupper har subgrafer egenskaperna dynamik och aktion, vilket gör att man kan koppla 
dem till signaler i databasen och ändra färg och form beroende på signalens status, eller
göra dem klick-känsliga och sätta signaler när man klickar på dem. Dessutom har subgrafer
ofta en förprogrammerad dynamik eller aktion. En indikator har t ex dynamiken att ändra färg
som default så man behöver bara koppla en signal till den för att den ska fungera.

Låt oss skapa en indikator och se hur vi kan få den att ändra färg. Vi makerar en indikator
Indicator/IndRoundMetalFrame i subgrafs paletten och klickar med MB2 i arbetsarean för att 
skapa indikatorn. För att koppla den till en signal i databasen klicka vi på navigator 
knappen i verktygspanelen. Nu visas plant hierarkin där subgrafspaletten tidigare fanns. Vi 
vill att indikatorn ska visa status på Dv'n H1-Dv3 och letar upp den i planthierarkin. Genom 
att välja ut H1-Dv3 och klicka med Ctrl+Dubbelklick MB1 på indikatorn har vi gjort kopplingen.

<image> geg_fig45.png
<b>Fig En signal kopplas till indikatorn med Ctrl+Dubbelklick MB1

Genom att öppna objekteditorn för indikatorn kan vi kontrollera att kopplingen är gjord.

<image> geg_fig47.png
<b>Fig Objekteditorn för indikatorn

Vi kan se att indikatorn har default dynamiken DigLowColor, som växlar mellan två färger,
och DigLowColor.Attribute är satt till H1-Dv3.ActualValue.

När vi öppnar grafen i rt_xtt kan vi se hur indikatorn växlar mellan grönt och mörkgrått när 
Dv3 växlar mellan 1 och 0.

<image> geg_fig46.png
<b>Fig Indikatorn när dv'n är 1 till vänster och 0 till höger

Om vi tittar på ventilen ovan, så har den lite mer avancerad dynamik. Den kan växla mellan
tre olika färger och måste därför kopplas till två signaler. En signal färgar ventilen röd
för att markera ett fel, och den andra färgar den vit för att markera stängd ventil.

Om vi öppnar objekteditorn för ventilen ser vi att DigError.Attribute ska kopplas till en
signal som indikerar fel, och DigLowColor.Attribute till en signal som markerar att ventilen
är öppen.
<image> geg_fig48.png
<b>Fig Ventil som kopplas till två signaler

I det här fallet gör vi kopplingen i objekteditorn, och markerar H1-Dv4 i plant hierarkin.
Genom att klicka med Ctrl+Dubbelclick MB1 på attributet DigError.Attribute läggs H1-Dv1 in
här. På samma sätt klickar vi in H1-Dv5 på DigLowColor.Attribute. Resultatet ser vi i figuren
nedan. När Dv4 är 0, dvs ventilen stäng, färgas den vit. När Dv4 går hög, dvs ventilen öppnas,
färgas den grön. Om vi sätter felsignalen Dv4 färgas den röd oberoende av värdet på Dv5. Det
beror på att DigError har högre prioritet än DigLowColor. I objekts-editorn är dynamiken 
ordnad efter prioritet så att högst prioritet ligger överst och lägst prioritet underst.

<image> geg_fig49.png
<b>Fig Stängd ventil till vänster, öppen ventil i mitten och felsignal till höger

Om vi vill markera stängd ventil med mörkgrått iställer för vitt, ändrar man på 
DigLowColor.LowColor. Defaultvärdet är Inherit vilket gör att en vit förprogrammerad färg
väljs. Genom att istället välja GrayHigh9 kommer färgen när signalen är låg att bli mörkgrå.
Har man svårt att identifiera färgerna kan man välja ut önskad färg som fyllnadsfärg i 
färg-paletten, och klicka med Ctrl+Dubbelclick MB1 på DigLowColor.LowColor attributet i 
objekts-editorn. Den valda färgen kommer då att läggas in på DigLowColor.LowColor.

<image> geg_fig51.png
<b>Fig LowColor ändrad från Inherit till mörkgrå

<image> geg_fig50.png
<b>Fig Stängd ventil till vänster, öppen ventil i mitten och felsignal till höger

</topic>

<topic> geg_specialobjects
Speciella objekt
Förutom bas-objekt och subgrafer finns det en uppsättning lite mer komplexa objekt. Dessa
objekt återfinns i subgraf-paletten. Objekten är

Window <link>geg_specialobjects_window
TabbedWindow <link>geg_specialobjects_tabbedwindow
Slider <link>geg_specialobjects_slider
Trend <link>geg_specialobjects_trend
Bar <link>geg_specialobjects_bar
XYCurve <link>geg_specialobjects_xycurve
FastCurve <link>geg_specialobjects_fastcurve
Axis <link>geg_specialobjects_axis
Table <link>geg_specialobjects_table
PulldownMenu <link>geg_specialobjects_pulldownmenu
OptionMenu <link>geg_specialobjects_optionmenu
MethodToolbar<link>geg_specialobjects_methodtoolbar
</topic>

<headerlevel>
<topic> geg_specialobjects_window
Window
Window-objektet är en ram som visar en graf inom ett specifierat område i en annan graf. 
Grafen kan visas med eller utan skroll-lister. Det är också möjligt att skifta den graf som 
visas i window-objektet genom att exekvera ett kommando från en trycknapp. Man kan även visa 
objektsbilder för olika objekt i databasen.

Här är några användningsområden för window-objektet

- man har tabell-liknande del av grafen som tar för stor plats. Denna del kan läggas
  i ett window objekt och genom att utnyttja window-objektets skroll-list vinner man plats. 
- man vill visa information om ett databas-objekt som redan har en objektsbild. 
- man kan bygga upp en graf med ett window objekt som visar olika grafer beroende på
  en uppsättning trycknappar eller menyalternativ. Jämför även TabbedWindow.

<h1> Visa en graf i ett window-objekt
Window-objektet återfinns under Other mappen in subgraf-paletten. Skapa objektet genom att
mittenklicka i arbetsarean och skala objektet till önskad storlek.

<image> geg_fig52.png
<b>Fig Window-objekt

Öppna objekteditorn och ange namnet på grafen som ska visas i Window.Filename. Observera att
grafen läses in från $pwrp_exe, och eftersom grafer in window-objekt ofta inte har något
eget XttGraph objekt, kommer de inte att kopieras automatiskt från $pwrp_pop till $pwrp_exe.
Kopieringen måste göras för hand eller med en make-fil.

<image> geg_fig54.png
<b>Fig Objekteditorn för window-objektet angivet filnamn

När filnament har lagts in och filen finns på $pwrp_exe kommer grafen att visas i 
windowobjektet.

<image> geg_fig53.png
<b>Fig Window-objekt med inlagt filnamn

<h1>Visa en objektsbild i ett window-objekt
Många databas-objekt har en objektsbild som öppnas från 'Object Graph' i popupmenyn för 
objektet. Även objektsbilder kan visas window-objekt, genom att specificera namnet på
graf-filen. Dessutom måste databas-objektet som bilden ska vara kopplad till anges
i Window.Object.

Om klassen för objektet ingår i ProviewR's bassystem, är filnamnet för objektsbilden
$pwr_exe/pwr_c_'klassnamn'.pwg. För ett Av-objekt blir det $pwr_exe/pwr_c_av.pwg. Man måste
här ange även katalogen i filenamnet eftersom filen inte ligger på default katalogen 
$pwrp_exe.

Om klassen återfinns i en klassvolym inom projektet, är filnamnet $pwrp_exe/'klassnamn'.pwg.
Här behöver man inte ange katalogen i filnamnet.

I exemplet nedan visas objeksbilden för av-objektet H1-Av1. Bilden är nedskalad till 3/4
storleken genom att Window.Scale är satt till 0.75.

<image> geg_fig55.png
<b>Fig Attribut för window-objekt som visar objektsbild

<image> geg_fig56.png
<b>Fig  Objektsbild för en Av i window-objektet

<h1>Växla mellan olika grafer
Det finns ett xtt kommando som visar upp en viss graf i ett window-objekt. Genom att lägga
in kommandot på en serie trycknappar kan man växla mellan olika grafer i ett window-objekt.
Funktionen motsvarar ett TabbedWindow med den skillnaden att man har en friare layout på
trycknapparna och att det inte finns någon begränsning i antalet grafer som kan visas upp.

Kommandot som används är

<c>set subwindow 'grafnamn' /name= /source= [/object=]

där grafnamn är namnet på det graf där window-objektet ligger. I /name specificeras namnet
på window-objektet, och i /source anges filnamnet på den graf som ska visas. /objekt används 
när det är en objektsbild som ska visas, och specificerar database-objektet som bilden ska
kopplas till.

I följande exempel visas objektsbilden för ett antal Dv i ett window-objekt. I window-objektet
kan man lägga in en startbild, som konfigureras på normalt sätt, men man kan även låta 
window-objektet vara tomt tills man har valt en graf från någon av knapparna. I det fallet
bör man lägga in "_no_" i Window.FileName för att undvika felutskrift.

Grafen som innehåller window-objektet sparas med namnet 'dvdisplay' och innehåller förutom 
window-objektet 6 trycknappar av typen CommandButtonCenter. Window-objektet namnges till
DvWindow genom att aktivera Edit/Change Name i menyn. I figuren nedan visas objekteditorn 
för en trycknapp med kommandot inlagt. Notera att filnamnet måste omgärdas av 
citations-tecken eftersom det innehåller ett slash tecken.

<image> geg_fig58.png
<b>Fig Kommandot 'set subwind' i en trycknapp

Den slutgiltiga grafen ser ut så här med Dv4 vald.

<image> geg_fig57.png
<b>Fig Objektsbilden för Dv4 visas efter klick på knappen Dv4.
</topic>

<topic> geg_specialobjects_tabbedwindow
TabbedWindow
TabbedWindow är ett Window objekt med flik-register. För varje flik anges en separat graf, 
och när fliken aktiveras visas en angivna grafen i fönstret.

Man kan visa objekts-bilder eller andra grafer i ett tabbed window. Vi ska här titta på hur
man kan visa en uppsättning objektsbilder, precis som i exemplet för window objektet ovan.

<image> geg_fig64.png
<b>Fig Ett flikfönster objekt

Vi ska ha 6 stycken flikar och varje flik ska visa objektsbilden för ett Dv-objekt. Efter att
ha skapat TabbedWindow objektet, öppnar vi upp objekteditorn. Här sätter vi 
Folder.NumberOfFolders till 6. Vi ändrar också Folder.HeaderHeight till 1 för att öka 
storleken på flikarna. Sedan fyller vi i FileName, Text och Object för de 6 första flikarna. 
FileName är filnamnet på objektsbilden för Dv, dvs $pwr_exe/pwr_c_dv. Text sätter vi till 
Dv1, Dv2 osv, och Object innehåller objektnamnet på respektive Dv, H1-Dv1, H2-Dv2 osv. Vi 
ökar också textstorleken i flikarna genom att välja ut window-objektet och sätta TextSize
till 14 i verkygspanelen.

<image> geg_fig65.png
<b>Fig Objekteditorn för flikfönstret 


</topic>

<topic> geg_specialobjects_slider
Slider
En slider eller dragregel är ett flyttbart objekt som är kopplat till en analog signal i 
databasen. Läget på slidern bestämmer signalvärdet. Slidern flyttas antingen horisonellt
eller vertikalt mellan två ändpunkter. Läget för ändpunkterna kan bestämmas med två olika
metoder, antingen genom att man lägger ett speciellt bakgrundsobjekt av typen
SliderBackground, eller genom att man specifierar koordinaterna för ändpunkterna i 
objekteditorn.

<h1>Slider med bakgrundsobjekt
Under Slider mappen i subgraf-paletten finns slider och slider-background objekt. Vi väljer
en SliderBackground1 och placerar ovanpå denna en Slider1. För att få en horisonell slider
roterar vi båda objekten 270 grader. 

<image> geg_fig59.png
<b>Fig Slider med bakgrundsobjekt

Nästa steg är att koppla slidern till en analog signal i databasen. Vi väljer Av objektet 
H1-Av1 i planthierarkin och klickar med Ctrl+Dubbelklick MB1 på slider-objektet. Nu återstår 
att ange vilket signal-område sliderns rörlelse motsvarar. Signalens går mellan 0 - 1000 och 
vi sätter Slider.MaxValue till 1000 i objektseditorn. Notera att vi inte behöver ange min- 
och max-position eftersom detta ligger inbyggt i sliderbackground objektet.

<image> geg_fig60.png
<b>Fig Området för signalen anges i Slider.MinValue och Slider.MaxValue

<h1>Slider utan bakgrundsobjekt
För en slider utan bakgrunds-objekt måste man ange sliderns rörelseriktning, samt min och
max-positionen för rörelsen. 

<image> geg_fig61.png
<b>Fig Slider utan bakgrundsobjekt

Vi skapar en slider av typ Arrow2 som ska kunna flyttas utmed en skala mellan 0 och 100. 100 
ligger på y-koordinat 0 och 0 på y-koordinat 30. Slidern ska placeras vid den lägsta 
y-koordinaten, vilket alltså är vid 100 på skalan. Sedan ska vi ange sliderns rörelseområde, 
och då mäta koordinaten för slidern-objektets överkant. Det ger y-kooridnaterna -1 i sliderns
övre position och 29 i den undre positionen. Vi lägger in dessa i Slider.MinPosition (-1) och
Slider.MaxPosition (29). Vidare sätter vi Slider.Direction till Up eftersom en rörelse uppåt 
i bilden ger ökande värde.

<image> geg_fig62.png
<b>Fig Objekteditorn för slidern

En horisontell slider placeras på den lägsta x-koordinaten, dvs längst till vänster i bilden.
I exemplet nedan är Slider.Direction satt till Left.

<image> geg_fig63.png
<b>Fig Horisontell slider

</topic>

<topic> geg_specialobjects_bar
Stapel
En stapel visar värdet för en analog signal i form av en stapel. Stapeln återfinns i 
Analog/Bar i subgraf-paletten.

<image> geg_fig68.png
<b>Fig Stapel

En stapel konfigureras genom att koppla den till en analog signal och lägga in området för
stapeln i Bar.MinValue och Bar.MaxValue. Axis-objektet ingår inte i bar-objektet.

<image> geg_fig67.png
<b>Fig Attribut för ett bar-objekt

Om stapeln ingår i en objektsbild är ofta området olika för olika instanser av objekt i 
databasen som bilden visar. Man kan då koppla Bar.MinValueAttr och Bar.MaxValueAttr till 
de attribut i databas-objekt som innehåller min och max-värde för signalens område.

Notera att en stapel även kan åstadkommas med en rektangel som är grupperad och försedd med
dynamiken FillLevel. Enda skillnaden är att bar-objektet har en avgränsnings-linje med 
separat färg i mellan stapeln och bakgrunden.
</topic>

<topic> geg_specialobjects_trend
Trend
En trendkurva visar värdet för en eller ett par analog signaler under den senaste tiden.
Även heltal eller digitala signaler kan visas i trendkurvor. Trend ligger under Analog
mappen in subgraf-paletten.

<image> geg_fig66.png
<b>Fig Trendkurva

Ovanstående trend-objekt är konfigurerat med en analog signal. Antalet vertikala och 
horisontella linjer har ökats genom att sätta Trend.HorizontalLines och Trend.VerticalLines 
till 9. Skalorna ingår inte i trend-objektet, utan har skapats med Axis objekt. Vertikala 
axeln har området 0-100 eftersom Trend.MinValue1 är 0 och Trend.MaxValue1 är 100. Tidsaxelns
område blir 50 s då Trend.ScanTime är 0.5 s och antalet lagrade punkter, Trend.NoOfPoints, 
är 100.

<image> geg_fig67.png
<b>Fig Attribut för ett trend-objekt

Om trendkurvan ingår i en objektsbild är ofta området olika för olika instanser. Man kan då 
koppla Trend.MinValueAttr och Trend.MaxValueAttr till attribut i databas-objektet som 
innehåller min och max-värde för signalens område.
</topic>

<topic> geg_specialobjects_xycurve
XYCurve

XYCurve ritar en kurva som har specificerats med två vektorer som innehåller x resp y-värden
för kurvan. Det finns en speciell XYCurve Klass som kan användas. Det innehåller de attribut
som behövs och två vektorer med 100 element.

<image> geg_fig168.png
<b>Fig XYCurve

<image> geg_fig169.png
<b>Fig Attribut för XYCurve-objektet
</topic>

<topic> geg_specialobjects_fastcurve
FastCurve

FastCurve visar en kurva specificerad med ett DsFastCurve objekt. En DsFastCurve kan 
innehålla up till 10 kurvor, men FastCurve objektet kan endast visa två av dem. Vilka
kurvor som visas anges i attributet FastCurve.FastIndex.

<image> geg_fig166.png
<b>Fig FastCurve

<image> geg_fig167.png
<b>Fig Attribut för ett FastCurve-objekt
</topic>

<topic> geg_specialobjects_axis
Axis och AxisArc
Ett axis-objekt ritar ut en skala med ett visst område. Axis objekt har ingen dynamik utan
skalan är fast. Det finns två varianter, en rak skala och en cirkulär eller elliptisk skala.

<h1>Rak skala
En rak skala är ett Axis-objekt som hämtas från mappen Analog och skalas till önskad storlek.
Storleken på siffrorna justeras med TextSize menyn i verktygspanelen. Skalans område bestäms
av MinValue och MaxValue som i exemplet nedan är satt till 0 och 50. Vill man att skalan ska
gå åt andra hållet kan man skifta värdena i MinValue och MaxValue. Det finns inte något krav
att MaxValue ska vara större än MinValue.

<image> geg_fig70.png
<b>Fig Rak skala

Antalen streck i skalan bestäms av attributet Lines, som är satt till 101, och eftersom
var 10:de streck ska vara lite längre är LongQuotient satt till 10. På var 20:de streck ska
läget markeras med ett värde, allså sätts ValueQuotient till 20. 

<image> geg_fig72.png
<b>Fig Attribut för ett axis-objekt

Man kan även påverka formateringen av värdena i Format, och vill man inte ha några värden 
utskrivna tar man bort innehållet i Format. Formatet ska vara av typen %5.1f där 5 makerar
totalt antal tecken inklusive decimal-punkt, och 1 antal decimaler.

<h1>Elliptisk skala
En cirkulär eller elliptisk skala utgörs av ett AxisArc objekt. Objektet skalas till lämplig
storlek, och textstorleken anpassas med TextSize i vertygspanelen. 

Skalan utgörs av ett cirkel-segment, genom att i objects-editorn ange Angle1 och Angle2
påverkar man segmentets läge och storlek. Angle1 är vilkeln från den horisontella axeln till 
segmentets början, och Angle2 är vilkeln för segmentets utbredning.

Man kan även påverka streck-längden i LineLength. Där anges längden relativt radien, så en 
LineLength på 0.1 ger en längd på de längre strecken på 10 % av radien.

<image> geg_fig71.png
<b>Fig Elliptisk skala

<image> geg_fig73.png
<b>Fig Attribut för ett axisarc-objekt
</topic>

<topic> geg_specialobjects_table
Tabell
Tabell-objektet är en överskådlig uppställning av data, uppdelad i rader och kolumner, ofta
försedd med rubrik. Tabell återfinns under Other mappen i subgrafs-paletten.

<image> geg_fig76.png
<b>Fig Tabell utan rubrik

Data för en kolumn är vanligvis samlad i ett vektor-attribut i databasen. Det finns ett
antal klasser med vektorer av olika typ, t ex AArray100 och AArray500 som innehåller vektorer
med 100 resp 500 element av typen Float32. Motvarande DArray, IArray och SArray objekt finns 
för data av typen boolean, integer och strängar. I exemplet nedan har vi samlat data i 3 st
AArray100 en en SArray100. 

<image> geg_fig75.png
<b>Fig Array-objekt som innehåller tabell-data

Om vi tittar på den enkla tabellen i Fig Tabell utan rubrik ovan, visas två kolumner. Antalet
kolumner anges i Table.Columns. Column1.Attribute och Column2.Attribut är kopplade till var
sitt vektor attribut i databasen som innehåller de värden som ska visas upp i respektive
kolumn, H3-A1.Value och H3-A2.Value. Syntaxen är H1-A1.Value##Float32#100 vilket innebär att 
attributet är en array av typen Float32 med 100 element. Man måste även specificera 
formateringen av värdena i kolumnerna genom att fylla i Column1.Format och Column2.Format. 
'%6.1f' innebär ett flyttal med 6 tecken och en decimal.

En del andra detaljer är ändrade på tabellen, 
- fonten är satt till Lucida Sans, genom att välja ut tabellen och ange Lucida Sans i 
  verktygspanelen.
- Textstorleken är ökad till 12 med Textsize i verktygspanelen.
- Höjden på raderna har anpassats till den större texten genom att Table.RowHeight är 0.8.

<image> geg_fig74.png
<b>Fig Attribut för tabell-objekt

Figuren nedan visar en tabell med rubrik. Här är Table.HeaderRow satt till 1. Textstorleken
för rubriken, Table.HeaderTextSize är satt till 12 och Table.HeaderTextBold är satt till 0
för att unvika fet text.

<image> geg_fig77.png
<b>Fig Tabell med header row

I tabellen nedan har en vertikal skroll-list adderats genom att sätta Table.VerticalScrollbar
till 1. Notera att rubrik-raden inte skrollas utan visas hela tiden. 

Tabell-objektet visar 3 kolumner, den första är kopplad till en sträng-vektor av typen
SArray100.Value, och har Column1.Format satt till %s. Första kolumnen är även markerad som en
header kolumn, genom att Table.HeaderColumn är satt till 1. Det innebär att gränslinjen mellan
första och andra kolumnen är lite tjockare. 

<image> geg_fig78.png
<b>Fig Tabell med vertikal skroll-list och header column

I figuren nedan visas hur en header column fungerar med en horisontell scroll-list. Den
horisontella skroll-listen fås genom att sätta Table.HorizontalScrollbar till 1. Notera att
skroll-listen inte omfattar den första kolumnen, utan den första kolumnen är alltid synlig.

<image> geg_fig79.png
<b>Fig Tabell med horisontell skroll-list och header column

<h1>Tabell som visar objekt av samma typ
Nu ska vi titta på ett exempel där data inte ligger organiserat i vektorer, utan i ett antal
objekt av samma klass. I anläggningshierarkin under H3-Data ligger ett antal objekt av klassen
Thing som innehåller attributen Length, Height och Width. Vi vill visa innehållet i alla
Thing-objekt i en tabell, med ett objekt på varje rad. För att kunna göra det måste vi skapa
en vektor av typen Objid som innehåller identiteten på varje objekt som ska visas. Alltså
skapar vi ett objekt av typen OidArray och lägger in identiteten för all Thing objekt i denna.

<image> geg_fig82.png
<b>Fig Objekt vars innehåll visas i tabellen till vänster, array av objid till höger

Vi skapar en tabell med fyra kolumner. Den första kolumnen ska visa namnet på objektet, den
andra attributet Length i respektive objekt, den tredje Width och den fjärde Height.
Tabellen konfigureras genom att vektorn med objektsidentieterna läggs in i Colomn1.Attribute.
I Column2.Attribute anges $header.Length##Float32. $header pekar på objektet som visas i
header kolumnen, dvs den första kolumnen. På samma sätt fyller vi i Column3.Attribute med
$header.Width##Float32 och Column4.Attribute med $header.Height##Float32.

<image> geg_fig80.png
<b>Fig Attributen för kolumnerna i tabellen

Resultatet ses i figuren nedan. I första kolumnen visas namnet på objektet och på samma rad
innehållet i objektet.

<image> geg_fig81.png
<b>Fig Tabell som visar objektnamn och innehållet i objekten

<h1>Tabell med utvals funktion
Ibland vill man kunna välja ut en cell i en tabell, och utföra någonting i plcprogrammet med
utvalt data eller objekt. Det här gör man genom att koppla en vektor av boolean till 
attributet SelectAttribute för en kolumn. I exemplet nedan har H3-Select1.Value kopplats
till Column1.SelectAttribute. 

<image> geg_fig83.png
<b>Fig En utvals-vektor har angetts för den första kolumnen

Den första kolumnen kommer nu att vara känslig för klick och den utvalda cellen kommer att 
markeras med en avvikande färg som kan anges i Table.SelectColor.

<image> geg_fig84.png
<b>Fig Fjärde raden i första kolumnen har valts ut

Det element i vektorn som motvarar det utvalda objektet kommer att sättas till 1. I figuren
ovan är fjärde raden utvald, vilket medför att fjärde elementet i utvals-vektor sätts, dvs
H3-Select1.Value[3]. 

<image> geg_fig85.png
<b>Fig Elementet som motvarar den utvalda raden markeras i utvals-vektorn

</topic>

<topic> geg_specialobjects_pulldownmenu
Rullgardinsmeny
Rullgardinsmenyn innehåller att antal menyalternativ som antingen kan vara en ny
rullgardinsmeny, eller exekvera en aktion. Aktioner som kan definiera för andra tryckknappar 
är också tillgängliga för menyalternativ. Med aktion PulldownMenu kan undermenyer 
konfigureras.

<image> geg_fig160.png
<b>Fig Rullgardinsmeny

<image> geg_fig163.png
<b>Fig Attribut för en rullgardinsmeny

<h2>MethodPulldownMenu
MethodPulldownMenu är en rullgardinsmeny som innehåller menyalternativ för att aktivera
metoderna för ett objekt. Den används normalt i objektsbilder. Med attributet HelpMenu 
visas en hjälp-meny med det två hjälp-metoderna Help och HelpClass.

<image> geg_fig161.png
<b>Fig Rullgardinsmeny för metoder

Rullgardinsmenyn för metoder konfigureras genom att sätta Action till MethodPulldownMenu.

<image> geg_fig162.png
<b>Fig Attributen för en metod-rullgardinsmeny
</topic>

<topic> geg_specialobjects_optionmenu
OptionMenu

Option meny är en meny där man väljer alternativ i en lista av alternativ. Det valda 
alternativet visas upp i meny-komponenten. När man klicka på komponenten öppnas listan med 
alternativ. När man väljer ett alternativ stängs listan och det valda alternativet läggs in 
i komponenten.

<image> geg_fig165.png
<b>Fig Option meny

<image> geg_fig164.png
<b>Fig Attribut för en option meny
</topic>

<topic> geg_specialobjects_methodtoolbar
MethodToolbar
MethodToolbar är en verktygspanel för metoder. Den visar en uppsättning knappar för att
aktivera metoderna för ett specifikt objekt. Endast metoder som är konfigurerade för
objeket visas, och knappar som den aktuella användaren inte har tillgång till dimmas.

Verktygspanelen för metoder används normalt i objektsbilder.

<image> geg_fig159.png
<b>Fig MethodToolbar

</topic>
</headerlevel>

<topic> geg_dynamics
Dynamik och action
En processbild har huvudsakligen två uppgifter, att visa läget i processen för operatoren, och
att göra det möjlig för operatören att påverka processen.

För att visa läget i processen lägger man in dynamik i bilderna. Dynamiken kan vara att 

- ändra färg på ett objekt <link>geg_dynamic_color
- göra objekt osynliga eller okänsliga <link>geg_dynamic_invisible
- skriva ut texter <link>geg_dynamic_text
- ändra form på ett objekt <link>geg_dynamic_shape
- visa analoga värden <link>geg_dynamic_analog
- flytta, skala eller rotera objekt <link>geg_dynamic_move
- Ljud och kommandon <link>geg_dynamic_misc

För att göra det möjligt för operatören att påverka processen, lägger man in action på objekt
i processbilden. Genom att lägga in action på ett objekt kan man också göra det möjligt för
operatören att få mer information om objektet, från popup-menyer eller genom att öppna bilder
eller kurvor mm. Action kan vara att

- sätta värden med trycknappar <link>geg_action_button
- popupmeny <link>geg_action_popupmenu
- öppna bilder <link>geg_action_opengraph
- exekvera kommandon <link>geg_action_command
- tooltip <link>geg_action_tooltip
- hjälptexter <link>geg_action_help
- input focus <link>geg_action_inputfocus

</topic>

<headerlevel>
<topic> geg_dynamic_color
Ändra färg på objekt
<h1>Skifta mellan två färger
Vi ska titta på hur man kan ändra färg på ett objekt beroende på en digital signal i 
databasen. Det finns några olika typer av dynamik man kan använda, DigLowColor, DigColor,
DigError och DigWarning. Vi börjar med att titta på ett exempel med DigLowColor.

DigLowColor skiftar mellan två färger, den ena är den man sätter på objektet i editorn, och
det är den här färgen objektet kommer att ha när signalen är hög. Den andra färgen anges i
DigLowColor.LowColor. Vi kommer att rita en orange indikator, som ska vara orange när signalen
är hög och mörkgrå när signalen är låg. Vi ritar alltså indikatorn orange i editorn, och 
sätter DigLowColor.LowColor till mörkgrå.

Vi börjar med att rita en cirkel, och fyller den med orange färg. Vi sätter också gradienten
till GradientGlobe.

<image> geg_fig86.png
<b>Fig Orange indikator

Vi skapar också en ram med metalliskt utseende till indikatorn genom att rita en lite större 
cirkel med grå fyllnadsfärg. På ramen sätts fixcolor i objektseditorn till 1, eftersom denna
inte ska ändra färg med indikatorlampan. Vi sätter också 3D och väljer gradienten 
DiagonalDownTube. 

<image> geg_fig89.png
<b>Fig Ram till indikatorn

I objektsediton ökas gradient_contrast till 8 och shadow_width till 9.

<image> geg_fig88.png
<b>Fig Fixcolor sätt på ramen

För att kunna sätta dynamik gör vi en grupp av de båda cirklarna. När vi öppnar objektseditorn
för gruppen har vi nu attributet Dynamic och väljer DigLowColor. Vi sätter DigLowColor.Color
till en mörkgrå nyans och kopplar DigLowColor.Attribute till en Dv, H1-Dv1.

<image> geg_fig87.png
<b>Fig Dynamik DigLowColor

Resultatet ses i figuren nedan. När signalen är hög är indikatorn orange, och signalen är
låg är indikatorn mörkgrå.

<image> geg_fig158.png
<b>Fig Indikatorn med låg signal till vänster och hög till höger

Dynamiktypen DigColor är snarlik DigLowColor, och man skulle också kunna ha använt denna typ
här. Skillnaden är att signalens funktion är inverterad. I DigLowColor anger man den färg
som objektet har när signalen är låg, medan för DigColor anger man den färg som objektet har
när signalen är hög.

<h1>Skifta mellan flera färger
Vi ska nu se hur man kan skifta mellan flera färger. Vi utgår från indikatorn i exemplet
ovan och adderar dynamiken DigColor. I objektseditorn har vi nu attributen DigColor.Attribute
och DigColor.Color. DigColor.Attribute kopplas mot en signal i databasen, H1-Dv2, och i
DigColor.Color anges den färg som indikatorn får när signalen är hög.

<image> geg_fig90.png
<b>Fig En tredje färg adderad med DigColor

Indikatorn kan nu skifta mellan tre olika färger. DigLowColor skiftar som förut mellan
mörkgrått och orange beroende på H1-Dv1, och DigColor sätter blå färg när H1-Dv2 går hög.
Notera att DigColor har högre prioritet än DigLowColor. Man kan se det i objektseditorn där
dynamiken ordnas i prioritetsordning med hög prioritet överst och låg prioritet underst.
Den högre prioriteten på DigColor gör att när H1-Dv2 är hög, blåfärgas indikatorn oberoende
av värdet på H1-Dv1.

<image> geg_fig91.png
<b>Fig Indikatorn färgas orange när H1-Dv1 är hög, och blå när H1-Dv2 är hög

Vi ska nu lägga till ytterligare en färg och studera begreppet Instance. En del dynamik och
action typer kan förekomma i flera upplagor, eller flera instanser på samma objekt. För
DigColor innebär det att när man adderar ytterligare en instans, kan man sätta en färg till
på objektet. Eftersom det finns upp till 32 instanser kan man sätta 32 olika färger, där 
varje färg kopplas till en signal i databasen.

Man adderar en DigColor instans genom att öppna DigColor.Instances och markera instans 2.
Nu visas attributen för denna instans, DigColor2.Attribute och DigColor2.Color. Vi kopplar
DigColor2.Attribute till signalen H1-Dv3 och anger en grön färg i DigColor2.Color. Notera
att instanser med högre instans-nummer har högre prioritet, dvs H1-Dv3 kommer att färga
indikatorn grön oberoende av värdet på H1-Dv1 och H1-Dv2.

<image> geg_fig92.png
<b>Fig En fjärde färg adderad med DigColor instans 2

Resultatet ses i figuren nedan. Man kan nu skifta mellan fyra olika färger. Förutom de tre
tidigare, mörkgrått, orange och blått, färgas indikatorn nu grön när signalen H1-Dv3 är hög.

<image> geg_fig93.png
<b>Fig Indikatorns fyra olika färger

<h1>Färger för varning och fel
I ProviewR används genomgående färgerna gult och rött för varning resp fel. Det finns
två typer av dynamik, DigWarning och DigError, som sätter gul resp röd färg. Fördelen
jämfört med DigLowColor eller DigColor är att men inte behöver ange färgen, utan det räcker
att koppla dynamiken till en digital signal i databasen.

Vi använder indikatorn i ovanstående exempel, men färgar om den till mörkgrått, som blir
den färg man får då varken signalen för DigWarning eller DigError är hög.
Vi kopplar DigWarning.Attribute till H1-Dv4 och DigError.Attribute till H1-Dv5. 

<image> geg_fig94.png
<b>Fig Dynamiken DigWarning och DigError

När ingen signal är sätt har indikatorn ursprungsfärgen mörkgrått. När H1-Dv4 sätts får den
varnings-färgen gul, och när H1-Dv5 sätts får den fel-färgen rött. DigError har högre
prioritet än DigWarning, alltså blir den röd när H1-Dv5 är satt, oberoende av vad H1-Dv4 har
för värde.

<image> geg_fig95.png
<b>Fig Gul färg för varning och röd för fel

<h1>Blinkande dynamik
För att dra maximal uppmärksamhet till ett objekt kan man sätta DigFlash dynamik på det.
DigFlash innebär att objektet kommer att blinka, dvs skifta mella två färger, när en signal
är hög. Blinknings-frekvensen är lika med uppdaterings-frekvensen för objektet. Om Cycle är 
Slow sker blinkningen med ScanTime för grafen, och om Cycle är Fast med FastScanTime.

Vi sätter DigFlash dynamik på indikatorn och kan nu ange två färger som objektet kommer
att blinka med, DigFlash.Color och DigFlash.Color2. Vi sätter DigFlash.Color till röd och 
DigFlash.Color2 till svart, och kopplar DigFlash.Attribute till signalen H1-Dv6.

<image> geg_fig96.png
<b>Fig DigFlash dynamik

När signalen H1-Dv6 är låg har indikatorn ursprungsfärgen mörkgrå. När H1-Dv6 går hög 
börjar den blinka med färgerna rött och svart.

<image> geg_fig97.png
<b>Fig Indikatorn blinkar mellan rött och svart när signalen är hög

<h1>Ändra färg på en analog signal
Nu ska vi titta på hur man kan ändra färg på ett objekt beroende på värdet på en analog
signal. Det finns två olika typer av dynamik, FillColor och AnalogColor, som kopplas till
en analog signal. FillColor färgar en del av ett objekt och hur stor del beror på signalens
värde. AnalogColor skiftar färg på objektet när signalen passerar vissa gränsvärden.

<h1>Färga till en viss nivå
Dynamiken FillColor färgar ett objekt till en viss nivå beroende på en analog signal. Den
liknar mycket stapel-objektet som vi har ett tidigare, med den skillanden att den kan 
appliceras på vilken form som helst. Vi ska sätta FillColor på en tank som vi hämtar från 
Hydraulics/Tank2 i subgrafmenyn.

<image> geg_fig102.png
<b>Fig En tank

Tanken har ingen default dynamik. Vi markerar FillColor i DynType och kopplar den till Av
objektet H4-Av1. Vi sätter också en mörkgrå nyans i FillLevel.BackgroundColor. 
FillLevel.MinValue och FillLevel.MaxValue anger området på signalen, som default är 0-100.
När värdet är noll kommer tanken att färgas helt med bakgrundsfärgen och när värdet är 100 
med den blå färg som vi sätter i editorn.

<image> geg_fig98.png
<b>Fig FillColor dynamik på tanken

I figuren nedan har vi satt värdet 70 på H4-Av1 och tanken är fylld upp till denna nivå.

<image> geg_fig99.png
<b>Fig Tanken fylld till en viss nivå

Man kan fylla tanken i andra rikningar genom att ändra på FillColor.Direction. Används
FillColor dynamiken i en objektsbild kan också området kopplas till attribut för min och 
max-värde i databasen.

<h1>Ändra färg över eller under en viss nivå
Ofta vill man visa att en analog signal har överskridit eller underskridit ett viss värde.
I tank-exemplet ovan ska nivån normalt ligga under 80, och stiger den över 90 börjar läget
bli kritiskt. Vi använder dynamiken AnalogColor för att ändra färg på tanken när värdet
passerar de båda gränsvärdena.

Till att börja med vill vi färga tanken gul när signalen H4-Av1 är över 80. Vi adderar
AnalogColor till DynType och kan nu sätta AnalogColor.Limit till 80. Typen av gränsvärde,
AnalogColor.LimitType, är redan GreaterThan, så denna behöver vi inte ändra på. Däremot
måste vi ange färgen som ska sättas när signalen överskrider 80, och vi lägger in en
gul nyans i AnlogColor.Color.

För att kunna lägga in ytterligare ett gränsvärde vid 90, lägger vi till instans 2 i 
AnalogColor.Instances. Nu dyker attributen för AnalogColor2 upp och vi sätter 
AnalogColor2.Limit till 90 och AnalogColor2.Color till en röd nyans. Notera att man inte
kopplar något ny signal till instans 2, utan alla instanser använder samma signal.

<image> geg_fig100.png
<b>Fig AnalogColor dynamik

Resultatet visas figuren nedan. Så länge värdet på H4-Dv1 är under 80 är tanken blå. När
värdet går över 80 blir den gul, och när 90 passeras blir den röd.

<image> geg_fig101.png
<b>Fig Vid 80 slår färgen om till gult, och vid 90 till rött

Genom att sätt LimitType till LessThan kan man också lägga till gränsvärden för miniminivåer,
t ex färga tanken gul om nivån underskrider 20, och röd om tanken underskrider 10.

</topic>

<topic> geg_dynamic_invisible
Göra objekt osynliga eller okänsliga
För att göra objekt osynliga eller dimmade använder man dynamiken Invisible. För att
demonstrera det skapar vi en trycknapp från Button/Button2MetalFrame i subgrafsmenyn.

<image> geg_fig103.png
<b>Fig En trycknapp

<h1>Osynlig 
Trycknappen har som default attributen för DigToggle, och genom att addera Invisible till
DynType ser vi även attributen för Invisible. Genom att koppla en digital signal till 
Invisible.Attribut kommer trycknappen att bli osynlig när signalen är hög.

<image> geg_fig104.png
<b>Fig Attribut for invisible

Vi kopplar Invisible.Attribut till H1-Dv2, och resultatet blir att när H1-Dv2 är hög blir
trycknappen osynlig.

<h1>Dimmad
Om man endast vill göra trycknappen okänslig för klick och dimmad, sätter man Invisible.Dimmed
till 1.

<image> geg_fig105.png
<b>Fig Invisible.Dimmed satt för dimmad dynamik

När H1-Dv2 blir hög är trycknappen inte lägre känslig för musklick. Det markeras genom att
den ritas dimmad.

<image> geg_fig106.png
<b>Fig Trycknappen i dimmat läge till vänster
</topic>

<topic> geg_dynamic_text
Skriva ut texter
För att skriva ut en dynamisk text måste man använda en subgraf som innehåller en Annotation.
T ex innehåller nästan alla trycknappar en Annotation för att man ska kunna skriva ut en
text på knappen. Även value och inputvalue subgrafer innehåller en Annotation.

En annotaion är en plats i subgrafen där en text kan skrivas ut. Texten kan antingen anges
i editorn, eller med hjälp av några olika typer av dynamik kopplas till attribut i databasen
och förändras i runtime. 

Det olika typer av text-dynamik vi ska titta på här är 
- DigText, där man skiftar mellan två olika texter beroende på en digital signal.
- AnalogText, där man skiftar mellan flera olika texter beroende på en analog signal.
- Value, som kopplas till ett sträng-attribut i databasen och visar attributets innehåll.

<h1>Skifta mellan två texter på en digital signal
Dynamiken DigLowText skiftar mellan två texter beroende på en digital signal.
Vi skapar en trycknapp av typen ButtonRoundMetalFrame och öppnar objektseditorn.

<image> geg_fig107.png
<b>Fig Trycknapp med Annotation

I Text kan man lägga in en text som visas på trycknappen, och vi lägger in texten 'Off'.
Genom att addera dynamiken DigText kommer texten i Text att ersättas av texten i
DigText.LowText när signalen vi kopplar till DigText.Attribut är låg. Vi lägger in 'On' i
DigText.LowText och kopplar DigText.Attribute till Dv'n H1-Dv1. För enkelhets skull kopplar
vi även ToggleDig.Attribute till samma signal så att vi enkelt kan ändra på den genom att
klicka på knappen.

<image> geg_fig108.png
<b>Fig Dynamik DigLowText

Dynamiken fungerar nu så här. När H1-Dv1 är låg skrivs texten 'On' ut på knappen, dvs texten
i DigText.LowText, och när signalen är hög skrivs texten 'Off' ut, den text vi skrev in i Text
attributet.

<image> geg_fig109.png
<b>Fig Låg signal till vänster och hög signal till höger

DigText har flera instanser, och för varje instans kan man ange en text och koppla den till 
en digital signal. Observera att funktionen är annorlunda för de andra instanserna. För den
första anger man en LowText, dvs en text som skrivs ut när signalen är låg. På övriga 
instanser anger man en HighText, en text som skrivs ut när signalen är hög.


<h1>Skifta mellan flera texter beroende på en analog signal
För dynamiken AnalogColor kan man ange upp till 32 olika texter, och vilken av texterna som
skrivs ut beror på värdet av den analoga signal som kopplas till dynamiken.

Vi använder en ValueLargeCenter för att demonstrera dynamiken. 

<image> geg_fig110.png
<b>Fig En ValueLargeCenter subgraf

ValueLargeCenter har Value dynamik som default, så vi börjar med att ta bort den genom att 
ta bort Inherit in DynType, och lägger istället in AnalogText.

I AnalogText.TextMask markerar man de texter som ska användas. Vi kommer att skifta mellan
fyra olika texter och markerar 2, 3 och 4. Texterna 'Low level', 'Normal level', 'High level'
och 'Very high level' fylls i text-attributen. Vi behåller enumvärdena, vilket innebär att 
AnalogText.Text1 visas när signalen är 0, AnalogText.Text2 när signalen är 1 osv. I praktiken
är det så att texten skiftar vid värdena 0.5, 1.5 och 2.5. Om signalen är större än 3.5
skrivs inte någon text ut alls.

Vi kopplar också Av'n H4-Av1 till AnalogText.Attribute.

<image> geg_fig111.png
<b>Fig Value dynamiken ersatt av AnalogText

I figuren nedan visas value-objektet när H4-Av1 har värden 0, 1, 2 och 3, med
0 värdet längst ner.

<image> geg_fig112.png
<b>Fig Texten vid olika värden på H4-Av1

<h1>Visa texten i ett sträng-attribut
För att visa innehållet i ett sträng-attribut i databasen använder man Value dynamiken. Som
i föregående exempel skapar vi ett ValueLargeCenter objekt.

<image> geg_fig110.png
<b>Fig En ValueLargeCenter subgraf

Den här subgrafen har Value som default dynamik, så vi behöver bara koppla Value.Attribute
till ett sträng-attribut och lägga in sträng-formatet '%s' i Value.Format. Vi kopplar
Value.Attribute till Sv-objektet H1-Sv.

<image> geg_fig113.png
<b>Fig Value dynamik

För att visa resultatet lägger vi in texten 'Starting up' i H1-Sv1 i Xtt.

<image> geg_fig114.png
<b>Fig Sätt en text i Sv attributet

Texten visas i Value-objektet.

<image> geg_fig115.png
<b>Fig Texten skrivs ut i value objektet
</topic>

<topic> geg_dynamic_shape
Ändra form
I många fall är det bästa sättet att visa läget i processen att ändra form på ett objekt. Det
kan vara en grind som visas öppen eller stängd, eller ett hänglås som är låst eller olåst.
Det här kan man åstadkomma genom att använda subgrafer med två eller flera sidor.

Ett exempel på en subgraf med flera sidor är Smiley.

Subgrafer med flera sidor hanteras av dynamiktyperna DigShift, AnalogShift och Animation.

<image> geg_fig116.png
<b>Fig Exempel på subgraf med flera sidor

- DigShift växlar mellan två olika sidor beroende på en digital signal.
- AnalogShift växlar mellan flera olika sidor beroende på en analog signal.
- Animation spelar upp ett antal sidor med en viss hastighet så att man får intryck av 
  rörelse.

<h1>Växla mellan två sidor
Dynamiken DigShift kan användas på en subgraf med flera sidor. Den kopplas till en digial
signal och växlar mellan första och sista sidan beroende på om signalen är hög eller låg.

Vi använder subgrafen Smiley for demonstrera DigShift. Smiley har dynamiken AnalogShift som
default, och den måste vi först ta bort genom att återställa Inherit i DynType. I stället
anger vi DigShift, och kopplar till signalen H1-Dv1.

<image> geg_fig117.png
<b>Fig Dynamiken DigShift vald

Resultatet visas i figuren nedan. När signalen är låg visas subgrafens första sida, och när
signalen är hög visas subgrafens sista sida.

<image> geg_fig118.png
<b>Fig Låg signal till vänster och hög signal till höger

<h1>Växla mellan flera sidor
AnalogShift kopplas till en analog signal, och kan skifta mellan flera sidor. Värdet på
den analoga signalen bestämmer index för den sida som visas. När signalen är 0 visas första
sidan, vid 1 visas andra sidan osv.

Subgrafen Smiley har AnalogShift som default. Det enda vi behöver göra är att koppla den till
en analog signal. Vi kopplar den till H4-Av1.

<image> geg_fig119.png
<b>Fig Dynamik AnalogShift

Smiley innehåller 6 olika sidor. När signalen är 0 eller mindre än 0 visas första sidan, när 
signalen är 1 visas andra sidan osv. När signalen är 5 eller större än 5 visas sista sidan.

<image> geg_fig120.png
<b>Fig Signalens värde är 0 till vänster och ökar med 1 för varje bild

<h1>Animation
TODO...

<image> geg_fig121.png
<b>Fig Animation för att öppna/stänga ett hänglås
</topic>

<topic> geg_dynamic_analog
Visa anloga värden

<h1>Visa analoga värden i sifferform
För att visa analoga värden i sifferform använder man dynamiken Value. Value kopplas till
en analog signal och konverteras till lämplig form med hjälp av format specifikationen.

Value dynamiken kan användas på subgrafer som innehåller en annotation, dvs en plat för att
skriva ut en text. Ett exempel på en sådan subgraf är ValueLargeCenter. 

<image> geg_fig122.png
<b>Fig ValueLargeCenter

Vi skapar en ValueLargeCenter och kopplar den till den analoga signalen H4-Av1. Vi måste
dessutom ange formateringen i Value.Format. '%f' är formateringen för ett flyttal, och man
kan även specifiera hur många tecken och hur många decimaler som talet ska skrivas ut
med. Med '%7.2f' anges att talet är upp till 7 tecken stort, inklusive punkten, och att två
av dessa är decimaler.

<image> geg_fig123.png
<b>Fig Value dynamik med format specifikation

Resultatet visas i figuren nedan. Det analoga värdet skrivs med två decimaler.

<image> geg_fig124.png
<b>Fig Value dynamik


Notera att Value dynamiken kan användas för att visa innehållet i en rad olika typer av
signaler, heltal, strängar, tider mm.

Genom att skapa flera instanser av Value dynamik för ett objekt kan man visa fler analoga
värden på samma objekt. Det här kräver att subgrafen innehåller flera Annotations.

Analoga värden kan även visas i form av kurvor och staplar. Detta finns beskrivet i kapitlet
'Speciella Object'

<option> printdisable
Trend <link> geg_specialobjects_trend
Bar <link> geg_specialobjects_bar
<option> printenable

</topic>

<topic> geg_dynamic_move
Flytta, skala och rotera objekt

<h1>Flytta ett objekt
För att flytta och skala ett objekt används dynamiken Move. Vi ska till att börja med titta
på hur man kan flytta objektet. Objektet kan flyttas i x- och y-led och för varje riktning
kopplar man en analog signal som specifierar förflyttningen relativt ursprungspositionen.
Signalvärdet kan räknas om till en förflyttning i Ge-koordinater med en faktor (Move.XFactor
och Move.YFactor) och ett offset (Move.XOffset och Move.YOffset).

I det här exemplet ska vi flytta en rektangel i x-led. Vi ritar rektangeln och gör en grupp
av den. 

<image> geg_fig125.png
<b>Fig En rektangel

När den är grupperad kan vi sätta Move i DynType och attributen för Move visas i 
objektseditorn. Eftersom vi ska flytta i x-led kopplar Move.XAttribute till signalen H4-Av1
i databasen. Vi mäter upp området som rektangeln ska flyttas på, och kommer fram till att
när signalen varierar mellan 0-100 ska rektangeln flyttas 20 Ge-enheter i bilden. Genom att
placera rektangeln på 0-punkten behöver vi inte ange något offset, men vi måste skala ner
signalvärdet med 20/100 = 0.2 som vi lägger in i Move.XFactor. I exemplet har vi även lagt
in en x-axel för att visa storleken på förflyttningen.

<image> geg_fig126.png
<b>Fig Move dynamik på rektangeln

Resultatet blir att när signalen är 0 ligger rektangeln kvar på ursprungspositionen. Vid 
värdet 60 har rektanglen flyttats 12 enheter, se figuren nedan, och vid värdet 100 har 
rektangeln flyttas 20 enheter.

<image> geg_fig127.png
<b>Fig Rektangeln flyttad 12 Ge-enheter i x-led

<h1>Skala ett objekt
Move dynamiken kan även användas för att skala ett objekt. Skalningen kan ske i x- och y-led
och för varje riktning kopplar man en analog signal som specifierar storleken på skalningen.

Vi lägger in skalning i x-led för rektangeln i exemplet ovan. Move.ScaleXAttribute kopplas
till signalen H4-Av2. Vi måste också räkna ut en skalfaktor och lägga in i Move.ScaleXFactor.
Rektangeln har bredden 2 enheter och med skalfaktorn 0.1 kommer ett signalvärde på 100 att
ge en bredd på 20 enheter.

<image> geg_fig128.png
<b>Fig Signal och skalfaktor angivna

Resultatet blir att när signalvärdet är 0, har rektanglen ingen bredd alls, utan ritas som 
ett streck. Vid signalvärdet 25 ser det ur som i  figuren nedan, rektanglen är skalad 2.5 
gånger, och när signalvärdet är 100 är rektanglen skalad 10 gånger och täcker hela x-axeln.

<image> geg_fig129.png
<b>Fig Signalvärdet 25 ger en skalning på 2.5 gånger

<h1>Rotera ett objekt
För att roterar ett objekt använder man dynamiken Rotate. Rotate kopplas till en analog 
signal som innehåller rotationen i grader.

Rotate har vissa begränsningar eftersom rektanglar och ellipser endast kan roteras i steg 
med 90 grader. Därför använder man företrädesvis polylinjer, linjer och cirklar med Rotate.

Vi ritar en enkel visare med ett cirkel-segment och en polylinje. Efter att ha grupperat dem
sätter vi Rotate i DynType. Vi ritar även en cirkulär skala med ett AxisArc objekt.

<image> geg_fig130.png
<b>Fig Visare med rotations-dynamik

Visaren kopplas till den analoga signalen H4-Av1. Vi måste också specifiera den punkt som 
objeket ska rotera runt. I det här fallet är det cirkelbågens mittpunkt som har 
x-koordinaten 9 och y-koordinaten 1. Rotationspunkten läggs in i Rotate.x0 och Rotate.y0.

Skalan som vi har ritat har området -100 - 100, vilket är området för signalen H4-Av1. Denna
ska räknas om till grader och motvarande rotation är -90 - 90 grader, dvs skalfaktorn är 0.9.
Vi lägger in 0.9 i Rotate.Factor.

<image> geg_fig131.png
<b>Fig Visaren kopplade till en analog signal och skalfaktorn satt till 0.9

Resulatet kan ses i figuren nedan.

<image> geg_fig132.png
<b>Fig Värdet 40 ger en rotation på 36 grader
</topic>

<topic> geg_dynamic_misc
Ljud och kommandon

TODO...
</topic>

<topic> geg_action_button
Sätta värden med trycknappar

<h1>Sätta ett digitalt värde
Action SetDig sätter värdet på en digital signal till 1 när man klickar på ett objekt.

Vi börjar med att tillverka en knapp av en rektangel. Genom att sätta 3D och öka shadow_width
till 15 får vi ett karakteristiskt knapp-utseende på rektangeln. Dessutom adderar vi
gradienten DiagonalLowerRight med gradient_contrast 1 för att ytterligare förstärka 3D 
effekten. Slutligen gör vi en grupp av rektangeln så att vi kan sätta Action på den.

<image> geg_fig133.png
<b>Fig En rektangel formad som en trycknapp

För att sätta en digital signal till 1 när man trycker på knappen, sätter vi SetDig i Action.
Det innebär att om signalens värde är 0 kommer det att sättas till 1. Om det redan är 1 blir
det ingen förändring.

Vi kopplar SetDig.Attribute till signalen H1-Dv1. 

<image> geg_fig134.png
<b>Fig Action SetDig på knappen

Resultatet blir att när vi klickar på knappen sätts H1-Dv1 till 1.

Det är möjlig att addera flera instanser av SetDig och för varje ny instans kopplar man en
ny signal som sätts till 1 när man klickar på knappen. På så sätt kan man sätta flera 
signaler på en knapptryckning.


<h1>Återställa ett digitalt värde
ResetDig fungera som SetDig med den skillnaden att den sätter värdet 0 på signalen i stället.

Vi sätter Action ResetDig och kopplar till signalen H1-Dv1.

<image> geg_fig135.png
<b>Fig Action ResetDig på knappen

Resultatet blir att när vi klickar på knappen sätts H1-Dv1 till 0.

<h1>Toggla ett digitalt värde
Med Action ToggleDig ändrar man värdet på en digital signal när man klickar på objektet. Om
värdet på signalen är 1, sätts det till 0, och om värdet på signalen är 0 sätts det till 1.

Vi kopplar ToggleDig.Attribute till signalen H1-Dv1.

<image> geg_fig136.png
<b>Fig Action ToggleDig på knappen

Resultatet blir att värdet på H1-Dv1 ändras när man klickar på knappen.

<h1>Sätta ett digitalt värde så länge knappen är nedtryckt
Med Action StoDig sättar man värdet på en digital signal till 1 när knappen trycks ned, och 
återställer till 0 när knappen släpps.

Vi sätter Action StoDig på knappen och kopplar den till H1-Dv1.

<image> geg_fig137.png
<b>Fig Action StoDig

Resultatet blir att när vi trycker på knappen, sätts H1-Dv1 till 1, och när vi släpper
knappen sätts H1-Dv1 till 0.

<h1>Trycknapp med bekräftelse
Om man adderar Action Confirm för en tryckknapp krävs det en bekräftelse från användaren 
innan actionen genomförs. När man klickar på knappen poppar det upp ett fönster där man 
antingen kan bekräfta eller avbryta. Texten i fönstret anges i Confirm.Text.

<h1>Sätta ett analog värde
För att sätta ett värde i en analog signal använder man Action SetValue. SetValue kopplas till
en analog signal, och när man klickar på objektet sätts ett specificerat värde i signalen.

Vi sätter Action SetValue på knappen, och kopplar till Av-objektet H4-Av1. Vi vill sätta
värdet 4.5 och lägger in 4.5 i SetValue.Value.

<image> geg_fig138.png
<b>Fig SetValue

Resultatet blir att när vi klickar på knappen läggs värdet 4.5 in i H4-Av1.

SetValue tillåter flera instanser, och för varje instans anger man ett värde och kopplar
instansen till en analog signal. Men knapptryckningen kan man då sätta olika värden i ett
antal analoga signaler.

<h1>Öka/Minska knappar
Med action IncrAnalog kan man öka eller minska värdet på en analog signal med en 
knapptryckning. IncrAnalog kopplas till en analog signal och i IncrAnalog.Increment anger
man hur mycket värdet ska öka eller minska vid varje klick. Man kan också lägga in min och
max-värde för signalen.

Vi lägger ut en ButtonUp och en ButtonDown. 

<image> geg_fig148.png
<b>Fig ButtonUp och ButtonDown

Båda har SetDig som default. Vi tar bort SetDig genom att avmarkera Inherit i Action, och 
markerar istället IncrAnalog. Vi kopplar båda knapparna till signalen H4-Av1. ButtonUp knappen
ska öka värdet med 1 för varje klick, så vi sätter IncrAnalog.Increment till 1. ButtonDown
knappen ska minska värdet med 1, så vi sätter IncrAnalog.Increment till -1. Vi lägger också 
in min och maxvärden och sätter IncrAnalog.MaxValue till 10. 

<image> geg_fig149.png
<b>Fig ButtonUp till vänster och ButtonDown till höger

Resultatet blir att när vi klickar på ButtonUp knappen ökar värdet på H4-Av1 med 1 för varje
klick tills värdet har nått max-värdet 10. När vi klickar på ButtonDown minskar värdet med 1
för varje klick men går inte under min-värdet 0.

<h1>Radioknappar
Radioknappar används när man vill välja ut ett alternativ av ett antal alternativ. För varje
alternativ skapar man en radioknapp och kopplar den till en digital signal. Därefter
grupperar man radio-knapparna. Action RadioButton fungerar så att signalen för den radioknapp
man klickar på sätts, medan övriga radioknappar i gruppen återställs. Det innebär att det är
högst ett alternativ som är valt, dvs bara en av signalerna är 1. 

Vi lägger ut fyra radioknappar av typen RadioButtonRelief. 

<image> geg_fig150.png
<b>Fig Fyra radioknappar

De har redan action RadioButton som default. Vi kopplar radioknapparna till var sin digital 
signal, H1-Dv1, H1-Dv2, H1-Dv3 och H1-Dv4. Därefter grupperar vi de fyra radioknapparna så 
att de tillhör samma grupp. Vidare lägger vi in några lämpliga texter för att beskriva de 
olika alternativen.

<image> geg_fig151.png
<b>Fig Den första radioknappen kopplad till H1-Dv1

När vi tar upp grafen med radioknappar i operatörsmiljön, kan vi välja ett av alternativen. 
Det utvalda makeras med ett svart prick, medan tidigare utvalda återställs. Samtidigt sätts 
signalen som den utvalda knappen är kopplad till, medan övriga signaler nollställs. I figuren
nedan är andra alternativet makerat, dvs H1-Dv2 är 1 och Dv1, Dv3 och Dv4 0.

<image> geg_fig152.png
<b>Fig Radioknapp markerad

<h1>Checkbox
Checkboxar brukar användas för att bocka för ett antal alternativ ut en lista. Till skillnad 
från radioknappar kan man välja ut flera alternativ samtidigt. En checkbox har action 
ToggleDig kombinerad med dynamiken DigShift. 

Vi skapar fyra checkboxar av typen Checkbox2, och lägger beskrivande texter intill.

<image> geg_fig153.png
<b>Fig Checkboxar

Checkboxarna kopplas till signalerna H1-Dv1, H1-Dv2, H1-Dv3 och H1-Dv4. Notera att både
DigShift.Attribute och ToggleDig.Attribut kopplas till samma signal.

<image> geg_fig154.png
<b>Fig Objektseditorn för den första checkboxen

I figuren nedan är första och tredje checkboxen markerad, dvs H1-Dv1 och H1-Dv3 är satta till
1.

<image> geg_fig155.png
<b>Fig Checkboxar markerade

</topic>

<topic> geg_action_popupmenu
Popup-meny
Med action PopupMenu kan man genom att högerklicka på ett objekt visa en popup-meny. 
Popup-menyn är kopplad till ett objekt i databasen, och visar upp metoderna för det objektet.
Vilka metoder som visas i popup-menyn beror på hur objektet är konfigurerat i databasen, och
vilka metoder som finns definerade för den typen av objekt.

Låt oss börja med ett enkelt exempel där vi visar värdet i ett Av-objekt i ett Value fält.
Vi skapar en ValueLargeCenter, kopplar den till H4-Av1 och lägger in formateringen %7.2f i
Value.Format.

<image> geg_fig122.png
<b>Fig ValueLargeCenter

Nu adderar vi även PopupMenu i Action, och lägger in Av-objektet i PopupMenu.ReferenceObject.
Notera att det är hela objektet som refereras och inte ett enskilt attribut.

Vi måste också öppna Files/Graph Attributes från menyn och sätta MB3Action till PopupMenu.

<image> geg_fig139.png
<b>Fig Action PopupMenu adderad

När vi nu tar upp bilden i operatörsmiljön och högerklickar på Value fältet öppnas 
popup-menyn.

<image> geg_fig140.png
<b>Fig Popupmenyn

Vilka metoder som finns i popmenyn beror vilken klass det refererade objektet tillhör och 
hur det är konfigurerat. I figuren nedan visas Av-objektets konfigurering, och vi kan se
attributen DefGraph, DefTrend, HelpTopic, DataSheet, CircuitDiagram, Photo och Note som
alla har samband med olika metoder.

<image> geg_fig141.png
<b>Fig Konfigurereringen av H4-Av1

Vi ska här gå igenom några av alternativen i popmenyn och se hur de är konfigurerade, eller
vad de är beroende av

<b>Graph
För Graph kan man specifiera en graf som visar information om objektet, eller 
anläggningsdelen där objektet förekommer. Konfigureringen sker genom att man lägger in ett
XttGraph objekt i DefGraph. För H4-Av1 är inte DefGraph ifyllt, och då öppnas grafen för 
närmaste överliggande objekt som har DefGraph ifyllt. I det här fallet är det hieraki-objektet
H4 som har en default graf angiven.

<b>Object Graph
Object Graph visar objektsbilden för objektet. Objektsbilden är en graf som visar 
information om ett objekt av en viss klass. Om det finns en objektbild tillgänglig för det
aktuella klassen finns det här alternativet i menyn.

<b>Trend
Visar en trend för objektet. Det kräver att en trend är konfigurerad med ett DsTrend objekt,
och att trend-objektet är inlagt in attributet DefTrend. DefTrend kan även vara ett 
DsFastCurve eller PlotGroup objekt.

<b>History
Visar en kurva med process historik för objektet. Det kräver att lagring av data är 
konfigurerat med ett SevHist objekt under objektet.

<b>Hist Event
Hist Event öppnar en dialog där man kan söka efter larm och händelser som finns lagrade för
det aktuella objektet. 

<b>Block Events
Block Event öppnar en dialog där man kan blockera larm av olika prioritet.

<b>Help
Help visar en hjälptext för objektet. Hjälptexter skrivs in i en hjälp-fil 
($pwrp_cnf/xtt_help.dat) och varje text omfattar ett ämne (topic). Genom att lägga in ett ämne
i attributet HelpTopic visas texten för det här ämnet när Help alternativet i popupmenyn
aktiveras.

<b>Note
Med Note kan man skriva in en text som lagras i objektets Note-attribut. Note texten visas i
objektets objektsbild.

<b>Open Object
Open Object öppnar objektet och visar innehållet i objektet.

<b>RtNavigator
RtNavigator letar upp objektet i runtime navigatorn.

<b>Crossreferences
Visar en lista med referenser till objektet i plc-kod och grafer.

<b>Help Class
Help Class öppnar en hjälptext för objekts-klassen.

<b>Photo
Photo visar ett fotografi på objektet i anläggningen. Det konfigureras genom att man lägger
in en URL till fotografiet i attributet Photo. 

<b>DataSheet
Om man har ett datablad för objektet, kan man lägga in en URL till detta i attributet
DataSheet.

<b>CircuitDiagram
En länk till ett kretsschema kan läggas in i attributet CircuitDiagram.
</topic>

<topic> geg_action_opengraph
Öppna en graf
För att öppna en graf genom att klicka på ett objekt, använder man normalt action OpenGraph.
Man kan även använda action Command med kommandot 'open graph'.

<h1>Öppna en graf från en trycknapp

Vi tillverkar en trycknapp för att öppna en bild, med en rektangel och en text som grupperas.

<image> geg_fig142.png
<b>Fig Trycknapp för att öppna en bild

<h2>Action OpenGraph
I första exemplet sätter vi action till OpenGraph. OpenGraph kräver att man har ett 
konfigurerat XttGraph objekt i databasen. XttGraph objektet läggs in i OpenGraph.GraphObject.

<image> geg_fig143.png
<b>Fig OpenGraph action

Om grafen ska kunna öppnas på flera olika noder, och man föredrar att använda lokala 
XttGraph-objekt, kan man ersätta nod-objektet med '$node'.

<b>$node-op-h4_Overview

$node kommer att ersättas med namnet på nod-objektet för den aktuella noden. Man måste 
givetvis se till att XttGraph-objekt med motsvarande namn finns på alla aktuella noder.

<h2>Action Command
Man kan även öppna en graf med action Command och kommandot

<c>open graph 'graphname' [/width=] [/height=]

eller en objektsbild med kommandot

<c>open graph /class /instance=

I det här exemplet har vi satt Command i Action och lagt ett kommando för att öppna
objektsbilden för Av-objektet H4-Av1.

<image> geg_fig144.png
<b>Fig Öppna en objektsbild

Om man redan har action PopupMenu och dessutom vill öppna objektsbilden när man klickar
på objektet, då räcker det med att addera OpenGraph till action. Man behöver inte fylla
i något objekt, utan det objekt som är angivet i PopupMenu.ReferenceObject väljs som default.

<image> geg_fig145.png
<b>Fig Öppna objektsbilden när PopupMenu är konfigurerat

Om man vill öppna ett visst inmatningsfält i bilden, i och med att bilden öppnas använder man
kommandot 'open graph /focus'. Här måste man även skicka med namnet på det inmatnings-objekt 
som ska öppnas (namnet kan man sätta med Edit/Change name i menyn).

<c>open graph /object=*-Graphs-SomeXttGraph /focus="TempSetValue"

<h1>Stänga en graf
För att stänga en graf används action CloseGraph. 

<image> geg_fig146.png
<b>Fig Trycknapp för att stänga en graf

Vi skapar en trycknapp med texten 'Close' och sätter Action till CloseGraph.

<image> geg_fig147.png
<b>Fig Action CloseGraph

</topic>

<topic> geg_action_command
Exekvera kommandon
Med action Command kan man ange ett xtt-kommando som exekveras när man klickar på ett objekt.
Det finns en rad xtt-kommandon för att öppna bilder, visa kurvor, anropa metoder etc. Xtt
kommandona finns beskrivna i Operator's Guide. Man kan även exekvera script med Command.

I det har exemplet ska vi öppna en trend-kurva från en trycknapp.
Vi skapar en rektangel, lägger en lämplig text ovanpå och grupperar rektangeln och texten.

<image> geg_fig156.png
<b>Fig Kommando trycknapp

I Action markeras Command och i Command.Command läggs xtt-kommandot in. Vi vill öppna en
trend-kurva som är konfigurerad med DsTrend objektet H4-Av1-Trend, och kommandot för att
öppna kurvan är

<c>open trend H4-Av1-Trend

<image> geg_fig157.png
<b>Fig Kommando för att öppna en trend

<h1>Exekvera ett script
Med ett script kan man utföra flera kommandon samtidigt, men man kan även läsa attribut
i databasen, test på olika villkor, och sätta attribut.

Ett script exekveras med ett xtt-kommando genom att ange filnamnet för scriptet med ett '@'
tecken framför, t ex

<c>@$pwrp_exe/my_script

kommer att exekvera scriptet my_script.rtt_com på $pwrp_exe.

Här är ett exempel på ett script som öppnar grafen g1 om H1-Dv1 är satt, annars öppnas grafen
g2.

<c>main()
<c>  int sts;
<c>
<c>  if ( GetAttribute( "H1-Dv1.ActualValue", sts))
<c>    open graph g1
<c>  else
<c>    open graph g2
<c>  endif
<c>endmain

</topic>

<topic> geg_action_help
Hjälp och info
Det är naturligtvis viktigt att en operatör enkelt och snabbt kan få hjälp om hur man ska 
hantera bilder och processer. Ett sätt att lösa det är att lägga in hjälp och info-knappar i 
bilden. Man kan t ex använda subgraferna ButtonHelp eller ButtonInfo. Action-typen för dessa 
är Help, och man anger ämne i Help.Topic, samt eventuellt bokmärke i Help.Bookmark. 
Help-funktionen hämtar upp hjälp-texter som skrivs in i filen $pwrp_cnf/xtt_help.dat, och 
med ett bokmärke kan man positionera på ett visst ställe i texten.
</topic>

<topic> geg_action_inputfocus
Navigera med tangenbordet
För mata in data och aktivera objekt utan att använda musen, använder man action-typen 
InputFocus. Om ett objekt har input focus skickas tangenttryckningar till objektet. För ett 
ValueInput objekt betyder att man kan mata in ett värde, för en tryckknapp att man kan 
aktivera den genom att trycka på Return. 

Focus input flyttas mellan objekten m h a Tab och piltangenterna. Hur input fokus ska 
flyttas, konfigureras i attributen NextHorizontal, NextVertical och NextTab. Man lägger här 
in objektsnamnen på det objekt input fokus ska flyttas till med pil höger, pil ner resp. 
Tab tangenterna.

Att ett objekt har input fokus markeras normalt med att en relief ritas runt objektet.
</topic>

</headerlevel>
</headerlevel>

<topic> geg_images
Gif och JPEG-bilder
Man lägger in en gif eller JPEG-bild på följande sätt. Kopiera bild-filen till $pwrp_pop. 
Den dyker då upp under mappen Local/Images i subgraf-paletten. Välj ut bilden och klicka med 
MB2 i arbetsarean.

<h2>Ändra färg
Funktionerna för att ändra färg på subgrafer, dvs färgton, ljushet, intensitet och 
färgskiftning, fungerar även på bild-objekt.

<h2>Dynamik
Man kan inte sätta någon dynamik direkt på bild-objekten. Däremot kan man låta dem ingå i en 
grupp eller subgraf, och ange dynamik för gruppen eller subgrafen. Om man dynamiskt vill 
ändra färg på bild-objektet ska man använda en dynamik-typ som ändrar färg-tonen, t ex 
DigTone.
</topic>

<topic> geg_createsubgraph
Rita en subgraf
En subgraf tillverkas genom att man ritar basobjekt i arbetsarean och sedan sparar dessa som 
en subgraf. Man kan även lägga in andra subgrafer i arbetsarean, men dessa kan inte ha någon 
egen dynamik, utan följer den dynamik som gäller för huvud-subgrafen. Det finns två speciella
objekt som kan användas i subgrafer: kopplings-punkter och annotationer.

Kopplingspunkter gör det möjligt att dra kopplings-linjer mellan objekt. De skapas genom att 
aktivera kopplingspunkt i verktygspanelen och klicka med MB1 i arbetsarean. I objekts-editorn
för kopplingspunkten kan man ställa in riktning (Direction) för punkten, dvs den riktning som
en koppling ut från punkten kommer att få. Kopplingspunkter på vänstersidan av ett objekt, 
bör ha Direction Left, ovansidan Up, högersidan Right och undersidan Down.

Annotation är plats för en text, som är olika för olika instanser av subgrafen. Den skapas 
genom att välja An i verktygspanelen och klicka med MB1 i arbetsarean. När man sedan skapar 
instanser av subgrafen kommer annotationerna att visas som attribut i objektseditorn för 
subgrafs-objekten som A1, A2 osv, och man kan härigenom lägga in texter i annotationerna.

När subgrafen är färdigritad tar man upp File/GraphAttributes och lägger in en etta i 
Subgraph. Genom att stänga fönstret och ta upp det igen, kan man lägga in attribut för 
subgrafen. Bl a kan man lägga in default-värden för dynamik-typ, DigLowColor mm. Därefter 
sparar man den under ett lämpligt namn.

Man skapar instanser av subgrafen genom att väja ut den under mappen Local/Subgraphs i 
subgraf-paletten, och klicka med MB2 i arbetsarean.

<h2>Subgraf med flera sidor
Vissa typer av dynamik, t ex animationer, bygger på att en subgraf har flera sidor. Vid 
animering gör man flera sidor med små förändringar mellan varje sida, och sidorna genomlöps 
sedan och ger illusionen av rörelse. Dynamik-typerna DigShift och AnalogShift använder också 
olika sidor, och skiftar mellan olika sidor, beroende på värdet av en digital resp analog 
signal.

När man ska rita en subgraf med flera sidor, gör man den första sidan på normalt sätt. När 
man har sparat den som en subgraf aktiverar man File/Page/Create next page (Shift+Ctrl/N). 
Nu skapas den andra sidan vilket markeras i titeln på fönstret. När förändringarna i sida 
nummer två är gjorda, sparar man denna och aktiverar återigen Create next page för att skapa 
den tredje sidan osv.

Man kan skifta mellan olika sidor med File/Page/Next page (Ctrl/N) och File/Page/Previous 
page (Ctrl+J). Ritar man animationer, är detta ett värdefullt sätt att se skillnader mellan 
de olika sidorna, och utröna hur animationen fungerar.

<h2>Slider
En slider konstrueras med två separata subgrafer, en bakgrund, och en rörlig del. Slidern 
ska alltid ritas stående, dvs så att rörelsen sker vertikalt.

För bakgrunds-subgrafen mäter man y-koordinaten för de punkter som slidern ska kunna röra sig
mellan, och lägger in i attributen y0 och y1 i Graph attributes. Som DynamicType lägger man 
in SliderBackground.

För den rörliga subgrafen mäter man y-koordinaten för den punkt som ska ställas in mot 
signalvärdet, och lägger in i y0. Attributet Slider sätts till 1.

<h2>FillLevel
För en subgraf med dynamiken FillLevel, t ex en termometer, vill man ofta sätta en min och 
en max-nivå, mellan vilka nivån kan ändras. Genom att mäta max och min-nivån och lägga in 
dem i attributen y0 resp y1 i Graph Attributes får man den här funktionen. Subgrafen måste 
alltid ritas stående så att nivån ändras nedifrån och upp.

<h2>Animation
För subgraf med dynamiken Animation, väljer man även en lämplig AnimationSequence i Graph 
Attributes. AnimationSequence kan vara Cyclic, Dig eller ForwBack.
</topic>

</chapter>

<chapter>
<topic>geref_windows
Fönster

I ge finns ett antal paletter och andra fönster för att välja objekt, subgrafer, färger mm.

<image> geref_fig18.png

<h1>Arbetsarean
I arbetsarean editeras bilden genom att klicka och dra med musen.

<b>Musklick     <t><t>Funktion
Klick MB1       <t><t>Välj ut ett objekt, eller skapa ett basobjekt.
Shift/Klick MB1 <t><t>Addera ett objekt till utvalslistan.
Press MB1       <t><t>Välj ut objekt inom ett område, eller flytta på objekt.
Shift/Press MB1 <t><t>Addera objekt inom ett område till utvalslistan.
DubbelKlick MB1 <t><t>Öppna objektseditorn för ett objekt.
Ctrl/DubbelKlick MB1 <t><t>Koppla första attributet i ett subgraf-objekt till 
                <t><t>ett rtdb-objekt.
Shift/Ctrl/DubbelKlick MB1 <t><t>Koppla andra attributet i ett subgraf-objekt 
                 <t><t>till ett rtdb-objekt.
Shift/DubbelKlick MB1 <t><t>Lägg in vald fyllnadsfärg i LowColor i ett 
                 <t><t>subgrafs-objekt.
Klick MB2        <t><t>Skapa ett subgrafs-objekt.
Press MB2        <t><t>Skapa en koppling

<h1>Navigationsfönster

Längst ner till vänster finns ett navigations-fönster som innehåller in mini-kopia av hela 
arbetsarean. Från navigationsfönstret kan man förflytta sig (MB1) och zooma (MB2) bilden i 
arbetsarean.

<h1>Subgraf-paletten

Subgraf-paletten består av ett antal mappar med subgrafer. Under Local/Subgraphs-mappen finns 
subgrafer som har skapats inom projektet. Övriga mappar innehåller subgrafer som följer med 
ProviewR.

<h1>Färg-paletten

I färgpaletten finns plats för 300 olika färg-nyanser. Här väljer man fyllnadsfärg, kantfärg 
och text -färg. Fyllnadsfärgen väljs med MB1 och visas i det vänstra fältet överst i 
paletten, kantfärg väljs med MB2 och visas i mitten fältet, och textfärgen väljs med 
Shift MB1 och visas i det högra fältet.

Paletten är uppdelad rader med 30 färger i varje. Den första raden består av svart, vitt, 
starka signalfärger samt en uppsättning gråtoner. Sedan följer en rad med gråskalan, och där 
efter 8 rader med olika färgton: gulgrön, gul, orange, röd, violett, blå, blågrön och grön. 
Inom varje färggrupp har de 10 första låg mättnad, de 10 mitten-färgerna lite högre mättnad, 
och de 10 sista hög mättnad.

Under färg-paletten finns även en färgton-palett med vilka man kan välja färgton för 
subgrafs-objekt.

Här finns även en reset-knapp med vilken man kan återgå till objektets ursprungliga färg.

<h1>Verktygs-panel

Verktygs-panelen består av ett antal tryckknappar för att skapa rektanglar, ellipser, linjer 
etc. Där finns även funktioner för att rotera och skala, sätta linjebredd, fontstorlek, 
modifera färger på subgrafer mm.

<h1>Objekts och attribut-editorn
<image> geref_fig19.png

Objekts-och attribut-editorn gör det möjligt att ange olika egenskaper på objekt, grafer och 
subgrafer.

För ett objekt tas den upp genom att man dubbelklickar på objeket, för graf eller subgrafer 
tas den upp från menyn under File/Graph attributes.

Värden i objektseditorn ändras genom att man markerar attributet och trycker på PilHöger 
eller från menyn med Functions/Change value.

Bitmaskar, enum-attribut och vektorer öppnas med PilHöger eller DubbelKlick MB1. Checkboxar 
ändras med PilHöger eller genom att klicka i checkboxen.

Det snabbaste sättet är att välja ut attribut med PilUpp och PilNer, att använda PilHöger för
att öppna och ändra attribut och PilVänster för att stänga attribut.

<h1>Plant hierarki
<image> geref_fig20.png

Om Ge startas från Navigatören visas planthierarkin i ett fönster under färgpaletten. Det 
används för att koppla dynamiska objekt till signaler i rtdb. Man kopplar ett subgraf-objekt 
till en signal genom att välja ut objektet (eller ett attribut i objektet) i planthierarkin, 
och klicka med Ctrl/DubbelKlick MB1 på subgraf-objektet. Då läggs signalnamet in i 
subgrafs-objektets Attribute-attribut. Finns det ett andra attribut som ska kopplas till en 
signal, kopplas detta på samma sätt med Shift/Ctrl/DubbelKlick MB1.
</topic>
</chapter>

<chapter>
<topic>geref_objects
Objekt

Objekt skapas genom att man väljer objektet i verktygspanelen och ritar det i arbetsarean med 
MB1. Objektet ritas med de aktuella värdena för fyllnad, fyllnadsfärg, kant, kantfärg och 
linjebredd. Om egenskaperna för ett existerande objekt ska ändras, markerar man det och 
markerar den färg, linjebredd eller dylikt som ska gälla. För ett objekt kan attribut-editorn
öppnas genom att dubbelklicka på objektet. Nedan anges under rubriken egenskaper de attribut 
som kan ändra från verktygspanelen eller färg-paletten, och under rubriken attribut de 
attribut som finns i objektseditorn.

<h1>Basobjekt

Rektangel 	<link> geref_rectangle
Rektangel med rundade hörn <link> geref_roundedrect
Ellips 		<link>geref_circle
Linje 		<link>geref_line
Polylinje 	<link>geref_polyline
Text 		<link>geref_text
Annotation 	<link>geref_annotation
Kopplingspunkt 	<link>geref_conpoint

<h1>Sammansatta objekt
Stapel 		<link>geref_bar
Stapeldiagram 	<link>geref_barchart
Cirkeldiagram 	<link>geref_pie
Trendkurva 	<link>geref_trend
Fastkurva 	<link>geref_fastcurve
Axis 		<link>geref_axis
AxisArc 	<link>geref_axisarc
Window		<link>geref_windowobject
TabbedWindow	<link>geref_tabbedwind
Table		<link>geref_table
XYCurve		<link>geref_xycurve

</topic>
<topic>geref_rectangle <style>function
Rektangel
<image> geref_fig6.png

En rektangel skapas genom att välja rektangel i verktygs-panelen och dra med MB1 i 
arbetsarean. Om man först aktiverar Functions/ScaleEqual ritas en kvadrat.

<h2>Egenskaper
- Fyllnad
- Fyllnadsfärg
- Kant
- Kantfärg
- Kantbredd
- 3D
- Gradient
- Bakgrundsfärg

<h2>Attribut
<b>Attribut      <t>Beskrivning
shadow_width   <t>Bredden av 3D-skuggan i % av längd eller bredd (den minsta).
shadow_contrast <t>Kontrast på 3D-skuggan. Ett värde mellan 1 - 3.
gradient_contrast <t>Kontrast på gradienten. Ett värde mellan 0 - 10.
gradient      <t>Typ av gradient.
invisible     <t>Objektet är osynligt men känsligt för musklick. Används för subgrafer för att
              <t>den känsliga arean för subgrafen.
fill_eq_background <t>Markerar att fyllnadsfärgen ritas med angiven bakgrundsfärg för objektet
	      <t>istället för aktuell fyllnadsfärg.
fixcolor      <t>Färgen är fix. Används när objektet är den del av en subgraph, och färgen inte
              <t>ska påverkas av färgsättningen av subgrafen.
relief        <t>Up ger skugga på undersidan och Down ger skugga på ovansidan
disable_shadow <t>Eliminerar 3D-funktionen. Används när objektet ingår i en subgraf 
              <t>och inte ska ritas med 3D när 3D är valt för subgrafs-instansen.
disable_gradient <t>Eliminerar gradient-funktionen. Används när objektet ingår i en subgraf 
              <t>och inte ska ritas med gradient när gradient är valt för subgrafs-instansen.
bgcolor_gradient <t>Färgen i gradienten går mellan bakgrundsfärgen och fyllnadsfärgen.
fixposition   <t>Objektet kan inte flyttas.
Dynamic       <t>Ej implementerat
</topic>

<topic>geref_roundedrect <style>function
RundadRektangel
<image> geref_fig7.png

En rektangel med rundade hörn skapas genom att välja rundad rektangel i verktygs-panelen och 
dra med MB1 i arbetsarean. Om man först aktiverar Functions/ScaleEqual ritas en kvadrat.

<h1>Egenskaper
- Fyllnad
- Fyllnadsfärg
- Kant
- Kantfärg
- Kantbredd
- 3D
- Gradient

<h2>Attribut
<b>Attribut     <t>Beskrivning
round_amount  <t>Storlek på rundingen i % av längd eller bredd (den minsta).
shadow_width  <t>Bredden av 3D-skuggan i % av längd eller bredd (den minsta).
shadow_contrast <t>Kontrast på 3D-skuggan.
relief       <t>Up ger skugga på undersidan och Down ger skugga på ovansidan
gradient_contrast <t>Kontrast på gradienten. Ett värde mellan 0 - 10.
gradient      <t>Typ av gradient.
disable_shadow <t>Eliminerar 3D-funktionen. Används när objektet ingår i en 
             <t>subgraf och inte ska ritas med 3D när 3D är valt för subgrafs-instansen.
disable_gradient <t>Eliminerar gradient-funktionen. Används när objektet ingår i en subgraf 
              <t>och inte ska ritas med gradient när gradient är valt för subgrafs-instansen.
fixposition   <t>Objektet kan inte flyttas.
Dynamic      <t>Ej implementerat
</topic>

<topic>geref_circle <style>function
Ellips
<image> geref_fig8.png

En ellips skapas genom att välja ellips i verktygs-panelen och dra med MB1 i arbetsarean. 
Mha angle1 och angle2 kan segment eller pajbitar av ellipsen ritas. Om man först aktiverar 
Functions/ScaleEqual ritas en cirkel.

<h2>Egenskaper
- Fyllnad
- Fyllnadsfärg
- Kant
- Kantfärg
- Kantbredd
- 3D
- Gradient
- Bakgrundsfärg

<h2>Attribut
<b>Attribut     <t>Beskrivning
angle1       <t>Vinkel från x-axeln i grader till början av segmentet.
angle2       <t>Vilkel i grader som anger storleken på segmentet.
shadow_width  <t>Bredden av 3D-skuggan i % av längd eller bredd (den minsta).
shadow_contrast <t>Kontrast på 3D-skuggan.
gradient_contrast <t>Kontrast på gradienten. Ett värde mellan 0 - 10.
gradient      <t>Typ av gradient.
relief       <t>Up ger skugga på undersidan och Down ger skugga på ovansidan
fixcolor      <t>Färgen är fix. Används när objektet är den del av en subgraph, och färgen inte
              <t>ska påverkas av färgsättningen av subgrafen.
disable_shadow <t>Eliminerar 3D-funktionen. Används när objektet ingår i en 
             <t>subgraf och inte ska ritas med 3D när 3D är valt för subgrafs-instansen.
disable_gradient <t>Eliminerar gradient-funktionen. Används när objektet ingår i en subgraf 
              <t>och inte ska ritas med gradient när gradient är valt för subgrafs-instansen.
fixposition   <t>Objektet kan inte flyttas.
fill_eq_background <t>Markerar att fyllnadsfärgen ritas med angiven bakgrundsfärg för objektet
	      <t>istället för aktuell fyllnadsfärg.
Dynamic      <t>Ej implementerat
</topic>

<topic>geref_line <style>function
Linje
<image> geref_fig10.png

En linje skapas genom att välja linje i verktygs-panelen och dra med MB1 i arbetsarean. 
Genom att aktivera Functions/MoveRestrictions/Horizontal eller Vertical ritar man 
horisontella resp vertikala linjer.

<h2>Egenskaper
- Kant
- Kantfärg
- Kantbredd
- Linjetyp

<h2>Attribut
<b>Attribut     <t>Beskrivning
Dynamic      <t>Ej implementerat
</topic>

<topic>geref_polyline <style>function
Polylinje
<image> geref_fig9.png

En polylinje skapas genom att välja polylinje i verktygs-panelen och dra med MB1 i 
arbetsarean. När MB1 släpps skapas första del-linjen. Genom att på nytt dra med MB1 skapas 
flera del-linjer. När alla linjer är ritade avslutas med MB3.

Om man vill flytta på enskilda bryt-punkter i en polylinje, markerar man polylinjen och 
väljer Edit/Edit polyline i menyn. Editeringen avslutas med MB3.

Genom att aktivera Functions/MoveRestrictions/Horizontal eller Vertical ritar man 
horisontella resp vertikala linjer. Horizontal eller Vertical anger riktningen på den första 
del-linjen. Övriga ritas vinkelräta mot närmast föregående del-linje. MoveRestrictions kan 
avbrytas i en polyline med Functions/MoveRestrictions/No.

<h2>Egenskaper
- Fyllnad
- Fyllnadsfärg
- Kant
- Kantfärg
- Kantbredd
- 3D
- Gradient
- Bakgrundsfärg

<h2>Attribut
<b>Attribut    <t>Beskrivning
shadow_width   <t>Bredden av 3D-skuggan i % av längd eller bredd (den minsta).
shadow_contrast <t>Kontrast på 3D-skuggan.
relief        <t>Up ger skugga på undersidan och Down ger skugga på ovansidan
gradient_contrast <t>Kontrast på gradienten. Ett värde mellan 0 - 10.
gradient      <t>Typ av gradient.
disable_shadow <t>Eliminerar 3D-funktionen. Används när objektet ingår i en 
              <t>subgraf och inte ska ritas med 3D, när 3D är valt för subgrafs-instansen.
disable_gradient <t>Eliminerar gradient-funktionen. Används när objektet ingår i en subgraf 
              <t>och inte ska ritas med gradient när gradient är valt för subgrafs-instansen.
fill_eq_border <t>Markerar att fyllnadsfärgen ritas med angiven kantfärg istället för 
              <t>aktuell fyllnadsfärg. Detta kan användas i submodeller där vissa 
              <t>markeringar, pilar o dyl, mer hör ihop med kant-färgen än fyllnadsfärgen.
fill_eq_background <t>Markerar att fyllnadsfärgen ritas med angiven bakgrundsfärg för objekete
	      <t>istället för aktuell fyllnadsfärg.
fill_eq_light <t>Om objektet ingår i en subgraf, ges det samma färg som en 3D-dager, 
              <t>när 3D är valt fär subgrafs-instansen.
fill_eq_shadow <t>Om objektet ingår i en subgraf, ges det samma färg som en 3D-skugga, 
              <t>när 3D är valt fär subgrafs-instansen.
fill_eq_bglight <t>Om objektet ingår i en subgraf, ritas det med dager-tonen för
              <t>bakgrundsfärgen, när 3D är valt för subgrafs-instansen.
fill_eq_bgshadow <t>Om objektet ingår i en subgraf, ritas det med skuggtonen för 
              <t>bakgrundsfärgen, när 3D är valt för subgrafs-instansen.
fixcolor      <t>Färgen är fix. Används när objektet är den del av en subgraph, och färgen inte
              <t>ska påverkas av färgsättningen av subgrafen.
fixposition   <t>Objektet kan inte flyttas.
Dynamic       <t>Ej implementerat
</topic>

<topic>geref_text <style>function
Text
<image> geref_fig11.png

En text skapas genom att välja text i verktygs-panelen och klicka med MB1 i arbetsarean. Då 
öppnar sig ett inmatningsfält och texten kan matas in. Texten kan ändras med Edit/Change 
text i menyn eller från objekts-editorn.

För närvarande finns endast fonterna Helvetica, normal och fet i svart. Max antal tecken i 
textsträngen är 79.

<h2>Egenskaper
- Fontstorlek
- Normal, fet text
- Text färg
- Justering

<h2>Attribut
<b>Attribut  <t>Beskrivning
Text         <t>Aktuell text, max 79 tecken.
Adjustment   <t>Justering av texten, vänster, höger eller mitt.
Dynamic      <t>Ej implementerat
</topic>

<topic>geref_annotation <style>function
Annotation

Annotation är en text i en subgraf som är unik för varje instans av subgrafen. Det kan t ex 
vara texten på en tryck-knapp, eller visning av ett analogt värde. Vid editering av subgrafen
markerar man platsen för texten. Själva texten matas in i objektseditorn för instansen av 
subgrafen (eller hanteras av vissa dynamiska funktioner).

En annotation skapas genom att välja annotation (An) i verktygs-panelen och klicka MB1 i 
arbetsarean.

Annotation kan endast skapas i en subgraf. Det finns plats för 10 annotations i en subgraf. 
Varje annotation ska ges ett nummer som är unikt inom subgrafen.

Observera att vissa typer av dynamik (Value och SetDig etc) kräver speciella nummer för 
annotation.

<h2>Egenskaper
- Normal, fet
- Textfärg
- Justering

<h2>Attribut
<b>Attribut     <t>Beskrivning
TextSize     <t>Textstorlek 0-7
Number       <t>Numrering av annotations inom en subgraf.
Adjustment   <t>Justering av texten, vänster, höger eller mitt.
Font	     <t>Typsnitt.
Type	     <t>Enradig eller flerradig.
Protected    <t>Texten visas ej utan markeras med asterisk tecken. Används för inmatning
             <t>av passerord.
</topic>

<topic>geref_conpoint <style>function
Kopplingspunkt

En kopplingspunkt i en subgraf gör det möjligt att dra kopplingar mellan instanser av 
subgrafen. I subgrafen anges kopplingspunktens läge, samt den riktning från kopplingspunkten 
en koppling ska ritas.

En kopplingspunkt skapas genom att välja kopplingspunkt i verktygs-panelen och klicka med 
MB1 i arbetsarean.

Kopplingspunkter kan endast skapas i subgrafer.

Kopplingspunkten markeras med en cirkel vid editeringen av subgrafen men kommer ej att synas
i instanserna av subgrafen.

Om kopplingpunken ska kopplas till kopplingar av grafcet eller routed typ, måste riktning 
anges. Denna kan ställas in i meny eller anges i objektseditorn.

Varje kopplingspunkt har ett nummer som måste vara unikt inom subgrafen.

<h2>Egenskaper
- Riktning

<h2>Attribut
<b>Attribut      <t>Beskrivning
Number        <t>Numrering av kopplingspunkter inom en subgraf
Direction     <t>Riktning: upp, ner vänster eller höger.
Dynamic       <t>Ej implementerat
</topic>

<topic>geref_complexobj <style>function
Sammansatta objekt
</topic>

<headerlevel>
<topic>geref_bar <style>function
Stapel
<image> geref_fig13.png

Stapel är ett sätt av visa värdet på en analog signal.
Fyllnad och fyllnadsfärg, kantfärg mm anger egenskaper för stapelns bakgrundsrektangel. 
Egenskaper för själva stapeln anges i objektseditorn.
En stapel skapas genom att välja stapel i subgrafs-paletten, 'Analog-Bar',  och klicka med MB2
i arbetsarean.

<h2>Egenskaper
- Fyllnad (för bakgrundsrektangel)
- Fyllnadsfärg (för bakgrundsrektangel)
- Kant (för bakgrundsrektangel)
- Kantfärg (för bakgrundsrektangel)
- Kantbredd (för bakgrundsrektangel).

<h2>Attribut
Attribut      <t>Beskrivning
Bar.Attribute <t>Namn på signal i rtdb.
Bar.MaxValue  <t>Signalvärde som motsvarar full länd på stapeln.
Bar.MinValue  <t>Signalvärde som motsvarar noll längd på stapeln
Bar.Value     <t>Kan utnyttjas som testvärde i editorn.
Bar.BarColor  <t>Fyllnadsfärg på stapeln (defaultvärdet Inherit innebär att 
              <t>kantfärgen för bakgrundrektangeln väljs)
Bar.BorderColor <t>Kantfärg på kantlinjen mellan staplen och bakgrundsrektangeln 
              <t>(defaultvärdet Inherit innebär att kantfärgen för bakgrundrektangeln väljs)
Bar.BorderWidth <t>Kantlinjens linjebredd (1-8)
Dynamic       <t>Ej implementerat
</topic>

<topic>geref_barchart <style>function
Stapeldiagram
<image> geg_fig170.png

Ett stapeldiagram visar ett antal staplar i ett diagram. Varje stapel kan indelas i segment
med olika färg. Man kan ha upp till 12 segment. Storleken på varje segment anges av en 
vektor av float, där elementen i vektorn anger storleken på segmentet i de olika staplarna.

Egenskaperna fyllnad, fyllnadsfärg, kantfärg mm, anger egenskaper för bakgrunds-rektangeln.
Egenskaperna för staplar och segment anges i objekts-editorn. 
Ett stapeldiagram skapas genom att välja BarChart i subgrafs-paletten, 'Analog/BarChart', och
klicka med MB2 i arbetsarean.

<h2>Egenskaper
- Fill (för bakgrundsrektangel)
- Fillcolor (för bakgrundsrektangel)
- Border (för bakgrundsrektangel)
- Bordercolor (för bakgrundsrektangel)
- Linewidth (för bakgrundsrektangel)

<h2>Attribut
Attribut           <t><t>Beskrivning
BarChart.Attribute0 <t><t>Namnet på en array i databasen. Värdena i arrayen anger storleken på
                    <t><t>det första segmentet i de olika staplarna.
BarChart.Attribute1 <t><t>Array for andra segmentet.
...
BarChart.Attribute11 <t><t>Array för det tolfte segmentet..
BarChart.Bars      <t><t>Antal staplar.
BarChart.BarSegments <t><t>Antal segment i varje stapel.
BarChart.MaxValue  <t><t>Värde som motsvarar full längd på en stapel.
BarChart.MinValue  <t><t>Värde som motsvarar noll längd på en stapel.
BarChart.BarColor1  <t><t>Fyllnadsfärg för det första segmentet.
BarChart.BarColor2  <t><t>Fyllnadsfärg för det andra segmentet.
...
BarChart.BarColor12 <t><t>Fyllnadsfärg för det tolfte segmentet.
Dynamic             <t><t>Ej implementerat.
</topic>

<topic>geref_pie <style>function
Cirkeldiagram
<image> geg_fig171.png

Ett cirkeldiagram med ett antal sektorer i olika färger. Diagrammet kan innehålla upp till
12 sektorer. Storleken på varje sektor anges av ett signalvärde.

Egenskaperna fyllnad, fyllnadsfärg, kantfärg mm, anger egenskaper för bakgrunds-cirkeln.
Egenskaperna för sektorerna anges i objekts-editorn. 
Ett cirkeldiagram skapas genom att välja Pie i subgrafs-paletten, 'Analog/Pie', och
klicka med MB2 i arbetsarean.

<h2>Egenskaper
- Fill (för bakgrundscirkeln)
- Fillcolor (för bakgrundscirkeln)
- Border (för bakgrundscirkeln)
- Bordercolor (för bakgrundscirkeln)
- Linewidth (för bakgrundscirkeln)

<h2>Attribut
Attribut      <t><t>Beskrivning
Pie.Attribute0 <t><t>Databas attribut av typen Float som anger storleken på den första sektorn.
Pie.Attribute1 <t><t>Databas attribut för den andra sektorn.
...
Pie.Attribute11 <t><t>Databas attribut för den tolfte sektorn.
Pie.Angle1      <t><t>Startvinkel i grader från x-axeln.
Pie.Angle2      <t><t>Vinkel i grader som anger diagrammets utbredning.
Pie.Sectors     <t><t>Antal sektorer.
Pie.MaxValue    <t><t>Maxvärde för diagrammets signalvärdesområde.
Pie.MinValue    <t><t>Minvärde för diagrammets singalvärdesområde.
Pie.SectorColor1 <t><t>Fyllnadsfärg för den första sektorn.
Pie.SectorColor2 <t><t>Fyllnadsfärg för den andra sektorn.
...
Pie.SectorColor12  <t><t>Fyllnadsfärg för den tolfte sektorn.
Dynamic       <t><t>Ej implementerad.
</topic>

<topic>geref_trend <style>function
Trendkurva
<image> geref_fig14.png

Trendkurva är ett sätt av visa värdet på en eller ett par analoga signaler.

Kurvorna kan rita med eller utan fyllnad, där fyllnad innebär att arean mellan kurvan och 
tidsaxeln fylls. Kurvorna ritas med andra rtdb-parameter överst. Om kurvan för denna helt 
täcker den andra kurva markeras värdet på rtdb-parameter nr 1 med kantlinjen.

I Trendkurvan kan ritas ett antal horisontella och vertikala linjer med kantfärgen för 
bakgrundsrektangeln. Antalet linjer konfigureras i objektseditorn.

Fyllnad och fyllnadsfärg, kantfärg mm anger egenskaper för kurvans bakgrundsrektangel. 
Egenskaper för själva kurvan anges i objektseditorn.

En trendkurva skapas genom att välja trend i subgrafs-paletten, 'Analog-Trend',  och klicka med
MB2 i arbetsarean.

<h2>Egenskaper
- Fyllnad (för bakgrundsrektangel)
- Fyllnadsfärg (för bakgrundsrektangel)
- Kant (för bakgrundsrektangel)
- Kantfärg (för bakgrundsrektangel och vertikala och horisontella linjer)
- Kantbredd (för bakgrundsrektangel)

<h2>Attribut
<b>Attribut     <t><t>Beskrivning
Trend.Attribute1  <t><t>Signal för kurva nr 1.
Trend.Attribute2  <t><t>Signal för kurva nr 2.
Trend.MinValueAttr1 <t>Signal för minvärde kurva nr 1. Används när minvärdet
		  <t>är dynamiskt. För statisk värde används Trend.MinValue1.
Trend.MaxValueAttr1 <t>Signal för maxvärde kurva nr 1. Används när maxvärdet
		  <t>är dynamiskt. För statisk värde används Trend.MaxValue1.
Trend.MinValueAttr2 <t>Signal för minvärde kurva nr 2. Används när minvärdet
		  <t>är dynamiskt. För statisk värde används Trend.MinValue2.
Trend.MaxValueAttr2 <t>Signal för maxvärde kurva nr 2. Används när maxvärdet
		  <t>är dynamiskt. För statisk värde används Trend.MaxValue2.
Trend.HoldAttr <t>Signal för att frysa kurvan.
Trend.TimeRangeAttr <t>Signal av typen Float32 för kurvans tidskala.
Trend.Mark1Attr   <t><t>Signal för positionen av markeringslinje nr 1.
Trend.Mark2Attr   <t><t>Signal för positionen av markeringslinje nr 2.
Trend.Mark1Color  <t><t>Färg på markeringslinje nr 1.
Trend.Mark2Color  <t><t>Färg på markeringslinje nr 2.
Trend.NoOfPoints  <t><t>Antal punkter på kurvan
Trend.ScanTime    <t><t>Tidsintervall mellan två punkter.
Trend.CurveLineWidth <t><t>Linjebredd på kurvan (1-8)
Trend.FillCurve   <t><t>Anger att området mellan kurvan och tidsaxeln 
                  <t><t>ska fyllas
Trend.HorizontalLines <t><t>Antal horisontella linjer
Trend.VerticalLines <t><t>Antal vertikala linjer
Trend.MaxValue1   <t><t>Maxvärde för Attribute1
Trend.MinValue1   <t><t>Minvärde för Attribute1
Trend.CurveColor1 <t><t>Kantfärg på kurvan för Attribute1
Trend.CurveFillColor1 <t><t>Fyllnadsfärg på kurvan för Attribute1
Trend.MaxValue2   <t><t>Maxvärde för Attribute2
Trend.MinValue2   <t><t>Minvärde för Attribute2
Trend.CurveColor2 <t><t>Kantfärg på kurvan för Attribute2
Trend.CurveFillColor2 <t><t>Fyllnadsfärg på kurvan för Attribute2
Trend.Dynamic     <t><t>Ej implementerat
</topic>

<topic>geref_fastcurve <style>function
FastCurve
<image> geref_fig14.png

FastCurve visar en eller två kurvor konfigurereade med ett DsFastCurve objekt.
En FastCurve är mätning av en signal under en viss tid. Mätningen triggas av
någon händelse, och när mätningen är slutförd visas kurvan i FastCurve objektet.

<h2>Attribut
<b>Attribut             <t><t>Beskrivning
FastCurve.FastObject    <t><t>Databas-objekt av typen DsFastCurve.
FastCurve.CurveIndex1   <t><t>Index i DsFastCurve objektet för den första kurvan.
FastCurve.CurveIndex2   <t><t>Index i DsFastCurve objektet för den andra kurvan.
FastCurve.NoOfPoints    <t><t>Antal punkter i kurvan.
FastCurve.CurveLineWidth <t><t>Linjebredd.
FastCurve.FillCurve     <t><t>Arean mellan kurvan och x-axeln fylls.
FastCurve.HorizontalLines <t><t>Antal horisonella linjer.
FastCurve.VerticalLines <t><t>Antal vertikala linjer.
FastCurve.MaxValue1     <t><t>Maxvärde för signalområdet för kurva 1.
FastCurve.MinValue1     <t><t>Minvärde för signalområdet för kurva 1.
FastCurve.CurveColor1   <t><t>Färg på kurva 1.
FastCurve.CurveFillColor1 <t><t>Fyllnadsfärg på kurva 1.
FastCurve.MaxValue2     <t><t>Maxvärde för signalområdet för kurva 2.
FastCurve.MinValue2     <t><t>Minvärde för signalområdet för kurva 2.
FastCurve.CurveColor2   <t><t>Färg på kurva 2.
FastCurve.CurveFillColor2 <t><t>Fyllnadsfärg på kurva 2.
</topic>

<topic>geref_axis <style>function
Axis
<image> geref_fig12.png

Axis visar skalområdet på kurva eller stapel i x- eller y-led.
Axis finns i två varanter, en med fasta min och max värden,
och en med dynamiska min och max värden, där min och max kopplas
till signaler i databasen. För ett dynamiskt Axis objekt beräknas
värden på Lines, LongQuotient, ValueQuotient och Format automatiskt
i runtime.

<h2>Attribut
<b>Attribut  <t>Beskrivning
MaxValue     <t>Övre värde på skalområdet.
MinValue     <t>Undre värde på skalområdet.
Lines        <t>Antal linjer vinkelräta mot axeln.
LongQuotient <t>Hur stor del av linjerna som ska vara långa. T ex 4 innebär 
             <t>att var 4:e linje är längre
ValueQuotient <t>Hur ofta värden ska skrivas ut. T ex 4 innebär att ett värde 
             <t>skrivs ut vid var 4:e linje.
Format       <t>Format i c-syntax för utskrivna värden.
Dynamic      <t>Ej implementerat.

<b>Dynamisk Axis
Axis.MinValueAttr <t>Signal för minvärde av typ Float32 eller Int32.
Axis.MaxValueAttr <t>Signal för maxvärde av typ Float32 eller Int32.
Axis.KeepSettings <t>Om 0 beräknas nya värden på  Lines, LongQuotient, ValueQoutient
                  <t>och Format när min eller maxvärdet har ändrats dynamiskt.
                  <t>Om KeepSettings är 1 behålls de ursprungliga värdena.

</topic>

<topic>geref_axisarc <style>function
AxisArc
<image> geg_fig172.png

AxisArc är en cirkelformat skala som visar skalområdet för en visare.
Som för Axis finns det två varanter av AxisArc, en med med fasta min 
och max värden, och en med dynamiska min och max värden, där min och 
max kopplas till signaler i databasen. För ett dynamiskt AxisArc objekt beräknas
värden på Lines, LongQuotient, ValueQuotient och Format automatiskt
i runtime.

<h2>Attribut
<b>Attribut  <t>Beskrivning
Angle1       <t>Startvinkel i grader från x-axeln.
Angle2       <t>Vinkel i grader som anger skalans utbredning.
MaxValue     <t>Övre värde på skalområdet.
MinValue     <t>Undre värde på skalområdet.
Lines        <t>Antal linjer vinkelräta mot axeln.
LongQuotient <t>Hur stor del av linjerna som ska vara långa. T ex 4 innebär 
             <t>att var 4:e linje är längre
ValueQuotient <t>Hur ofta värden ska skrivas ut. T ex 4 innebär att ett värde 
             <t>skrivs ut vid var 4:e linje.
Format       <t>Format i c-syntax för utskrivna värden.
Dynamic      <t>Ej implementerat.

<b>Dynamisk AxisArc
Axis.MinValueAttr <t>Signal för minvärde av typ Float32 eller Int32.
Axis.MaxValueAttr <t>Signal för maxvärde av typ Float32 eller Int32.
Axis.KeepSettings <t>Om 0 beräknas nya värden på  Lines, LongQuotient, ValueQoutient
                  <t>och Format när min eller maxvärdet har ändrats dynamiskt.
                  <t>Om KeepSettings är 1 behålls de ursprungliga värdena.

</topic>

<topic>geref_windowobject <style>function
Window
<image> geref_fig15.png

Window visar en separat graf inom ett specificerat område i en annan graf. Grafen kan visas 
med eller utan skroll-lister.

<h2>Begränsningar
Kopplingar i fönstret skalas inte på rätt sätt.

<h2>Attribut
<b>Attribut    <t><t>Beskrivning
Window.FileName <t><t>Namn på den graf som ska visas i fönstret.
Window.Scale    <t><t>Skalning av grafen.
Window.VerticalScrollbar  <t><t>I fönstret visas en vertical skroll-list.
Window.HorizontalScrollbar <t><t>I fönstert visas en horisontell skroll-list.
Window.ScrollbarWidth  <t><t>Bredd på skoll-list.
Window.ScrollbarColor  <t><t>Fyllnadsfärg på skroll-listens rörliga del.
Window.ScrollbarBgColor <t><t>Fyllnadsfärg på skroll-listens fasta del.
</topic>

<topic>geref_tabbedwind <style>function
TabbedWindow
<image> geref_fig17.png

TabbedWindow är ett Window objekt med flik-register. För varje flik anges en separat graf, 
och när fliken aktiveras visas en angivna grafen i fönstret.

<h2>Begränsningar
Kopplingar i fönstret skalas inte på rätt sätt.

<h2>Attribut
<b>Attribut    <t><t>Beskrivning
Folder.NumberOfFolders  <t><t>Antalet flikar.
Folder.HeaderHeight     <t><t>Höjd på flikarna.
Folder.ColorSelected    <t><t>Färg på den flik som visas för tillfället.
Folder.ColorUnselected  <t><t>Färg på flik som ej visas för tillfället.
Folder.ScrollbarWidth   <t><t>Bredd på skroll-list.
Folder.ScrollbarColor   <t><t>Fyllnadsfärg på skroll-listens rörliga del.
Folder.ScrollbarBgColor <t><t>Fyllnadsfärg på skroll-listens fasta del.
Folder1.FileName        <t><t>Namn på den graf som ska visas i den första 
                        <t><t>fliken.
Folder1.Text            <t><t>Text på den första fliken
Folder1.Scale           <t><t>Skalning på grafen i flik nr 1.
Folder1.VerticalScrollbar <t><t>För flik nr 1 visas en vertical skroll-list.
Folder1.HorizontalScrollbar <t><t>För flik nr 1 visas en horisontell skroll-list.
</topic>

<topic>geref_table <style>function
Table
<image> geref_fig16.png

Ett table-objekt visar en tabell med ett visst antal rader och kolumner. Varje kolumn kopplas
till ett vektor-attribut i databasen, och värdet för elementen i vektorn visas i kolumnen. 

En cell i tabellen kan väljas ut genom att man klickar på den eller med pil-tangenterna (om 
aktions-typen InputFocus är konfigurerad för tabellen). Till varje kolumn kan man koppla ett 
urvals-attribut, i form av ett vektor-attribut i databasen av typen Boolean. När en cell 
väljs ut, sätts motsvarande element i urvals-attributet, och det tidigare utvalda återställs.

Om det kopplade vektor-attributet till en kolumn är av typen Objid, kan man öppna en 
popup-meny med metoderna för objekten som visas i kolumnen.

Vektor-attributen ska anges med datatyp och storlek, t ex VWX-P1-Table.TabVect##Float32#100, 
där Float32 är datatypen och 100 antalet element i vektorn.

Tabell-objektet består av följande komponenter:
- Vertikal och horisontal skroll-list.
- En header rad med rubrik för varje kolumn. Header raden omfattas ej av den vertikala 
  skroll-listen.
- En header kolumn. Kolumnen längst till vänster kan konfigureras som en header kolumn, 
  vilket innebär att den inte omfattas av den horisontella skroll-listen.

<h2>Attribut
<b>Attribut     <t><t>Beskrivning
Table.Rows   <t><t>Antalet rader i tabellen (header raden ej 
             <t><t>inräknad).
Table.Columns <t><t>Antalen kolumner i tabellen (ev header kolumn 
             <t><t>inräknad).
Table.HeaderRow <t><t>Header rad med rubrik för varje kolumn ritas.
Table.HeaderColumn <t><t>Den vänstra kolumnen omfattas inte av den 
             <t><t>horizontella scroll-listen.
Table.RowHeight  <t><t>Rad höjd.
Table.HeaderTextSize <t><t>Text-storlek på texten i header raden.
Table.HeaderTextBold <t><t>Texten i header raden ska vara fet.
Table.HeaderTextColor <t><t>Färg på texten i header raden.
Table.Options   <t><t>Bitmask med tillvals-funktioner.
                <t><t>1: Om cellen i kolumnen längst till vänster i en 
                <t><t>rad är tom, ritas alla celler på raden tomma.
Table.VerticalScrollbar <t><t>Vertikal skroll-list i tabellen.
Table.HorizontalScrollbar <t><t>Horisontal skroll-list i tabellen.
Table.ScrollbarWidth <t><t>Bredd på skroll-list.
Table.ScrollbarColor <t><t>Fyllnadsfärg på skroll-listens rörliga del.
Table.ScrollbarBgColor <t><t>Fyllnadsfärg på skroll-listens fasta del.
Column1.Attribute <t><t>Vektor-attribut. Värdet på varje element visas på 
                  <t><t>motsvarande rad i kolumnen. Attributet ska anges med 
                  <t><t>datatyp och storlek, se ovan.
Column1.Format    <t><t>Format i c syntax.
Column1.SelectAttribute <t><t>Vektor-attribut av typen Boolean. När en cell i 
                  <t><t>kolumnen väljs ut, sätt motsvarande element i vektorn. 
                  <t><t>Attributet ska anges med datatyp och storlek, se ovan.
Column1.Width      <t><t>Bredd på kolumnen.
Column1.HeaderText <t><t>Rubrik på kolumnen. Rubriken skrivs i 
                  <t><t>header-raden.
</topic>

<topic>geref_xycurve <style>function
XYCurve
<image> geg_fig173.png

XYCurve visar kurvor definierade med x och y koordinater. 10 kurvor kan visas i ett
XYCurve objekt. För varje kurva kopplas objektet till två vektorer som innehåller
s och y koordinaterna för kurvan. Ett digital signal kopplas till UpdateAttr som
indikerar när koordinaterna har uppdaterats och kurvan ska ritas om.
Skalområdena i x och y riktning kan anges med fixa värden, eller kopplas till
attribut i databasen. Antal punkter i kurvan kan också definieras statiskt eller
med en koppling till ett databasattribut.

XYCurve kan kopplas till godtyckliga attribut i databasen, men det finns en speciell
klass, XyCurve, som kan användas för att lagra en kurva med 100 punkter. Den innehåller
två vektorer med 100 element för koordinaterna, samt attributa för skalområden, antal
punkter och uppdatering.

<h2>Attribut
<b>Attribut             <t><t>Beskrivning
XY_Curve.XAttr          <t><t>Vektor i databasen som innehåller x-koordinater för kurvan.
XY_Curve.YAttr          <t><t>Vektor i databasen som innehåller y-koordinater för kurvan.
XY_Curve.UpdateAttr     <t><t>Databas attribut av typen Boolean som indikerar att kurvan
                        <t><t>ska uppdateras.
XY_Curve.XMinValue      <t><t>Minvärde för skalområde i x-riktning.
XY_Curve.XMaxValue      <t><t>Maxvärde för skalområde i x-riktning.
XY_Curve.YMinValue      <t><t>Minvärde för skalområde i y-riktning.
XY_Curve.YMaxValue      <t><t>Maxvärde för skalområde i y-riktning.
XY_Curve.XMinValueAttr  <t><t>Databas attribut som innehåller minvärde för skalområde
                        <t><t>i x-riktning.
XY_Curve.XMaxValueAttr  <t><t>Databas attribut som innehåller maxvärde för skalområde
                        <t><t>i x-riktningen.
XY_Curve.YMinValueAttr  <t><t>Databas attribut som innehåller minvärde för skalområde
                        <t><t>i y-ritning.
XY_Curve.YMaxValueAttr  <t><t>Databas attribut som innehåller maxvärde för skalområde
                        <t><t>i y-riktning.
XY_Curve.NoOfPointsAttr <t><t>Databas attribut av typ integer med antal punkter i kurvan.
XY_Curve.CurveColor     <t><t>Kurvans färg.
XY_Curve.FillColor      <t><t>Kurvans fyllnadsfärg.
XY_Curve.Instances      <t><t>Genom att addera flera instanser kan man visa flera kurvor
                        <t><t>i samma diagram. Max 10 kurvor kan visas.
XY_Curve.CurveLineWidth <t><t>Kurvans linjebredd.
XY_Curve.FillCurve      <t><t>Om 1 ritas området mellan kurva och x-axeln med fyllnadsfärg.
XY_Curve.HorizontalLines <t><t>Antal horisontella linjer i diagrammet.
XY_Curve.VerticalLines  <t><t>Antal vertikala linjer i diagrammet.
XY_Curve.HorizontalPadding  <t><t>Kurvan utanför x-området kommera att ritas med 
                        <t><t>horisontella linjer från första och sista punkt.
XY_Curve.XMark1Attr     <t><t>Signal för x positionen för den första vertikala 
                        <t><t>markeringslinjen.
XY_Curve.XMark2Attr     <t><t>Signal för x positionen för den andra vertikala 
                        <t><t>markeringslinjen.
XY_Curve.YMark1Attr     <t><t>Signal för y positionen för den första horisontella 
                        <t><t>markeringslinjen.
XY_Curve.YMark2Attr     <t><t>Signal för y positionen för den andra horisontella 
                        <t><t>markeringslinjen.
XY_Curve.Mark1Color     <t><t>Färg för markeringslinje nr 1 (vertikal och horisontell).
XY_Curve.Mark2Color     <t><t>Färg för markeringslinje nr 2 (vertikal och horisontell).
</topic>
</headerlevel>
</chapter>

<chapter>
<topic>geref_subgraph
Subgrafer

En subgraf är en klass eller mall som byggs upp av ett antal basobjekt.

En instans av en subgraf skapas genom välja ut subgrafen i subgraf-paletten och kicka med 
MB2 i arbetsarean. Instanserna hanteras i editorn som andra objekt och man kan sätta 
fyllnadsfärg, kantfärg och linjebredd på dem.

<h1>Färg
På ett subgraf-objekt kan man sätta fyllnads- och kant-färg på samma sätt som på bas-objekten.

Men det innebär att man ger dessa egenskaper till samtliga delobjekt i subgrafen. Sätter man 
fyllnadsfärg på en subgraf som har ritats med skuggor och dagrar för att ge 3d effekt, 
försvinner denna effekt och objektet blir helt platt. För att kunna modifiera färgen på den 
här typen av subgrafer kan man använda funktionerna för ljushet, färgintensitet och färgton 
i verktygs-panelen.

<b>Ljushet
Funktionen för ljushet finns i verktygs-panelen och markeras med en sol. Här finns öka och 
minska-knappar som gör fyllnadsfärgen i objektet ljusare resp mörkare. Ljusheten kan 
modifieras i sju steg.

<b>Intensitet
Funktionen för färgintensitet finns i verktygs-panelen och markeras av tre färgpunkter. 
Intensiteten kan modifieras i tre steg: stark intensitet, medel intensitet och grå.

<b>Skift
Skiftning av färg innebär att varje färg i subgrafs-objektet roteras på färgcirkeln. Ett 
objekt som innehåller blå och gröna färger kommer t ex efter fyra stegs skiftning att 
innehålla orange och rött. Färgerna behåller sin ursprungliga ljushet och intensitet, och 
även sin inbördes färgkontrast.

Funktionen finns i verktygspanelen och markeras av tre färgpunkter omgärdade av en cirkulär 
pil. Färgerna på första raden i färgpaletten påverkas inte av skift-funktionen.

<b>Ton
Att tona ett objekt innebär att alla färger i subgrafs-objekt får samma färgton. De behåller 
sin ljushet och intensitet. Det finns nio olika färgtoner: grå, gul, guld, orange, röd, 
magenta, blå, blågrön och grön.

Funktionen för ton finns längst ner i färgpaletten. Här finns även en tryckknapp för att
återställa ett objekt till ursprungsfärgerna.

<h1>Animering och skiftning
<b>Subgrafer med flera sidor
Animering och Shift är typer av dynamik där man inte bara ändra färgen på subgrafen, utan 
även formen. Detta kan man åstadkomma genom att skapa en subgrafen med flera sidor.

För att skapa fler sidor till en subgraf aktiverar man File/Page/Create next page. Denna 
funktion skapar en ny subgraf med med suffixet '__px', där x är sidnumret, och länkar denna 
till föregående sida genom att lägga in namnet i attributet NextSubgraph i graf-attributen. 
För den sista sidan är NextSubgraph tom. När man har skapat och sparat en sida kan man snabbt
skifta till nästa eller föregående sida med funktionerna File/Page/NextPage resp 
File/Page/PreviousPage.

Man bör spara de olika sidorna med samma zoom-faktor, för att undvika att riskera att få en 
pixels förskjutning mellan olika sidor i runtime.

<h1>Skift
Skiftning mellan olika sidor i runtime kan ske med dynamik-typerna DigShift, DigFourShigt
och AnalogShift. DigShift växlar mellan första och andra sidan beroende på ett digitalt värde. 
DigFourShift växlar mellan fyra sidor, beroende på värdet av tre digitala signaler. AnalogShift 
kopplas till en analog signal där värdet på den motsvara index för den sidan som ska visas 
(första sidan har index 0).

<h1>Animering
Vid animering spelas sidorna upp efter varandra och ger intryck av rörelse hos subgrafen.

Tiden mellan varje sidbyte måste oftast vara betydligt kortare än den normala uppdateringen 
av dynamiska objekt i bilden. För en graf kan men ange animationstiden i File/Graph 
attributes i menyn. Observera att tiden anges för grafen som helhet och inte kan anges för 
varje subgraf individuellt. Ett lämpligt värde på animations-tiden är 0.2 sekunder.

Om en animation ska vila på samma sida under flera animations-cykler, kan man lägga in 
antaler cykler i AnimationCount i Graph attributes för den aktuella sidan.

Animation hanterar av dynamiktypen Animation. Den kopplas till en digital signal, som 
kontrollerar start och stopp av animationen. Det har också attributet Sequence som talar om
i vilken ordning, och villkoret för att animationen ska köras. Sequence kan ha värdet Cyclic,
Dig eller ForwBack.

Om Sequence är Cyclic, visas den första sidan när värdet på signalen är 0. När värdet på
signalen är 1 är animationen aktiv. Det startar på andra sidan och försätter till sista sidan,
varefter den hoppar till andra sidan igen och försätter till sista sidan osv. Detta pågår tills
signalvärdet blir 0 igen.

Sequence ForwBack är liknande, men här går animationen kontinuerligt fram och tillbaka mellan
första och sista sidan, så länge signalvärdet är 1.

Om Sequence är Dig genomlöps animationen endast vid omslag av det digitala värdet. Vid omslag 
till 1 animeras från första till sista sidan, och  vid omslag till 0 animeras tillbaka till 
första sidan.
</topic>

<topic>geref_databaseconnection
Koppling till databas
Subgrafer kopplas till attribut i databasen vilket gör det möjligt att ändra färg och 
på objekt när attributvärden ändras. Till exempel har dynamiken DigColor egenskapen 
Attribute där det attribut i databasen som ska påverka färgen specificeras.

Specifikationen av ett attribut består av attributets namn och typ, till exempel

<c>H1-H2-Start.ActualValue##Boolean

Vanligtvis läggs attributet in genom att välja ut attributet i navigatorn för databasen, och
klicka på attribut-fältet i objektseditorn med Ctrl+dubbelklick. Om det endast finns
ett attribut i subgrafen kan man klicka direkt på subgrafen med Ctrl+dubbelklick.

<b>Invertera en signal
En signal inverteras genom att ett utropstecken placeras framför attributnamnet.
Endast attribut av typen Boolean kan inverteras. Invertering kan användas i dynamik
men inte i aktioner.

<c>!H1-H2-Start.ActualValue##Boolean

Utropstecknet i exemplet ovan anger att signalvärdet kommer att inverteras innan det används 
i dynamiken.

<b>Objekt- och hierarkigrafer
När man ritar objektgrafer anges instans-objektet med strängen $object. 
Om till exempel attributet

<c>$object.ActualValue##Float32

förekommer i en objektsgraf, och objektgrafen öppnas för objektet H1-H2-Temperature, kommer
$object att ersättas av instansobjektet och kopplingen kommer att göras till

<c>H1-H2-Temperature.ActualValue##Float32

$object används även i hierarkigrafer på motsvarande sätt.

<c>$object-Temperature.ActualValue##Float32

med hierarki-objektet H1-H2 kommer att ge

<c>H1-H2-Temperatyre.ActualValue##Float32

<b>Förälderobjekt
Förälderobjektet till $object kan refereras med '.<' eller '-<'. Dessa operatorer kommer
att ta bort sista attributet eller sista objektet till närmast föregående '.' eller '-'.
H1-H2-<.Description kommer att bli H1.Description. Om man har en hierarkigraf för H1-H2 kan
beskrivningen för förälderobjektet H1 visas med

<c>$object-<.Description##String80

För attributobjekt, där attributnamn tas bort istället, används '.<'.
H1-Plates.Data.<.Temperature kommer att bli H1-Plates.Temperature. I objektgrafen för Data kan
Temperatur-attributet i förälderobjektet Plates visas med

<c>$object.<.Temperature##Float32

<b>Attributreferenser
Om ett objekt innehåller attribut av typen AttrRef eller Objid kan värden in de objekt
som dessa attribute pekar på visas med &() syntax.

<c>&(H1-H2-Motor.Object).ActualValue##Float32

betyder att H1-H2-Motor.Object innehåller en pekare till ett objekt, och det är till 
ActualValue attributet i detta objekt kopplingen kommer att göras.

Kopplingen görs när grafen öppnas, och om pekaren in H1-H2-Motor.Object ändras, kommer
kopplingen inte automatiskt att ändras. Dynamiken DigSwap kan dock användas för att
koppla om alla kopplingar i en graf.

<b>Variabelt vektorindex
Vektorindex kan specificeras med attribut av typen Int32 eller UInt32. I

<c>H1-H2-Array[&(H1-H2-CurrentIndex.ActualValue)].Value##Float32

är H1-H2-CurrnetIndex.ActualValue ett integer-attribut, och värdet av detta attribut kommer
att hämtas och läggas in som vektorindex. 

Indexet evalueras när grafen öppnas och om indexvärdet ändras kommer inte kopplingen 
automatiskt att ändras. Dynamiken DigSwap kan dock användas för att koppla om alla 
kopplingar i en graf.

<b>Nodobjekt
$node kommer att bytas ut mot nodobjektet. Detta kan till exempel användas för att
referera XttGraph-objekt där samma graf änvänds i olika noder. Till exempel

<c>$node-Graphs-Overview

kommer att fungera för alla noder som har ett XttGraph objekt med namnet Overview under
en Graph hierarki under nodobjektet.

<b>Lokal databas
Lokala variabler i en graf kan användas för att kommunicera mellan objekt i en graf. 
De specificeras med prefixet $local. följt av variabelnamn och variabeltyp, t ex

<c>$local.HoldTrend##Boolean

En lokal variabel kan till exempel användas för att frysa en trendkurva genom att denna
anges i Trend.HoldAttr. Med en toggle-knapp som har samma lokala variabel i 
ToggleDig.Attribute, kan frysningen slås på och av genom att trycka på knappen.

Lokala variabler är dock inte implementerat för alla typer av dynamik och aktioner.

<b>Vektorer
En del dynamiktyper som Table och XYCurve kopplas till hela vektorer i databasen. Syntaxen 
för att koppla en hel vektor är 'attributename'##'type'#'length', till exempel

<c>H1-H2-A1.Value##Float32#100

där 100 är antalet element i vektorn.

<b>Vektorelement
För att koppla ett element i en vektor, är syntaxen 'attributename'##'type'#'length'['index'],
t ex

<c>H1-H2-A1.Value##Float32#100[2]

<b>Attribut typ
Typen för att attribut specificeras efter attributnamnet. Följande typer supportas

##Boolean
##Float32
##Float64
##Char
##Int8
##Int16
##Int32
##Int64
##UInt8
##UInt16
##UInt32
##UInt64
##Objid
##Time
##DeltaTime
##Status
##NetStatus
##Enum
##Mask
##DataRef
##String
##Bit

<b>String
String ska föjas av storleken på strängen, t ex ##String80

<b>Bit
Bit-typen gör det möjligt att koppla en individuell bit i en mask eller ett heltalsattribut.

Syntaxen är ##Bit#'size'['bitnumber'] eller ##Bit['bitnumber'].

size är antalet bitar i masken, och bitnumber är bitnumret som räknas från 0 för första 
biten.

Exempel

<c>H1-H2-Mode.ActualValue##Bit[2]

</topic>

<topic>geref_dynamic
Dynamik

Man kan definiera ett antal olika typer av dynamik för subgrafer. Dynamiken beskriver hur 
signaler i rtdb ska påverka subgrafen, t ex ändra färg eller skriva ut ett analogt värde. 

Det finns ett antal fördefinierade typer av dynamik, t ex skifta mellan två färger eller 
mellan två texter. När man ritar subgrafen anger man typen av dynamik som ska gälla för 
subgrafen, men detta är endast ett defaultvärde som varje instans får, om inte konstruktören 
väljer en annan typ av dynamik.

<b>Dynamik   <t>Signal typ <t>Beskrivning
Inherit   <t>-          <t>Dynamiken för instansen ärvs från subgrafen.
Tone      <t>-          <t>Anger att dynamik som ändrar färg på komponenten 
          <t>           <t>ska ändra färgton i stället för fyllnadsfärgen.
DigLowColor <t>Boolean  <t>Sätter angiven fyllnadsfärg när signalen är låg. <link>GeDynDigLowColor
DigColor  <t>Boolean    <t>Sätter angiven fyllnadsfärg när signalen är hög. <link>GeDynDigColor
DigError  <t>Boolean    <t>Sätter röd fyllnadsfärg vid hög signal. <link>GeDynDigError
DigWarning <t>Boolean   <t>Sätter gul fyllnadsfärg vid hög signal. <link>GeDynDigWarning
DigFlash  <t>Boolean    <t>Blinkar med angiven färg vid hög signal. <link>GeDynDigFlash
AnalogColor <t>Float32 Int32 <t>Sätter angiven fyllnadsfärg när signalen <link>GeDynAnalogColor
          <t>           <t>över- eller underskrider ett angivet värde.
StatusColor <t>Status   <t>Sätter fyllnadsfärg efter ett status värde. <link>GeDynStatusColor
FillLevel <t>Float32    <t>Ändrar fyllnadsfärgen på en del av komponenten. Nivån <link>GeDynFillLevel
          <t>           <t>som avgränsar den färgade delen bestäms av värdet på signalen.
Invisible <t>Boolean String <t>Gör komponenten osynlig vid hög signal, eller vid tom sträng. <link>GeDynInvisible
DigBorder <t>Boolean    <t>Sätter angiven kantfärgen vid låg signal. <link>GeDynDigBorder
TimeoutColor <t>Boolean <t>Sätter angiven färg vid timeout på prenumerationen. <link>GeDynTimeoutColor
DigTextColor <t>Boolean <t>Sätter angiven textfärg vid hög signal. <link>GeDynDigTextColor
DigText   <t>Boolean    <t>Sätter angiven text vid låg signal. <link>GeDynDigText
AnalogText <t>Float32 Int32 <t>Sätter upp till 32 olika text beroende på värdet av <link>GeDynAnalogText
          <t>           <t>en analog signal.
Value     <t>Valfri     <t>Skriver ut värdet av ett attribut. <link>GeDynValue
Rotate    <t>Float32 Int32 <t>Roterar komponenten. <link>GeDynRotate
Move      <t>Float32 Int32 <t>Flyttar och skalar komponenten i x- och y-led. <link>GeDynMove
DigShift  <t>Boolean    <t>Skiftar mellan två sidor i subgrafen (första och sista sidan). <link>GeDynDigShift
DigFourShift <t>Boolean <t>Skiftar mellan fyra sidor i subgrafen. <link>GeDynDigFourShift
AnalogShift <t>Float32 Int32 <t>Skiftar mellan olika sidor i subgrafen. Värdet <link>GeDynAnalogShift
          <t>           <t>på signalen bestämmer sidnr.
Animation <t>Boolean    <t>Olika typer av animering. <link>GeDynAnimation
Video     <t>-          <t>Kontinuerlig uppdatering av en blidfil. <link>GeDynVideo
SliderBackground <t>-   <t>Markerar att subgrafen är bakgrund till en slider-komponent. <link>GeDynSliderBackground
DigCommand <t>Boolean   <t>Exekverar ett kommando när signalen blir hög. <link>GeDynDigCommand
DigScript <t>Boolean   <t>Exekverar ett script när signalen blir hög. <link>GeDynDigScript
ScrollingText <t>Boolean   <t>Visar en rullande text. <link>GeDynScrollingText

<h2>Inherit
För en instans av en subgraph betyder det att dynamiken ärvs från subgrafs-klassen, dvs den 
dynamik som angetts som default när subgrafen editerades. Om även default-dynamiken är 
Inherit innebär det att subgrafen saknar dynamik.

Default-dynamiken för en instans ser man enklast genom att öppna objektseditorn för instansen
och där öppna subgraph-mappen.

<h2>Xtt-kommanon
Det finns en rad tryckknappar som exekverar xtt-kommandon. Det vanligaste är att man öppnar 
en annan graf, men man kan även öppna trace med ett visst objekt utvalt. Här följer några 
exempel på användbara xtt-kommandon.

<c>open graph GraphName [/width=][/height=][/scrollbar][/navigator]

<c>open trace WindowName [/center=]

<h2>Access
All dynamik som gör det möjligt att påverka en signal i rtdb innehåller attributet Access. 
Access talar om de privilegier som krävs för att en användare ska tillåtas att ändra ett 
värde. Det finns 15 olika privilegier som är intressanta i operatörsbilder, 10 för olika 
slags operatörer, och 4 för olika yrkesgrupper. Dessutom finns RtRead, dvs läsrättighet i 
runtime, som även en användare som inte lyckats logga in får. En användare ges ett eller flera
privilegier och om något av hans privilegier finns med i Access har han rätt att påverka 
objektet.

Default-access är alla privileger utom RtRead. Vissas operationer som att öppna andra bilder 
bör man även tillåta RtRead att utföra.

<b>Privilegier i runtime <t>Beskrivning
RtRead    <t>Behörig att läsa.
System    <t>Systemansvarig.
Maintenance <t>Underhåll.
Process   <t>Process tekniker.
Instrument <t>Instrumentare.
Operator1  <t>Olika operatörer eller operatörsplatser.
Operator2  <t>"
Operator3  <t>"
Operator4  <t>"
Operator5  <t>"
Operator6  <t>"
Operator7  <t>"
Operator8  <t>"
Operator9  <t>"
Operator10 <t>"
</topic>

<headerlevel>
<topic>GeDynDigLowColor <style>function
DigLowColor
Sätt angiven fyllnadsfärg när signalen är låg.

Objektet kopplas till en digital signal i rtdb. Om värdet är 1 ritas objektet med den normala
fyllnadsfärgen, om värdet är 0 ritas det med DigLowColor.Color som anges i objektseditorn.

Jämför DigColor nedan som sätter angiven färg vid hög signal istället för låg. Om man ska 
använda DigLowColor eller DigColor avgörs närmast av hur man vill att komponenten ska ritas i
editorn: så som den kommer att se ut vid hög eller vid låg signal, dvs om man vill rita 
bilden så det kommer att se ut när anläggningen är i drift, eller avstängd.

<b>Attribut <t><t>Beskrivning
DigLowColor.Attribute <t><t>Signal i rtdb av typen Boolean som ska 
                      <t><t>påverka komponenten.
DigLowColor.Color  <t><t>Fyllnadsfärg på komponenten om signalen är 0.
</topic>

<topic>GeDynDigColor <style>function
DigColor
Sätt angiven fyllnadsfärg när signalen är hög.

Objektet kopplas till en digital signal i rtdb. Om värdet är 1 ritas objektet med 
DigColor.Color som anges i objektseditorn, om värdet är 0 ritas det med den normala 
fyllnadsfärgen.

DigColor kan finnas i flera instanser, vilket gör det möjligt att växla mellan flera färger 
(upp till 32 stycken). Instanser med högre nummer här högre prioritet, dvs om signalen för 
en högre instans är hög, bestämmer denna färgen oavsett värdet på signaler kopplade till 
lägre instanser.

<b>Attribut <t><t>Beskrivning
DigColor.Attribute <t><t>Signal i rtdb av typen Boolean som ska påverka 
                   <t><t>komponenten.
DigColor.Color <t><t>Fyllnadsfärg på komponenten om signalen är 1.
DigColor.Instance <t><t>Anger vilka instanser som ska skapas.
DigColor2.Attribute <t><t>Signal för instans 2.
DigColor2.Color <t><t>Fyllnadsfärg för instans 2.
DigColor3.Attribute <t><t>Signal för instans 3.
DigColor3.Color <t><t>Fyllnadsfärg för instans 3.
</topic>

<topic>GeDynAnalogColor <style>function
AnalogColor

AnalogColor kopplas till en analog signal, och sätter angiven fyllnadsfärg när signalen 
under- eller överskrider ett gränsvärde. Gränsvärdet anges i AnalogColor.Limit och 
AnalogColor.LimitType avgör om det är ett undre eller övre gränsvärde. Om LimitType är 
GreaterThan sätts fyllnadsfärgen när signalens värde är större än gränsvärdet, och när 
LimitType är LessThan sätts fyllnadsfärgen när signalvärdet är mindre än gränsvärdet. Andra 
gränsvärdestyper är GreaterEqual (större eller lika med), LessEqual ( mindre eller lika med) 
och Equal (lika med).

AnalogColor kan finnas i flera instanser, vilket gör det möjligt att sätta flera gränsvärden 
och skifta mellan flera olika färger (upp till 32 stycken).

OBS ! Om det förekommer flera instanser med samma LimitType, måste en högre instans ha ett 
större gränsvärde vid LimitType GreaterThan och GreaterEqual. Vid LimitType LessThan och 
LessEqual måste en högre instans ha ett lägre gränsvärde.

<b>Attribut <t><t>Beskrivning
AnalogColor.Attribute <t><t>Signal i rtdb av typen Float32 eller Int32. Värdet 
                      <t><t>jämförs med gränsvärdet och om detta 
                      <t><t>över/underskrids ändras färgen på komponenten.
AnalogColor.Color     <t><t>Fyllnadsfärg på komponenten om signalens värde 
                      <t><t>har passeras gränsvärdet.
AnalogColor.Border    <t><t>Sätt kantfärg istället för fyllnadsfärg.
AnalogColor.CommonAttribute <t><t>Samma attribut används av alla instanser.
                      <t><t>Annars har varje instans sitt eget attribut.
AnalogColor.Limit     <t><t>Gränsvärde.
AnalogColor.LimitType <t><t>Typ av gränsvärde. Kan vara GreaterThan, 
                      <t><t>GreaterEqual, LessThan, LessEqual eller Equal.
AnalogColor.Instances <t><t>Anger vilka instanser som ska skapas.
AnalogColor2.Color    <t><t>Fyllnadsfärg för instans 2.
AnalogColor2.Limit    <t><t>Gränsvärde för instans 2.
AnalogColor2.LimitType <t><t>Typ av gränsvärde för instans 2.
AnalogColor3.Color    <t><t>Fyllnadsfärg för instans 3.
</topic>

<topic>GeDynStatusColor <style>function
StatusColor

StatusColor kopplas till ett attribut av typen Status. En status definieras av en text,
och tillhör en av följande fem kategorier: Success, Info, Warning, Error, Fatal. 
Statusvärdet kan även vara 0, NoStatus. StatusColor sätter fyllnadsfärgen utgående från 
vilken kategori statusvärdet tillhör.

Success, Info   <t>Ursprunglig färg
Warning         <t>Gul
Error           <t>Röd
Fatal           <t>Blinkande röd.

<b>Attribut <t><t>Beskrivning
StatusColor.Attribute <t><t>Signal i rtdb av typen Status. Färgen på komponenten
                      <t><t>sätt utgående från den kategori statusvärdet tillhör. 
StatusColor.NoStatusColor <t><t>Färg om statusvärdet är 0.
</topic>

<topic>GeDynDigWarning <style>function
DigWarning

Sätter fyllnadsfärgen till gul vid hög signal.

Objektet kopplas till en digital signal i rtdb. Om värdet är 1 ritas objektet med gul 
fyllnadsfärg, om värdet är 0 ritas det med den normala fyllnadsfärgen.

<b>Attribut <t><t>Beskrivning
DigWarning.Attribute <t><t>Signal i rtdb av typen Boolean som ska 
                <t><t>påverka objektet.
</topic>

<topic>GeDynDigError <style>function
DigError

Sätter fyllnadsfärgen till röd vid hög signal.

Objektet kopplas till en digital signal i rtdb. Om värdet är 1 ritas objektet med röd 
fyllnadsfärg, om värdet är 0 ritas det med den normala fyllnadsfärgen.

<b>Attribut <t><t>Beskrivning
DigError.Attribute <t><t>Signal i rtdb av typen Boolean som ska 
                   <t><t>påverka objektet.
</topic>

<topic>GeDynDigFlash <style>function
DigFlash

Blinkar med angiven fyllnadsfärg vid hög signal.

DigFlash ändrar färg på objektet varje cykel. Färgen skiftas mellan angiven färg och 
ursprunglig färg, eller den färg som objektet får av övrig färg-dynamik. 

Blink-frekvensen bestäms av cykeltiden för den cykel som objektet går på.

<b>Attribut <t><t>Beskrivning
DigFlash.Attribute <t><t>Signal i rtdb av typen Boolean som ska 
                   <t><t>påverka objektet.
DigFlash.Color     <t><t>Fyllnadsfärg.
</topic>

<topic>GeDynFillLevel <style>function
FillLevel

Rita objektet med en fyllnadsfärg, upp till en viss nivå.

FillLevel ritar ursprungfärgen (eller den färg som bestäms av övrig dynamik) upp till en viss
gränslinje. På andra sidan gränslinjen ritas objektet med angiven bakgrundsfärg. Gränslinjens
läge bestäms av värdet på den analoga signalen. Om värdet är mindre än MinValue ritas hela 
objektet med bakgrundsfärg. Om värdet är större än MaxValue ritas hela objektet med 
ursprungsfärgen.

Direction avgör vilken rikting gränslinjen ska flytta sig. Vid Direction Up flyttar sig 
gränslinjen uppåt med ökande värde, vid Down nedåt, vid Left åt vänster och vid right åt 
höger.

<b>Attribut <t><t>Beskrivning
FillLevel.Attribute <t><t>Signal i rtdb av type Float32.
FillLevel.BackgroundColor <t><t>Bakgrundsfärg.
FillLevel.Direction <t><t>Riktning Up, Down, Left eller Right.
FillLevel.MinValue <t><t>Minvärde. När värdet på Attribute är lika med 
                   <t><t>MinValue, ritas hela objektet med bakgrundsfärgen.
FillLevel.MaxValue <t><t>Maxvärde. När värdet på Attribute är lika med 
                   <t><t>MaxValue, ritas hela objektet med ursprungsfärgen.
</topic>

<topic>GeDynInvisible <style>function
Invisible

Gör objektet osynligt (eller dimmar) vid hög signal.
Attributet kopplas normalt till en digital signal, men kan även kopplas till en sträng. I 
detta fall testas på om strängen är tom eller inte. Objektet blir osynligt vid tom sträng. 
Invisible kan ocskå användas med xtt-kommandot 'check' för att t ex testa om en metod är 
definierad för ett objekt. I Attribute skriver man då 
$cmd('command') , t ex 
<c>   $cmd(check method/method=Note/object=VK-Valve)

<b>Attribut <t><t>Beskrivning
Invisible.Attribute <t><t>Signal i rtdb av typen Boolean som ska 
                 <t><t>påverka objektet. 
Invisible.Dimmed <t><t>1 dimmar objektet, 0 gör objektet osynligt.
</topic>

<topic>GeDynDigBorder <style>function
DigBorder

Sätt angiven kantfärg när signalen är låg.

Objektet kopplas till en digital signal i rtdb. Om värdet är 1 ritas objektet med den 
normala kantfärgen, om värdet är 0 ritas det med DigBorder.Color som anges i objektseditorn.

<b>Attribut <t><t>Beskrivning
DigBorder.Attribute <t><t>Signal i rtdb av typen Boolean som ska 
                    <t><t>påverka komponenten.
DigBorder.LowColor  <t><t>Kantfärg på komponenten om signalen är 0.
</topic>

<topic>GeDynTimeoutColor <style>function
TimeoutColor

Sätter angiven färg vid timeout på prenumerationen.

Kontrollerar tiden för prenumerationen, och sätter fyllnadsfärgen till den angivna
färgen om timeout tiden har överskridits.

TimeoutColor måste kombineras med någon annan dynamik som anger attributet för
prenumerationen. Om det finns flera typer av dynamik, övervakas prenumerationen för
dynamiken med högst prioritet.

<b>Attribut <t><t>Beskrivning
TimeoutColor.Time <t><t>Timeout tid i sekunder.
TimeoutColor.Color  <t><t>Fyllnadsfärg för komponenten vid timeout.
</topic>

<topic>GeDynDigTextColor <style>function
DigTextColor

Sätter angiven färg när signalen är hög.

Objektet kopplas till en digital signal i rtdb. Om värdet är 0 ritas objektet med den normala
textfärgen, om värdet är 1 ritas det med DigTextColor.Color som anges i objektseditorn.

<b>Attribut <t><t>Beskrivning
DigTextColor.Attribute <t><t>Signal i databasen av typen Boolean som ändrar textfärg 
                    <t><t>på komponenten.
DigTextColor.Color  <t><t>Färg som sätts på texter när signalen är 1.
</topic>

<topic>GeDynDigText <style>function
DigText

Skifta mellan två texter.

Objektet kopplas till en digital signal i rtdb. Om värdet är 1 skrivs original-texten ut, om värdet är 0 skrivs texten i LowText ut. DigText opererar på textfält 1.

<b>Attribut <t><t>Beskrivning
DigText.Attribute <t><t>Signal i rtdb av typen Boolean som skiftar text.
DigText.LowText   <t><t>Text som skrivs ut när signalen är låg.
</topic>

<topic>GeDynAnalogText <style>function
AnalogText

Skifta mellan flera texter beroende på värdet på en analog signal.

Objektet kopplas till att databas attribut av typen float eller int. Till varje text anger 
man ett Enum värde. Texten vars Enum värde är lika med databas attributets värde kommer att 
visas i komponenten.

<b>Attribut <t><t>Beskrivning
AnalogText.Attribute <t><t>Databas attribut av typen Float32, Float64, Int32, 
                     <t><t>UInt32, Int16, UInt16, Int8 eller UInt8. Den text vars 
                     <t><t>Enum motsvarar värdet på databas attributet visas.
AnaogText.TextMask   <t><t>Mask som bestämmer antalet texter.
AnalogText.Text1     <t><t>Text nr 1.
AnalogText.Enum1     <t><t>Uppräkningsvärdet för första texten.
AnalogText.Text2     <t><t>Text nr 2.
AnalogText.Enum2     <t><t>Uppräkningsvärdet för andra texten.
</topic>

<topic>GeDynValue <style>function
Value

Skriver ut värdet på en signal. Värdet skrivs ut i ett textfält.

Objektet kopplas till ett attribut i rtdb av valfri typ. I Format anges format på utskriften 
med c-syntax.

Det är möjlig att skapa fler instanser. Detta kräver att subgrafen har flera fält att skriva 
ut värden på. Värdet för en instans skrivs ut i fältet med motsvarande nummer (annotation 
number).

<b>Attribut <t><t>Beskrivning
Value.Attribute <t><t>Signal i rtdb av av valfri typ, som ska visas i 
                <t><t>textfältet.
Value.Format    <t><t>Format i c-printf syntax.
Value.Instances <t><t>Anger vilka instanser som ska skapas.

<h2>Format
För följande attribut typer finns ytterligare format definierade.

<b>pwr_tTime
%t<t>Datum och tid. Ex 24-MAY-2007 11:33:43.91
%1t<t>Enbart tid, inga hundradelar. Ex 11:33:43
%2t<t>Enbart tid med hundradelar. Ex 11:33:43:91
%3t<t>Komprimerad datum och tid. Ex 07-05-24 11:33:43
%4t<t>Enbart datum. Ex 24-MAY-2007
%5t<t>Komprimerat datum. Ex 07-05-24

<b>pwr_tDeltaTime
%t<t>Tid med hundradelar. Ex 1:23:45.43
%1t<t>Tid utan hundradelar. Ex 1:23:45

<b>pwr_tEnum
%d<t>Uppräkningsvärdet visas som en UInt32.
%s<t>Uppräkningsvärdet konverteras till motsvarande sträng.

<b>pwr_tObjid
%o<t>Objektsnamn (sista segmentet).
%1o<t>Hierarki och objektsnamn.
%2o<t>Volym, hierarki och objektsnamn.

<b>pwr_tAttrRef
%o<t>Objektsnamn (sista segmentet) och attributnamn.
%1o<t>Hierarki, objektsnamn och attributnamn.
%2o<t>Volym, hieraki, objektsnamn och attributnamn .

<b>pwr_tStatus och pwr_tNetStatus
%m<t>Statusvärdet konverteras till motsvarande sträng. 
  <t>Ex "GDH-E-NOSUCHOBJ, No such object".
%1m<t>Enbart textdelen av strängen visas. Ex "No such object".

<b>pwr_tMask
%d<t>Masken visas som en UInt32.
%b<t>Masken visas som ett 32-bitars binärt värde.
%16b<t>Masken visas com ett 16-bitars binärt värde. Ex 001111100011001.

</topic>

<topic>GeDynRotate <style>function
Rotate

Roterar ett objekt.

Rotationen sker med utgångspunkt från den position objektet ges i editorn. Värdet i Attribute
multipliceras med Factor och ger rotationen i grader.

x0 och y0 anger rotations-punkten. Om x0 och y0 är noll, används origo i subgrafens 
koordinater som rotationspunkt. Subgrafer med Rotate som standad-dynamik är oftast ritade så 
att rotations-punkten inte behöver anges.

<b>Attribut <t><t>Beskrivning
Rotate.Attribute <t><t>Signal i rtdb av typen Float32. Ger rotation av 
                 <t><t>objektet.
Rotate.x0        <t><t>x-koordinat för rotationspunkten.
Rotate.y0        <t><t>y-koordinat för rotationspunkten.
Rotate.Factor    <t><t>Factor multiplicerat med signalens värde ger 
                 <t><t>rotationen i grader.
Rotate.Offset    <t><t>Offset för vinkeln.
Rotate.MinAngle  <t><t>Min-värde för vinkeln.
Rotate.MaxAngle  <t><t>Max-värde för vinkeln.
</topic>

<topic>GeDynMove <style>function
Move

Flyttar och skalar ett objekt. Kan kopplas till fyra analoga attribut som flyttar objektet i 
x- resp y-led, och skalar det i x- resp y-led.

Förflyttingen sker med utgångspunkt från den position objektet ges i editorn. Omräkningen 
från värdet i XAttribute och YAttribute till Ge -koordinater kan påverkas av XOffset, YOffset
och Factor. XOffset och YOffset är det värden som motsvarar utgångspunkten i x- resp y-led. 
Factor anger omräknings-faktor från XAttribute och YAttribute-värden till Ge -koordinater. 
Omräkningen sker enligt formeln:

<c>dx = (XAttribute - XOffset) * Factor

<c>dy = (YAttribute - YOffset) * Factor

Skalningen i x- och y-led sker med ledning av värdet av ScaleXAttribute resp ScaleYAttribute.
Dessa mulipliceras med ScaleFactor och ger skalfaktorn, där 1.0 ger oförändrad skalning, 
värden större än 1 ger förstoring och värden mindre än 1 ger förminskning.

<b>Attribut  <t><t>Beskrivning
Move.XAttribute <t><t>Signal i rtdb av typen Float32. Ger förflytting i 
                <t><t>x-led.
Move.YAttribute <t><t>Signal i rtdb av typen Float32. Ger förflytting i 
                <t><t>y-led.
Move.Factor     <t><t>Omräkningsfaktor från storhet för XAttribute och 
                <t><t>YAttribute till storhet för Ge -koordinater.
Move.XOffset    <t><t>Värde för XAttribute som motsvarar utgångs-
                <t><t>positionen för objektet.
Move.YOffset    <t><t>Värde för YAttribute som motsvarar utgångs-
                <t><t>positionen för objektet.
Move.ScaleXAttribute <t><t>Signal i rtdb av typen Float32. Ger skalning i 
                <t><t>x-led.
Move.ScaleYAttribute <t><t>Signal i rtdb av typen Float32. Ger skalning i 
                <t><t>y-led.
Move.ScaleFactor <t><t>Omräkningsfaktor från storhet för ScaleXAttribute
                <t><t>och ScaleYAttribute till skalfaktor.
</topic>

<topic>GeDynAnalogShift <style>function
AnalogShift

Skifta flera sidor i subgrafen. Subgrafen måste innehålla minst två sidor.

Objektet kopplas till en analog signal i rtdb. Värdet på det analoga attributet bestämmer 
index för den sida som ska ritas. Vid 0 ritas den första sidan, vid 1 den andra, osv.

<b>Attribut <t><t>Beskrivning
AnalogShift.Attribute <t><t>Signal i rtdb av typen Float32 eller Int32 som 
                      <t><t>skiftar sida på subgrafen. Värdet bestämmer vilken 
                      <t><t>sida som ska ritas. Vid 0 ritas första sidan.
</topic>

<topic>GeDynDigShift <style>function
DigShift
Skifta två sidor i subgrafen. Subgrafen måste innehålla minst två sidor.

Objektet kopplas till en digital signal i rtdb. Om värdet är 0 ritas objektet med första 
sidan, om värdet är 1 ritas det med sista sidan.

<b>Attribut <t><t>Beskrivning
DigShift.Attribute <t><t>Signal i rtdb av typen Boolean som skiftar sida. 
                   <t><t>Vid 0 visas första sidan, vid 1 visas sista sidan.
</topic>

<topic>GeDynDigFourShift <style>function
DigFourShift

Shifta mellen fyra sidor i subgrafen. Subgrafen måste innehålla minst fyra sidor.

Objektet kopplas till tre digitala signaler i databasen. Om värdet är 0 på alla signaler
ritas den första sidan. Om värdet är 1 på Attribute1, ritas den andra sidan, om Attribute2
är 1 ritas den tredje sidan, och om Attribute3 är 1 ritas den fjärde sidan. Om flera
signaler är 1 samtidigt har högre sidnummer högre prioritet.

<b>Attribut  <t><t>Beskrivning
DigFourShift.Attribute1 <t><t>Signal i databasen som skiftar sida. Aktiverar ritning av
                   <t><t>sida nummer 2.
DigFourShift.Attribute2 <t><t>Signal i databasen som skiftar sida. Aktiverar ritning av
                   <t><t>den tredje sidan.
DigFourShift.Attribute3 <t><t>Signal i databasen som skiftar sida. Aktiverar ritning av
                   <t><t>den fjärde sidan.
</topic>

<topic>GeDynScrollingText <style>function
ScrollingText

Visa en rullande text.

Objektet kopplas till ett sträng-attribut i databasen, och texten i attributet visas.

<b>Attribut <t><t>Beskrivning
ScrollingText.Attribute <t><t>Attribut i databasen av typ String.
ScrollingText.Direction <t><t>Rullningsriktning, vänster, höger, upp eller ner.
ScrollingText.Speed.    <t><t>Hastighet på rullningen.
</topic>

<topic>GeDynAnimation <style>function
Animation

Dynamik för animerade subgrafer, dvs subgrafer med  flera sidor. Objeket kopplas till en 
digital signal som aktiverar animationen.

Animations-sekvensen bestäms av Sequence, som kan vara Cyclic, ForwBack eller Dig.

<h2>Cyclic
Skifta viloläge och cyklisk animering. Animationen sker från 2:a till sista sidan och börjar 
sedan om på 2:a sidan osv.

Om signalens värde är 0 ritas objektet med första sidan, om värdet är 1 startar cyklisk 
animering mellan 2:a sidan och sista sidan. Vid animeringen genomlöps sidorna från 2:a till 
sista sidan, därefter hoppar man till 2:a sidan och animerar upp till sista sidan igen, osv.

<h2>ForwBack
Skifta viloläge och cyklisk animering. Animationen sker fram och tillbaka mellan 2:a och 
sista sidan. Om signalens värde är 0 ritas objektet med första sidan, om värdet är 1 startar 
cyklisk animering fram och tillbaka mellan första och sista sidan.

<h2>Dig
Skiftar två vilolägen. Vid omslag sker animering mellan vilolägena.

Om signalens värde är 0 ritas objektet med första sidan, om värdet är 1 ritas sista sidan. 
Vid omslag från 0 till 1 sker animering från första till sista sidan, vid omslag från 1 till 
0 sker animering från sista till första sidan.

<b>Attribut <t><t>Beskrivning
Animation.Attribute <t><t>Signal i rtdb av typen Boolean som aktiverar 
                    <t><t>animationen.
Animation.Sequence  <t><t>Animering sekvens. Kan vara Cyclic, ForwBack 
                    <t><t>eller Dig.
</topic>

<topic>GeDynVideo <style>function
Video

Visar en gif-fil som kontinuerligt uppdateras av en Web-kamera.
Video har inga attribut.
</topic>

<topic>GeDynDigCommand <style>function
DigCommand
Exekvera ett kommando när signalen går från låg till hög, eller när signalen är hög.

Objektet kopplas till en digital signal i rtdb. Kommandot exekveras antingen när 
signalvärdet ändras från 0 till 1, eller cykliskt när signalvärdet är högt.

DigCommand kan finnas i flera instanser, vilket gör det möjlit att exekvera flera kommandon.

<b>Attribute <t><t>Description
DigCommand.Attribute <t><t>Signal i databasen av typ boolean som ska påverka komponenten.
DigCommand.Level  <t><t>Om Level är 0, exekveras kommandot när signalen ändras från 0 till 1.
                  <t><t>Om level är 1, exekveras kommandot cykliskt när signalen är hög.
DigCommand.Command <t><t>Xtt kommando som exekveras när signalen går från 0 till 1.
DigCommand.Instance <t><t>Anger vilka instanser som ska skapas.
DigCommand2.Attribute <t><t>Signal för instans nr 2.
DigCommand2.Level <t><t>Level for instans nr 2.
DigCommand2.Command <t><t>Kommando för instans nr 2.
</topic>

<topic>GeDynDigScript <style>function
DigScript
Exekvera ett script när signalen går från låg till hög, eller när signalen är hög.

Objektet kopplas till en digital signal i rtdb. Scriptet exekveras antingen när 
signalvärdet ändras från 0 till 1, eller cykliskt när signalvärdet är högt.

<b>Attribute <t><t>Description
DigScript.Attribute <t><t>Signal i databasen av typ boolean som ska påverka komponenten.
DigScript.Level  <t><t>Om Level är 0, exekveras scriptet när signalen ändras från 0 till 1.
                  <t><t>Om level är 1, exekveras scriptet cykliskt när signalen är hög.
DigScript.Script <t><t>Xtt script som exekveras när signalen går från 0 till 1.
</topic>
</headerlevel>
<pagebreak>

<topic> geref_action
Action

Action anger vad som ska hända när man aktiverar ett objekt t ex genom att kicka på det, 
Man kan sätta eller återställa signaler i rtdb, ta upp en annan graf, visa en hjälptext eller 
en tooltip text mm.

<b>Action <t>Signal typ <t>Beskrivning
Inherit   <t>-          <t>Action för instansen ärvs från subgrafen.
PopupMenu <t>Objekt     <t>En popupmeny kan öppnas från komponenten med <link>GeDynPopupMenu
          <t>           <t>MB3.
SetDig    <t>Boolean    <t>Sätter värdet på en signal till true vid Klick MB1. <link>GeDynSetDig
ResetDig  <t>Boolean    <t>Sätter värdet på en signal till false vid Klick MB1. <link>GeDynResetDig
ToggleDig <t>Boolean    <t>Ändrar värdet på en signal vid Klick MB1. <link>GeDynToggleDig
StoDig    <t>Boolean    <t>Sätter värdet på en signal så länge knappen är intryckt. <link>GeDynStoDig
SetValue    <t>Float, Int, String  <t>Sätter vardet på en signal till ett angivet värde. <link>GeDynSetValue
Command   <t>-          <t>Exekverar ett xtt-kommando vid Klick MB1. <link>GeDynCommand
CommandDoubleClick <t>- <t>Exekverar ett xtt-kommando vid Dubbelklick MB1. <link>GeDynCommandDoubleClick
Command   <t>-          <t>Exekverar ett xtt-script vid Klick MB1. <link>GeDynScript
Confirm   <t>-          <t>Verifiering innan aktionen utförs. <link>GeDynConfirm
IncrAnalog <t>Float32   <t>Öka eller minska ett analogt värde. <link>GeDynIncrAnalog
RadioButton <t>Boolean  <t>Radio-knapps uppförande hos komponenten. <link>GeDynRadioButton
Slider    <t>Float32 Int32 <t>Reserverad för slider subgrafer.
ValueInput <t>Valfri    <t>Inmatning. <link>GeDynValueInput
ToolTip   <t>-          <t>Visning av tooltip text. <link>GeDynToolTip
Help      <t>-          <t>Visar en hjälptext vid Klick MB1. <link>GeDynHelp
OpenGraph <t>-          <t>Öppnar en graf vid Klick MB1. <link>GeDynOpenGraph
OpenURL   <t>-          <t>Öppnar en URL i en lämplig web-läsare vid Klick <link>GeDynOpenURL
          <t>           <t>MB1.
PulldownMenu <t>- 	<t>Aktion för rullgardings menyer. <link>GeDynPulldownMenu
OptionMenu <t>-		<t>Aktion för option menyer. <link>GeDynOptionMenu
</topic>

<headerlevel>
<topic>GeDynPopupMenu <style>function
PopupMenu 

En popup-meny öppnas med MB3. Popup-menyn innehåller metoderna för det objekt som anges i 
RefObject (se avsnittet Metoder i Xtt manualen).

<b>Attribut <t><t>Beskrivning
PopupMenu.RefObject <t><t>Objekt i rtdb, vars metoder aktiveras från 
                    <t><t>popup-menyn.
</topic>

<topic>GeDynSetDig <style>function
SetDig

Sätter värdet på en digital signal till ett vid Klick MB1 på objektet.

SetDig kan finnas i flera instanser, och sätter då värdet på flera signaler.

<b>Attribut <t><t>Beskrivning
SetDig.Attribute <t><t>Signal i rtdb av typen Boolean som sätts till 1 vid 
                 <t><t>Klick MB1 på objektet.
SetDig.Instances <t><t>Anger vilka instanser som ska skapas.
</topic>

<topic>GeDynResetDig <style>function
ResetDig

Sätter värdet på en digital signal till 0 vid Klick MB1 på objektet.

ResetDig kan finnas i flera instanser, och sätter då värdet på flera signaler till 0.

<b>Attribut <t><t>Beskrivning
ResetDig.Attribute <t><t>Signal i rtdb av typen Boolean som sätts till 0 
                   <t><t>vid Klick MB1 på objektet.
ResetDig.Instances <t><t>Anger vilka instanser som ska skapas.
</topic>

<topic>GeDynToggleDig <style>function
ToggleDig

Togglar värdet på en digital signal vid Klick MB1 på objektet.

<b>Attribut <t><t>Beskrivning
SetDig.Attribute <t><t>Signal i rtdb av typen Boolean som togglas vid 
                 <t><t>Klick MB1 på objektet.
</topic>

<topic>GeDynStoDig <style>function
StoDig

Sätter värdet på en digital signal till ett så länge knappen är intryckt.

<b>Attribut <t><t>Beskrivning
StoDig.Attribute <t><t>Signal i rtdb av typen Boolean som sätts vid Klick 
                 <t><t>MB1 på objektet.
</topic>

<topic>GeDynSetValue <style>function
SetValue

Sätter värdet på en signal till ett angivet värde.
Genom att använda flera instanser kan man sätta värden i flera attribute på
samma knapp.

<b>Attribut <t><t>Beskrivning
SetValue.Attribute <t><t>Signal i rtdb av typen Float32, Int32, 
                   <t><t>UInt32, Int16, UInt16, Int8, UInt8 eller String,
                   <t><t>som sätt vid Klick MB1 på objektet.
SetValue.Value     <t><t>Värdet som sätts.
</topic>

<topic>GeDynCommand <style>function
Command

Exekverar ett xtt-kommando vid Klick MB1 på objektet.

<b>Attribut <t><t>Beskrivning
Command.Command <t><t>Xtt-kommando som exekveras vid mus-klick 
                <t><t>på objektet.

Tillägg till xtt-kommando syntaxen

<b>$object

$object kommer att ersättas av det aktuella objektet i en objekts bild,
eller av den aktuella hierarkin i en hierarki-bild.

<b>$hostobject

En speciell syntax for HostObject dynamik där $hostobject kommer att
ersättas av det aktuella host objektet.

<b>&(attribut-referens)

Strängen för attribut-referenser av typen '&(attributnamn)' kommer att ersättas av 
innehållet i attributreferensen. Antag att det finns en vektor,  H1-ObjectList.ObjArray, 
med attributreferenser som pekar på objekt för vilka  objektsbilden ska visas. 
Med kommandot

> open graph /class /instance=&(H1-ObjectList.ObjArray[0])

öppnas objektgrafen för objektet i första elementet. Man kan även ange dubbla led av
attributreferenser med syntaxen &(&(attribut-referens)).

<b>Array index replacement
Ett Int32 eller UInt32 attribut can användas för vektor index med syntaxen
[&(integer-attribute)]. Med kommandot

<c>> open graph /class /instance=H1-Plates[&(H1-CurrentIndex.ActualValue)]

kommer element indexet för H1-Plates att hämtas från det aktuella värdet
av H1-CurrentIndex.ActualValue.

<b>Parent object references
Med .< tas det föregående attributet bort i ett attributnamn.
H1-Plates.Data.<.CurrentIndex kommer att resultera i H1-Plates.CurrentIndex.
Detta kan användas i objektsbilder i kombination med $object. Till exempel

<c>> open graph /class /instance=$object.<

kommer att öppna objektsbilden för objektet som innehåller det aktuella objektet.

-< syntaxen är likartad och används för objektshierarkier. 
H1-Pumps-P1<- kommer att resultera i H1-Pumps. Det gör det möjligt att adressera
förälderobjekt i hierarkibilder. Till exempel

<c>> open graph /class /instance=$object-<

kommer att öppna objektsbilden för förälderobjektet.
</topic>

<topic>GeDynCommandDoubleClick <style>function
CommandDoubleClick

Exekverar ett xtt-kommando vid Dubbelklick MB1 på objektet.

<b>Attribut <t><t>Beskrivning
CommandDoubleClick.Command <t><t>Xtt-kommando som exekveras vid mus-klick 
              <t><t>på objektet.
</topic>

<topic>GeDynScript <style>function
Script

Exekverar ett xtt-script vid Klick MB1 på objektet.

<b>Attribut <t><t>Beskrivning
Script.Script <t><t>Xtt-script som exekveras vid mus-klick 
                <t><t>på objektet.

</topic>

<topic>GeDynHelp <style>function
Help

Öppnar hjälpfönstret med angivet ämne vid Klick MB1 på objektet.

<b>Attribut   <t><t>Beskrivning
Help.Topic    <t><t>Ämne vars hjälptext ska visas.
Help.Bookmark <t><t>Bokmärke i hjälptexten. Kan utelämnas.
</topic>

<topic>GeDynOpenGraph <style>function
OpenGraph

Öppnar en graf via ett XttGraph-objekt vid Klick MB1.

<b>Attribut <t><t>Beskrivning
OpenGraph.GraphObject <t><t>Objekt av klassen XttGraph.
</topic>

<topic>GeDynOpenURL <style>function
OpenURL

Öppnar en URL i lämplig webläsare Klick MB1.

<b>Attribut <t><t>Beskrivning
OpenURL.URL <t><t>En URL
</topic>

<topic>GeDynConfirm <style>function
Confirm

Confirm innebär bekräftelse krävs innan en aktion genomförs. En dialogruta med angiven text 
resp Ja och Nej knappar visas, innan övriga action-element exekveras.

<b>Attribut  <t><t>Beskrivning
Confirm.Text <t><t>Text som visas i verifierings fönstret.
Confirm.OnSet <t><t>Används med action ToggleDig när bekräftelse enbart krävs när värdet sätts till 1.
              <t><t>När värdet sätts till 0 sker det utan bekräftelse.
Confirm.OnReset <t><t>Används med action ToggleDig när bekräftelse enbart krävs när värdet sätts till 0.
              <t><t>När värdet sätts till 1 sker det utan bekräftelse.
</topic>

<topic>GeDynIncrAnalog <style>function
IncrAnalog

Öka eller minska värde på ett anlogt attribut.

Objektet kopplas till ett analog attribut. Vid Klick MB1 på objektet ökas värdet på 
attributet med värdet angivet i Increment. Min och Max-värde för attributet kan anges.

<b>Attribut <t><t>Beskrivning
IncrAnalog.Attribute <t><t>Signal i rtdb av typen Float32. Vid Klick MB1 ökas 
                     <t><t>värdet av attributet med värdet i Increment.
IncrAnalog.Increment <t><t>Värde som attributet i Attribute ökas/minska med.
IncrAnalog.MinValue  <t><t>Minvärde för attributet.
IncrAnalog.MaxValue  <t><t>Maxvärde för attributet.
</topic>

<topic>GeDynRadioButton <style>function
RadioButton

Sätter värdet på ett digitalt attribut vid klick och återställer värdet för övriga 
RadioButton-objekt i gruppen.

Objektet måste ingå i en grupp med andra objekt av typen RadioButton.

<b>Attribut <t><t>Beskrivning
RadioButton.Attribute <t><t>Signal i rtdb av typen Boolean. Vid Klick MB1 
                      <t><t>sätts värdet av attributet och övriga RadioButton 
                      <t><t>objekt i samma grupp återställs
</topic>

<topic>GeDynValueInput <style>function
ValueInput

Inmatningsfält. Ger möjlighet att mata in ett värdet på en signal, i en komponent som har 
Value dynamik. Värdet kan ändras genom att man klickar med MB1 på objektet.

Signalen anges i Value.Attribute.

<b>Attribut <t><t>Beskrivning
ValueInput.MinValule  <t><t>Minimivärde vid inmatning.
ValueInput.MaxValue   <t><t>Maximivärde vid inmatning
ValueInput.Clear      <t><t>Fältet töms när det öppnas för inmatning.
ValueInput.Popup      <t><t>Vid inmatning öppnas ett inmatningsfönster.
ValueInput.Unselect   <t><t>Texten i fältet markeras inte när fältet öppnas för inmatning.
ValueInput.EscapeStore <t><t>Om fältet är öppet när grafen stängs, lagras det imatade
                      <t><t>värdet i databasen. Det lagras även av xtt kommandot
                      <t><t>'set graph /escapestore'.
ValueInput.MinValueAttr <t><t>Signal för minivärde vid inmatning.
ValueInput.MaxValueAttr <t><t>Signal för maxivärde vid inmatning.
ValueInput.KeyboardType <t><t>Typ av virtuellt tangentbord som öppnas när fältet har 
                      <t><t>input focus. Kräver att VirtualKeyboard är angivet för
                      <t><t>operatörsplatsen.
</topic>

<topic>GeDynToolTip <style>function
ToolTip

Visar ToolTip text för en komponent. ToolTip är en vit textruta som visas om markören vilar 
på en komponent en viss tid. När markören lämnar komponenten tas textrutan bort.
I 'Text' anges normal tooltip-texten. Om texten ska vara ändringsbar, kan man även koppla 
till ett sträng-attribut genom att ange sträng-attributet i 'Text' med '&' som prefix, t ex
<c>  &A1-B1- Sv1.ActualValue##String80

<b>Attribut <t><t>Beskrivning
ToolTip.Text <t><t>ToolTip text.
</topic>

<topic>GeDynInputFocus <style>function
InputFocus

Input fokus är en funktion gör att man kan påverka komponenter i bilden från tangentbordet 
istället för med musen. Det flesta funktioner som utförs med pekare och mus kan även utföras 
från tangentbordet. 

En komponent väljs ut mha pil- eller Tab-tangenteran, (eller genom att klicka på den), så att 
den har input fokus.
Det innebär att all inmatning från tangenbordet kanaliseras till komponenten. En tryckknapp 
aktiveras t ex genom att man trycker på Return, en optionmeny genom att man väljer ut önskat 
alternativ med piltangenterna och trycker på Return, en ValueInput genom att man matar in 
önskat värdet och trycket på Return.

Endast komponenter med actiontypen InputFocus kan erhålla input focus, undantaget är 
ValueInput som även kan få input fokus genom att man klickar på dem.

Man skiftar input fokus mellan komponenterna med pil-tangenterna eller Tab-tangenten. 
Komponenternas ordning konfigureras genom att man länkar dem i tre listor, en horisontell, en
vertikal och en Tab-lista. I den horisontella listan förflyttar man sig med Pil Vänster och 
Pil Höger, i den vertikala med Pil Upp och Pil Ner, i Tab listan med Tab tangenten. Det hela 
konfigureras med attributen InitialFocus, NextHorizontal, NextVertical och NextTab. I 
InitialFocus kan man ange att ett objekt ligger först eller sista i en lista. Man kan även 
ange att en komponent ska ha input fokus när billden tas upp. I NextHorizontal, NextVertical 
och NextTab lägger man in objektsnamnet på nästa komponent i respektive lista.

Man brukar dela in komponenterna i Tab grupper. Mellan komponenterna inom en Tab-grupp 
navigerar man med pil-tangenterna, och mellan Tab grupperna navigerar man med Tab-tangenten. 
Detta åstadkommes genom att samtliga komponenter inom en Tab-grupp har första objektet i 
nästa Tab-grupp som NextTab.

<b>Attribut <t><t>Beskrivning
InputFocus.InitalFocus <t><t>Bitmask med föjande bitar.
  <t><t>- InitialFocus Komponenten har input fokus när 
  <t><t>  grafen öppnas
  <t><t>- FirstHorizontal Komponenten är första objekt i 
  <t><t>  horisontella listan.
  <t><t>- FirstVertical Komponenten är första objekt i 
  <t><t>  vertikala listan.
  <t><t>- FirstTab Komponenten är första objekt i Tab-
  <t><t>  listan.
  <t><t>- LastHorizontal Komponenten är sista objekt i 
  <t><t>  horisontella listan.
  <t><t>- LastVertical Komponenten är sista objekt i 
  <t><t>  vertikala listan.
InputFocus.NextHorizontal <t><t>Objektsnamn på nästa komponent i 
                          <t><t>horisontella listan.
InputFocus.NextVertical   <t><t>Objektsnamn på nästa komponent i 
                          <t><t>vertikala listan.
InputFocus.NextTab        <t><t>Objektsnamn på nästa komponent i 
                          <t><t>Tab listan.
</topic>

<topic>GeDynPulldownMenu <style>function
PulldownMenu

Action för en rullgardinsmeny, eller för en submeny i en rullgardinsmeny.

En rullgardinsmeny består av ett antal meny alternativ som antingen är tryckknappar eller 
submenyer.
Antalet alternativ i menyn konfigureras i ItemMask, en meny kan ha upp till 32 menyalternativ.
För varje menyalternativ väljer man en actiontyp. För tryckknappar kan man välja mellan 
SetDig, ResetDig, ToggleDig, Command, Help, OpenGraph, CloseGraph, OpenURL och IncrAnalog. 
Submenyer ska ha actiontyp PulldownMenu, och för denna konfigurerar man antalet 
menyalternativ och actiontyp på samma sätt som för rullgardinsmenyn. Submenyer kan byggas i 
obegränsat antal nivåer.

<b>Attribut <t><t>Beskrivning
Text                   <t><t>Text för rullgardins menyn.
PulldownMenu.ItemMask  <t><t>Mask som bestämmer antalet menyalternativ.
PulldownMenu.ItemText1 <t><t>Text för första menyalternativet.
PulldownMenu.ItemDyn1  <t><t>Dynamik för första menyalternativet. Innehåller 
                       <t><t>action typ, samt eventuell access, för 
                       <t><t>menyalternativet.
PulldownMenu.ItemText2 <t><t>Text för andra menyalternativet.
PulldownMenu.ItemDyn2  <t><t>Dynamik för andra menyalternativet.
</topic>

<topic>GeDynOptionMenu <style>function
OptionMenu

Option meny är en meny där man väljer alternativ i en lista av alternativ. Det valda 
alternativet visas upp i meny-komponenten. När man klicka på komponenten öppnas listan med 
alternativ. När man väljer ett alternativ stängs listan och det valda alternativet läggs in 
i komponenten.

Optionmeny kopplas till ett databas-attribut av typ float eller int. Varje alternativ i 
listan motsvarar ett uppräkningsvärde, och när alternativet väljs läggs värdet in i 
databas-attributet. Komponenten läser kontinuerligt av värdet på databasattributet, och 
skriver ut texten för det alternativ som motsvarar värdet, i sitt text-fält.

Optionmenyn kan vara statisk eller dynamisk. För en statisk meny anger man texter och 
uppräkningsvärde i olika item, för en dynamisk meny hämtas meny-texterna från ett attribut
i databasen av typen array of String80. Antalet texter i menyn hämtas från ett attribut
av typen Int32, och dessutom ska man ange ett attribut som indikerar att nya texter ska
läsas in. Det här attributet ska vara av typen Boolean och inläsningen av nya texter sker
när värdet ändras från 0 till 1. 

<b>Attribut <t><t>Beskrivning
OptionMenu.Type	      <t><t>Typ av optionmeny. Statisk eller dynamisk.

<b>Statisk meny

OptionMenu.Attribute  <t><t>Databas attribut av typen Float32, Float64, Int32, 
                      <t><t>UInt32, Int16, UInt16, Int8 eller UInt8. Värdet i 
                      <t><t>ItemEnum för valt alternativ sätts i databas attributet.
OptionMenu.ItemMask   <t><t>Mask som bestämmer antalet menyalternativ.
OptionMenu.ItemText1  <t><t>Text för första menyalternativet.
OptionMenu.ItemEnum1  <t><t>Uppräkningsvärdet för första menyalternativet.
OptionMenu.ItemText2  <t><t>Text för andra menyalternativet.
OptionMenu.ItemEnum2  <t><t>Uppräkningsvärdet för andra menyalternativet.

<b>Dynamisk meny

OptionMenu.Attribute  <t><t>Databas attribut av typen Float32, Float64, Int32, 
                      <t><t>UInt32, Int16, UInt16, Int8 eller UInt8. Index för
                      <t><t>valt alternativ sätts i databas attributet.
OptionMenu.TextAttribute <t><t>Databas attribut av typen vektor med String80, som
		      <t><t>innehåller de texter som visas i menyn.
OptionMenu.SizeAttribute <t><t>Databas attribut av typen Int32, som anger antalet
		      <t><t>alternativ i menyn.
OptionMenu.UpdateAttribute <t><t>Databas attribut av typen Boolean, som anger att
		      <t><t>texterna i menyn ska uppdateras. Uppdateringen sker när
		      <t><t>värdet ändras från 0 till 1.

</topic>

<topic>GeDynMethodPulldownMenu <style>function
MethodPulldownMenu

Action för en rullgardinsmeny med menyalternativ för ett objekts metoder.
Endast konfigurerade metoder visas i menyn.

<b>Attribut <t><t>Beskrivning
MethodPulldownMenu.Object <t><t>Objekt för vilket metoderna ska visas.
MethodPulldownMenu.HelpMenu <t><t>Menyn är en hjälpmeny och endast hjälp-metoderna
                          <t><t>Help och Help Class visas i menyn.
</topic>

<topic>GeDynEmitSignal <style>function
EmitSignal

Aktion för att sända en signal.

<b>Attribut <t><t>Beskrivning
EmitSignal.SignalName <t><t>Signalnamn.
EmitSignal.Global <t><t>Om global är satt, sänds signalen till all öppna grafer
                  <t><t>och multiviewer. Annars vara till den nuvarande grafen.
                       
</topic>

<topic>GeDynCatchSignal <style>function
CatchSignal

Aktion för att fånga en signal. När signalen är fångad, exekveras aktionerna för mus-klick för 
det aktuella objektet.

<b>Attribut <t><t>Beskrivning
CatchSignal.SignalName <t><t>Signalnamn.
                       
</topic>

</headerlevel>
<pagebreak>

<topic>geref_create_subgraph
Skapa en subgraf

Man skapar en subgraf genom att rita bas-objekt i arbetsarean. Man har här även tillgång till
kopplingspunkter och annotations.

Markera att det är en subgraf genom att öppna File/Graph attributes och sätt en etta på 
subgraph.

Stäng attribut-editorn och öppna den igen och editera subgraf attributen.

<b>Attribut <t>Beskrivning
DynType     <t>Typ av dynamik. Instanserna kommer att ärva denna som default-dynamik.
Action      <t>Typ av action. Instanserna kommer att ärva denna som default-action.
Color1      <t>Första färg eller färgton som instanserna kommer att ärva som default.
Color2      <t>Andra färg eller färgton som instanserna kommer att ärva som default.
Color3      <t>Tredje färg eller färgton som instanserna kommer att ärva som default.
Color4      <t>Fjärde färg eller färgton som instanserna kommer att ärva som default.
AnimSequence <t>Typ av animation då DynType är Animation.
NoConObstacle <t>Anger att kopplingar kan ignorera en instans av subgrafen. 
              <t>Kopplingar av typen 'routed' undviker normalt ett subgraf-objekt, 
              <t>men om NoConObstacle är satt kan kopplingarna ritas över objektet.
Slider      <t>Markerar att subgrafen är en slider.
Subgraph    <t>Ska vara ett för en subgraf.
NextSubgraph <t>Namn på subgrafens nästa sida.
AnimationCount <t>Används vid animation. Anger antal cykler animeringen ska 
            <t>uppehålla sig vid den här sidan.
JavaName    <t>Vid export som java-bean kommer subgrafen att exportera som 
            <t>en java-klass med det här namnet.
Cycle       <t>Default-värde för cykel, långsam eller snabb, som instanserna 
            <t>kommer att ärva som default.
x0          <t>I (x0, y0) och (x1, y1) kan man ange max-storleken på en subgraf 
            <t>i de fall när subgrafen innehåller sidor med olika utbredning.
y0          <t>Se x0. Används även av vissa subgrafer med DynType Slider, 
            <t>Sliderbackground och FillLevel.
x1          <t>Se x0.
y1          <t>Se x0. Används även av vissa subgrafer med DynType Sliderbackground 
            <t>och FillLevel.
InputFocusMark <t>Hur objekt markeras när de har input fokus.
RecursiveDynamic <t>Används för dynamiken HostObject när objekt i subgrafen har
            <t>individuell dynamik.
Dynamic     <t>Ej implementerat.

Spara subgrafen med 'File/SaveAs...'. Kopiera den .pwsg fil som skapats till $pwrp_exe. 
Subgrafen ska nu synas under Local/Subgraphs-mappen i subgraf-paletten.

Det är lämpligt att rita subgrafen i närheten av origo i arbetsarean eftersom när man skapar 
instanser motsvaras positionen för musklicket av origo. Kopplingspunkter läggs på 
grid-punkter, om rektangulära kopplingar ska användas för att knyta ihop instanserna. Då 
undviker man onödiga hack i kopplingslinjerna.

<h2>Externa och interna subgrafer
När man första gången i en bild skapar en instans av en viss subgraf, laddas denna in från 
.pwsg-filen. Den är då intern vilket innebär att subgrafen sparas tillsammans med bilden, och
pwsg-filen behövs i princip inte mer. Man behöver t ex inte tänka på att kopiera den till 
operatörsnoder och processnoder. Detta fungerar bra ända tills man vill ändra i subgrafen. 
Så länga subgrafen är intern kommer inte dessa ändringar med. För att få med en ändring måste
subgrafen vara extern. När bilden då sparas kommer inte subgrafen att lagras i tillsammans i 
bilden, och nästa gång man läser bilden, laddas subgrafen från från .pwsg-filen. När den 
ändrade versionen är inladdad kan man åter ställa om den till intern.

För att ställa om en subgraf från intern till extern och vice versa väljer man 
'Loaded Subgraps' under 'File' i menyn. Här får man en lista på alla laddade subgrafer och 
kan sätta dem externa eller interna.

<h2>Slider
Slider eller dragregel är en speciell typ av subgraf. En slider ska kunna flyttas 
horisontellt eller vertikalt mellan två ändpunkter, och läget ska överföras, via skalning, 
till ett analogt värde i rtdb.

<b>Med bakgrund
Det enklaste sättet att konfigurera en slider, är att lägga ett SliderBackground-objekt bakom
slidern. Det enda man behöver göra är att koppla slider-objektet till en analog signal.

<b>Utan bakgrund
Om man absolut inte vill ha någon bakgrund till slidern måste man lägga in riktning, samt min
och max-position för rörelse-området. En horisontal slider konfigureras på följande sätt 
(vertikal slider inom parentes).

Placera slidern på den lägsta y (x) koordinaten som slidern ska kunna röra sig över. Tänk på 
att origo är placerat i övre vänstra hörnet.
Mät upp min och max-värde för sliderns rörelse relativt sliderns övre (vänstra) sida genom 
att placera markören där. Markörens position kan avläsas i nedre högra hörnet. Mata in dess 
värden i objektseditorn för subgraf-objektet, attributen MaxPosition resp MinPosition.
Ange riktning (Direction). Up innebär en vertikal slider med ökande värde uppåt. Right 
innebär en horisontal slider med ökande värde åt höger etc.

<b>Attribut <t>Beskrivning
Attribute <t>Signal i rtdb av typen Float32 eller Int32 som ändras när slidern dras.
Access    <t>Privilegier som krävs för att få ändra värdet på signalen.
Direction <t>Behöver endast anges om man inte har något SliderBackground-objekt.
          <t>Riktning på slidern. Up innebär en vertikal slider med ökande värde uppåt. 
          <t>Right innebär en horisontal slider med ökande värde åt höger.
MaxValue  <t>Värde på signalen som motsvarar sliderns max-position.
MinValue  <t>Värde på signalen som motsvarar sliderns min-position.
MaxPosition <t>Behöver endast anges om man inte har något SliderBackground-objekt. 
          <t>x eller y koordinat för sliderns max-position (se ovan).
MinPosition <t>Behöver endast anges om man inte har något SliderBackground-objekt. 
          <t>x eller y koordinat för sliderns min-position (se ovan).
</topic>
</chapter>

<chapter>
<topic>geref_groups
Grupper

En grupp är ett antal objekt som uppträder som ett enstaka objekt vid förflyttning, skalning,
rotation mm. En grupp skapas genom att man väljer ut de objekt som ska tillhöra gruppen, och 
sedan aktiverar 'Functions/Group' i menyn. Om man vill lösa upp en grupp, väljer man ut gruppen
och aktiverar 'Functions/Ungroup' i menyn.

Det finns vissa begränsningar på objekt som kan tillhöra grupper, kopplingar är t ex inte 
tillåtna i en grupp, och slider objekt kommer att förlora sin känslighet.

<h2>Dynamik
En egenskap hos grupper är att man kan sätta dynamik på dem. Alla de typer av dynamik och 
aktion som finns för subgrafer är också tillgängliga för grupper.

De typer av dynamik som innebär en förändring av färg eller färg-ton, kommer att påverka all 
objekt i gruppen som inte har egen dynamik. För subgrafer som ska följa gruppens färgsättning
bör man sätta No som dynamiktyp (xtt och applets fungerar här lite olika).
Subgrafer och sub-grupper inom gruppen som har egen dynamik kommer att bestämma sina färger 
själva.

När man löser upp en grupp som man har satt någon typ av dynamik på, går data för dynamiken 
förlorad. För att förenkla i de situationer när man tillfälligt löser upp en grupp för att 
ändra någon komponent i gruppen, finns det en funktion som försöker återskapa dynamiken. När 
man löser upp gruppen sparas dynamik-data i en recall-buffer med grupp-namnet som nyckel. 
Vidare sparas gruppnamnet hos alla objekt som tillhörde gruppen. När man sedan grupperar 
objekten igen, letar men rätt på den grupp som de flesta objekt tillhört, och försöker hitta 
dynamiken för det gruppen i recall-bufferten. Om det hittas, läggs den in som dynamik för den
nya gruppen. Det finns fall när återskapandet inte fungerar, därför bör man vara uppmärksam 
på att man verkligen har fått rätt dynamik efter en tillfällig upplösning av en grupp. Om det
har gått snett, kan man normalt hitta dynamiken i recall-bufferten, som man hanterar med 
'Functions/Recall' och 'Functions/Recall previous' i objektseditorn.
</topic>
</chapter>

<chapter>
<topic>geref_images
GIF och JPEG bilder

GIF- och JPEG-bilder går här under benämningen image.

<h2>Skapa en image
Man skapar en image på samma sätt som en subgraf. GIF och JPEG-bilder finns under 
Images-mappen, och under Local/Images mappen. Vill man läsa in en speciell GIF eller JPEG-fil
kopierar man den till $pwrp_pop. Filen dyker då upp under Local/Images mappen. Genom att 
välja ut den och klicka med MB2 i arbetsarean skapas image-objektet.

En image kan skalas och roteras i steg om 90 grader. Funktionerna för färgton, ljushet, 
intensitet och färgskiftning fungerar också.

<h2>Dynamik
För att kunna lägga dynamik bakom en image måste man göra en subgraf av den först, eller låta
image-objektet ingå i en grupp. Vill man ändra färg dynamisk ska man använda någon dynamiktyp
som ändrar färgtonen, t ex DigTone. Ändring av fyllnadsfärg på en image ger ingen effekt.

<h2>Transparans
Om man har en image på en symbol som inte är rektangulär, t ex en rund indikatorlampa, så 
vill man att området utanför indikatorn ska vara transparant.

GIF-formatet stöder transparans. Genom att välja transparans-färgen (R: 255, G: 0, B: 255) 
kommer transparensen även att fungera i Ge.

Java stöder tyvärr inte transparans för GIF-filer. Ge's image-klass lägger däremot in 
transparans i de pixel som har (R:255, G:255, B:255) dvs vitt. Detta kan dock leda till att 
högdagrar i bilden visas som transparanta.
</topic>
</chapter>

<chapter>
<topic>geref_connections
Kopplingar

Subgrafs-objekt som innehåller kopplingspunkter kan kopplas ihop med kopplingar. Kopplingar 
ritas genom att man drar med MB2 från det ena objektet till det andra. Den kopplingspunkt som
ligger närmast markören när man trycker ner resp släpper musen väljs.

Kopplingar karakteriseras av typ, linjebredd, 3D och färg.

<h2>Typ
Typen väljs i menyn under 'Connections'.

<b>Straight
Koppling i form av en rak linje mellan kopplingspunkterna.

<b>StraightOneArrow
Koppling i form av en rak linje med en pil.

<b>Routed
Koppling i form av horisontella och vertikala linjer. Kopplingens väg och brytpunkternas 
placering beräknas så att kollision med övriga subgrafs-objekt undviks (de som ej har 
attributet NoConObstacle satt).

<b>Grafcet
Det finns ett antal kopplingar som används vid ritning av grafcet-sekvenser: StepDivergence, 
StepConvergence, TransDivergence och TransConvergence. Dessa kan användas tillsammans med 
subgraferna under mappen Grafcet i subgrafs-paletten om man vill visa en grafcet-sekvens i en
bild.

<h2>Runda hörn
På kopplingar av typen routed kan man välja att ha runda hörn, och även ange radien på 
rundningen. Detta väljs i menyn under 'Connections/Corners' och 'Connectins/CornerRoundAmount'.

<h2>Färg
Färgen på kopplingen väljs som fyllnadsfärg, dvs med MB1 i färg-paletten.

<h2>Kant
Border gör att svarta kantlinjer ritas på kopplingen.

<h2>3D
Vid 3D ritas en ljusare skugga på ovansidan och en mörkare på undersidan. Endast 
implementerat på kopplingar med typ Routed och runda hörn.

<h2>Tjocklek
Tjockleken väljs i verktygspanelen pss som för linjer.

<h2>Förgreningar
Om en koppling dras ut från en komponent och släpps i arbetsarean skapas en komponent av 
typen ConGlue i ändan på kopplingen. ConGlue har fyra kopplingspunkter och fungerar som 
antingen en avslutning, eller en förgrening av kopplingen, eller som en möjlighet att kunna 
påverka kopplingens väg. Genom att dra nya kopplingar frän ConGlue komponentens 
kopplingspunkter skapas nya kopplingar, och ConGlue objektet anpassar sin form och färg efter
de anslutna kopplingarna.

ConGlue finns även i subgrafs paletten under Other.
</topic>
</chapter>

<chapter>
<topic>geref_edit
Editering

Ge innehåller en rad funktioner för att skapa objekt, modifera dem, ordna dem mm. 
Funktionerna hittar man i verktygs-panelen, i menyn. En del aktiveras med mus-klick.

<h1>Skapa objekt
Basobjekt  skapas genom att man väljer en objekt-typ i verktygspanelen och sedan drar eller 
klickar i arbetsarean med MB1. Om man håller ner Shift tangenten samtidigt som objekts-typen 
väljs i verktygspanelen, kan men skapa flera objekt, utan välja ny objekts-typ. En mer ingående
beskrivning av hur varje objekts-typ skapas finns i kapitlet Objekt.

En instans av en subgraf eller ett komplext objekt, skapas genom att man väljer ut subgrafen i 
subgrafspaletten och klickar i arbetsarean med MB2.

<h1>Skapa kopplingar
Kopplingar skapas genom att man drar med MB2 mellan två subgrafs-objekt som innehåller 
kopplingspunkter.
Först ska man ha ställt in lämplig kopplings-typ under Connections i menyn.

<h1>Återställ
Genom att klicka med MB3 återställer man de flesta funktioner eller avslutar funktioner: 
tömmer listan på utvalda objekt, avslutar ritning av en polylinje, avlutar skalning, 
avslutar editering av polylinje.

<h1>Välja ut objekt
Ett objekt eller en koppling som är utvalt makeras genom att rödfärgas. Det här gäller dock 
inte när man har ändra färg på de utvalda objekten, då de ritas med de nya färgerna för att 
man ska kunna se effekten av färgförändringen.

Objekt väljs ut på följande sätt

- Klicka på objektet med MB1. Tidigare utvalda objekt tas bort ur listan på utvalda objekt. 
  Om objektet redan är utvalt töms listan på utvalda objekt.
- Klicka på objektet med Shift MB1. Objektet adderas till listan på utvalda objekt. Om 
  objektet redan är utvalt tas det bort ur listan på utvalda objekt.
- Dra med MB1. En rektangel ritas ut och objekt som ligger innanför rektangeln med hela 
  objekt-kroppen blir utvalda. Tidigare utvalda objekt tas bort ur listan på utvalda objekt. 
  Man måste se till att markören inte ligger på något objekt efter som man även flyttar 
  objekt med MB1. Om man har ett objekt som täcker backgrunden får man använda Shift MB1 
  istället (se nedan).
- Dra med Shift MB1. Objekt som ligger innanför rektangeln adderas till listan på utvalda 
  objekt.
- Select all objects under Edit i menyn väljer ut samtliga objekt.
- Select all connections väljer ut samtliga kopplingar.

Listan på utvalda objekt nollställs genom att klicka med MB1 på ett tomt område i 
arbetsarean, eller genom att klicka med MB3 i arbetsarean.

<h1>Flytta objekt
Ett objekt flyttas med MB1. Vill man flytta på flera objekt samtidigt, väljer man ut 
objekten. Om man nu flyttar på ett av de utvalda objekt följer samtliga utvalda objekt med.

Om man vill flytta objekt vertikalt eller horisontalt väljer man först Move Restrictions 
under Edit i menyn. Move Restrictions återställs med MB3.

<h1>Cut, copy och paste
Man kopierar objekt genom att välja ut de objekt som ska kopieras och kopiera dem till 
paste-bufferten med Ctrl+C. Med Ctrl+V kopieras de in i arbetsarean, och blir 'hängande' 
på markören (dvs följer markörens rörelser) tills man klickar med MB1 och låser fast dem. 
Klippa fungerar på samma sätt med Ctrl+X.

<h1>Grid
Grid och gridstorlek kan väljas från verktygspanelen.

<h1>Skalning
Skalnings-funktionen aktiveras från verktygspanelen och verkar på utvalda objekt. De utvalda 
objekten ramas in av en rektangel. Genom att dra i ett hörn eller en långsida skalas de 
utvalda objekten om. Om man drar i en långsida sker skalningen vertikalt eller horisontalt, 
drar man i ett hörn kan man skala objekten fritt. Genom att aktivera Functions/ScaleEqual 
före skalningen får man likformig skalning i x och y-led.

<h1>Rotera
Utvalda objekt roteras 90 grader modsols genom att rotations-funktionen i verktygs-panelen 
aktiveras. 90-graders rotationen fungerar på samtliga objekt utom texter. Vill man rotera en 
annan vinkel kan man göra detta genom Rotate under Edit i menyn. Här kan man mata in en 
godtycklig vinkel. Av basobjekten är det dock endast linjer och polylinjer som klarar en 
godtycklig rotation. Det gäller med andra ord att bygga upp subgrafer och objekt av linjer 
och polylinjer om de ska kunna roteras godtyckligt.

<h1>Ordna objekt
<h2>Vertikalt
Objekt som är placerade vertikalt kan vänsterjusteras, högerjusteras resp centreras med 
Align vertical under Functions i menyn. Välj ut de objekt som ska justeras och aktivera 
meny-entryt.

<h2>Horisontalt
Objekt som är placerade horisontalt kan justeras med avseende på översida, undersida resp 
centrum med Align horizonal under Functions i menyn. Välj ut de objekt som ska justeras och 
aktivera meny-entryt.

<h2>Koncentriska cirklar
Koncentriska cirklar åstadkommer men genom att först aktivera Align vertical center och sedan
Align horizontal center.

<h2>Lika avstånd mellan objekt
Objekt som är placerade vertikalt eller horisontalt ska ofta ha lika avstånd mellan dem. 
Detta åstadkommer man med Equidistance under Functions i menyn. Equidistance funktionen för 
horisontella objekt, behåller positionen på objektet längst till höger och längst till 
vänster, men placerar mellanliggande objekt så att avståndet mellan objekten blir lika. 
Avståndet kan räknas från objektens högerkant, vänsterkant eller centrum. På motsvarande sätt
kan vertikala objekt ordnas med 'Equidistance/vertical'.

<h1>Under och över
Om objekt överlappar kan man flytta dem över eller under med Pop och Push under Functions i 
menyn. Pop lägger ett objekt över samtliga andra objekt i bilden, push lägger objektet under 
alla andra objekt. Vill man lägga ett objekt mellan två andra objekt krävs det lite 
tankearbetet för att gör pop eller push i rätt ordning.

<h1>Färger
<h2>Bakgrundsfärg
Bakgrundfärgen i bilden sätts genom att välja ut en lämplig fyllnadsfärg i färgpaletten 
(MB1) och aktivera Set background color under Functions i menyn.

<h2>Färger på objekt
Färger på objekt delas upp i fyllnadsfärg och kantfärg. Den fyllda delen av objektet ritas 
med fyllnadsfärgen och kanten ritas med kantfärgen. En del objekt t ex linjer ritas enbart 
med kantfärg. Färgerna väljs i färgpaletten, fyllnadsfärg väljs med MB1 och kantfärg med MB2.
De senast valda färgerna visas i två rektanglar överst i färgpaletten, fyllnadsfärg till 
vänster och kantfärg till höger. När ett basobjekt eller sammansatt objekt skapas hämtas de 
senast valda färgerna från paletten och objektet ges dessa färger. Vill man ändra på färger 
på existerande objekt väljer man ut dem och väljer en ny fyllnads- eller kant-färg i 
paletten. Observera att objekten efter denna operation ritas med de aktuella färgerna trots 
att de är utvalda, dvs de förlorar sin rödmarkering. Det är därför bra klicka med MB3 efter 
operationen för att nollställa utvalslistan.

<h2>Färger på subgrafs-objekt
Man kan ändra färg på subgrafs-objekt på samma sätt som man ändrar färg på basobjekt, genom 
att välja ut dem och ge dem en kant- eller fyllnadsfärg. Objekt som är ritade med skuggningar
och 3D-effekter förlorar dessa om man ändrar fyllnadsfärgen. Därför finns speciella 
funktioner för att ändra färg på subgraf-objekt, i termer av ljushet, ton, intensitet och 
skiftning. I kapitlet Subgrafer behandlas detta mer ingående.

<h1>Koppling till rtdb
När ett subgrafs-objekt ska påverka eller påverkas av en signal i rtdb måste man ange 
detta i subgrafens attribut. Ett sätt är att mata in det för hand i objektseditorn för 
subgrafen. Ett annat betydligt smidigare är att använda planthierarkin som kan hittas ovanför
navigationsfönstret. Planthierarkin finns med om man har startat Ge från navigatören. I 
planthierarkin väljer man ut det objekt man vill koppla subgrafs-objeket till, och klickar
sedan på subgrafs-objektet med Ctrl/DubbelKlick MB1. Finns det två rtdb-kopplingar i 
subgrafs-objektet kopplas den första på detta sätt och den andra kopplingen med 
Ctrl/Shift/DubbelKlick MB1. Man kan även öppna objektseditorn och klicka på raden för 
attributet med Ctrl/Dubbelklick MB1 för att lägga in signalen. Är det en signal man kopplar 
till räcker det att välja ut objektet i planthierarkin, då väljs attributet ActualValue 
automatisk. Om det är ett annan typ av objekt måste man ange vilket attribut man ska koppla 
subgraf-objektet till. Det gör man genom att öppna objektet med DubbelKlick MB1, och sedan 
välja ut lämpligt attribut.

Man kan även kopiera in signalen från navigatören.

<h2>Suffix
Till namnet på signalen ska adderas ett suffix som talar om vilken typ attributet är. 
Dynamik där det är uppenbart vilken typ attributet har är detta inte nödvändigt, t ex 
varianter av Dig operarar ju enbart på Boolean.
Följande typer av suffix kan anges:

##BOOLEAN
##FLOAT32
##FLOAT64
##CHAR
##INT8
##INT16
##INT32
##UINT8
##UINT16
##UINT32
##OBJID
##STRING
##TIME
##DELTATIME
##ATTRREF

Är attributet en sträng eller en vektor ska dessutom storleken anges pss som i GMS.

<h1>Graf-attribut
Under File i menyn finns Graph attributes och här kan man mata in attribut för bilden.

Här anges bl a vilken del av arbetsarean som ska visas i runtime. Koordinaterna för övre 
vänstra hörnet och nedre högra hörnet mäts upp mha markören och matas in i x0, y0 resp x1, y1.

<b>Attribut <t>Beskrivning
subgraph    <t>Anger att grafen är en subgraf. I så fall är inte nedanstående 
            <t>attribut aktuella.
x0          <t>x-koordinat för övre vänstra hörnet på bilden.
y0          <t>y-koordinat för övre vänstra hörnet på bilden.
x1          <t>x-koordinat för nedre högra hörnet på bilden.
y1          <t>y-koordinat för nedre högra hörnet på bilden.
Scantime    <t>Cykeltid i sekunder för uppdateringar av objekt som går med den 
            <t>långsamma cykeln.
FastScantime <t>Cykeltid i sekunder för uppdateringar av objekt som går med den 
            <t>snabba cykeln.
AnmationScantime <t>Cykeltid i sekunder för animeringar i bilden.
JavaWidth   <t>Bredd i pixel som bilden skalas till vid exportering till java.
IsJavaApplet <t>Bilden exporteras som en java applet vid exportering.
IsJavaFrame <t>Bilden exporteras som en java frame vid exportering.
BackgroundImage <t>Namn på gif eller jpg-fil för bakgrundsbild.
BackgroundTiled <t>Bakgrundsbilden skalas ej utan upprepas så att bakgrunden täcks.
DoubleBuffered <t>Grafen ska dubbelbuffras, vilket innebär att bilden först 
             <t>ritas i en pixmap i minnet och sedan kopieras till skärmen. Bör 
             <t>användas om bilden innehåller rörliga objekt eller animationer.
MB3Action   <t>Anger vad som ska hända vid högerklick i grafet.
Translate   <t>All dynamisk och statisk text översätts.
BitmapFonts <t>Bitmapsfonter används i stället för skalbara fonter.
HotIndication <t>Hur känsliga objekt markeras när makören pekar på dem.
TooltipTextsize <t>Storlek på text is tooltip.
AppMotion   <t>Vad som ska ske vid drag i en Android app.

<h1>Objekts och hierarki grafer
Det här kapitlet beskriver hur man kan göra ge-bilder som visar innehållet objekt av en viss 
klass, och som kan visa alla objekt av den klassen. Det beskriver också hur man kan göra 
gemensamma bilder för likartade hierakier i ProviewR-databasen.

<h1>Objekts graf
För en del klasser som tillhör ProviewR's basklasser finns det sk objekts-bilder, dvs bilder 
som kan öppnas för varje objekt som tillhör klassen. Objekts-bilder finns bl a för klasserna 
PID, Mode, Av, Ai, Ao, Di, Do, Dv, och öppnas i xtt med kommandot 'open graph /instance=' där 
man i /instance skickar med namnet på objektet. Man kan också öppna objektbilden genom att 
välja ut objektet och aktivera Functions/Open object graph i xtt menyn.

Om man har gjort en egen klass, kan man göra en objektsbild även för denna klass. Man 
editerar bilden som en normal ge-graph. Skillnaden kommer när man ska knyta de olika 
dynamiska objekten till ProviewR-objektet i rtdb. Där man normalt skriver ett objekts-namn 
skriver man istället $object. Data för en indikator som kopplas till attributet ActualValue 
i ProviewR-objektet kan se ut så här

<b>Attribut <t><t>Värde
SubGraph <t><t>pwr_indsquare
LowColor.Attribute <t><t>$object.ActualValue##Boolean
LowColor.Color  <t><t>Inherit
Cycle   <t><t>Inherit
DynType <t><t>Inherit
Action  <t><t>Inherit

Grafen bör sparas med samma namn som klassen, med små bokstäver, om man vill kunna öppna den 
med Functions/Open object graph i xtt-menyn.

Kommandot för att öppna objektbilden för objektet H1-H2-MyObject av klassen MyClass blir

<c>open graph /classgraph /instance=H1-H2-MyObject

<h1>Hierarki graf
Ofta finns det anläggningsdelar i ett system som är identiska och som ger upphov till närmast
identiska hierarkier. Det kan t ex finnas 30 likadana frekvensomformare, och det finns i Ge 
möjlighet att, istället för att editera 30 likadana grafer, göra en generisk som klarar alla 
frekvensomformarna. Tillvägagångssättet bygger på samma princip som objekts-graferna ovan. 
Den hieraki som skickas med i /instance i open graph kommandot när grafen öppnas, kommer att 
ersätta alla $object som förekommer i dynamiska kopplingar i bilden.

Data för en indikator som kopplas till Dv'n Start kan t ex se ut så här

<b>Attribut <t><t>Värde
SubGraph  <t><t>pwr_indsquare
LowColor.Attribute <t><t>$object-Start.ActualValue##Boolean
LowColor.Color  <t><t>Inherit
Cycle   <t><t>Inherit
DynType <t><t>Inherit
Action  <t><t>Inherit

När bilden öppnas med kommandot

<c>open graph my_fo_graph /instance=H1-H2-Fo1.53

kommer indikatorn ovan att kopplas till attributet H1-H2-Fo1-Start.ActualValue.

Även i kommandon som exekveras av tryckknappar i bilden, kommer strängen $object att 
ersättas av hieraki-namnet. Detta gör att man kan från tryckknappar kan öppna objekts-bilder 
eller trend-kurvor på objekt inom hierakin. Kommandot för att öppna objekts-bilden för ett 
Mode-objekt kan t ex bli

<c>open graph /classgraph /instance=$object-Plc-W-Mode0/name=$object

Exempel på kommando för att öppna en trendkurvor från en plotgrupp inom hierakin

<c>open trend $object-Plot
</topic>
</chapter>

<chapter>
<topic>geref_testing
Testning

<h1>Preview
Det finns möjlighet att testa bilden direkt i editorn. Förutsättningen är att man har startat
näthanteraren på sin utvecklingsmaskin och att den har kontakt med de objekt som förekommer 
i bilden. Med View/Preview i menyn kopplar editorn upp sig mot rtdb och börjar exekvera 
bildens dynamik. Preview avslutas med View/Preview close. Därefter kan man fortsätta och 
editera bilden.

<h1>Xtt
Genom att starta xtt i utvecklings-miljön eller på en operatörs/process-nod, kan man också 
enkelt testa bilden. Det enda som krävs är att .pwg filen för bilden är tillgänglig på 
$pwrp_exe. Man öppnar en ge-graf med kommandot

<c>xtt> open graph 'grafnamn' [/width=][/height=][/scrollbar][/navigator]

Med kommandot

<c>xtt> show graph

listas tillgängliga grafer.
</topic>
</chapter>

<chapter>
<topic>geref_development
Utvecklingsmiljö

Här beskrivs lite om filkataloger och filer som används av ge, samt vilka filer som genereras.

<h1>Filtyper
Ge läser in bild-filer och sparar bild-filer på filkatalogen pwrp_pop.

En graf sparas som en fil av typen .pwg. En subgraf sparas också som en .pwg-fil, som används
när man ska editera subgrafen, men även som en .pwsg-fil. Det är .pwsg-filen som laddas in 
när man skapar objekt av subgrafen.

Exporterar man bilden som en java applikation skapas en .java -fil men det namn som man 
angivit som klassnamn.

Exporterar man bilden som en java-applet skapas en .java-fil med namnet som angivits som 
klassnamn med suffixet _A, t ex Oversikt_A.java. Dessutom skapas ett html-fil med klassnamnet
som namn.

<h1>Setup-filer
Ge använder två setup-filer, en för färg-paletten och en för subgrafs-paletten.

<h2>Färgpalett
Om man vill modifiera färgerna i färg-paletten är detta möjligt genom att skapa en fil med 
namnet ge_colors.dat.
Denna ska innehålla rgb-kod för färgerna i paletten. Det finns en mall på ...

<h2>Subgraf-palett
Subgrafpaletten innehåller en uppsättning fasta menyer och subgrafer samt mappen Local som 
läser in subgraferna på pwrp_pop. De fasta menyerna och subgraferna konfigureras i filen 
pwr_ge_setup.dat. Denna fil är generell för samtliga projekt men kan modifieras av 
systemansvarig.
</topic>
</chapter>

<chapter>
<topic>geref_command
Kommandon

Ge innehåller en kommandorad som öppnas från menyn eller med ctrl/b. Kommandona är i första 
hand avsedda att användas i ge-script, men kan även utföras från kommandoraden. Från 
kommandoraden körs även ge-script genom att skriva filnamnet med ett '@' framför. Observera 
att omställning av funktioner i editorn som görs via kommandon inte 'syns' i options-menyer 
och check-boxar. När ett script har exekverats kan inställningen vara annorlunda än den som 
visas.
</topic>
</chapter>

<chapter>
<topic>geref_script
Script

Scripthanteringen i ge finns beskriven i Ge script Användarhandledning. Här ges några enkla 
exempel på vad script kan användas till.

<h2>Att använda script
Ett script exekveras från kommando-raden i Ge genom att sätta ett '@' före filnamnet, t ex

<c>ge> @my_script

Kommandoraden öppnas med Functions/Command (Ctrl+B).

<b>Exempel 1
Första exemplet är ett script som exporterar några grafer till java. Ofta har men gjort en 
rad ändringar i olika bilder, och när det är klart ska allt exporteras till java. Det här 
scriptet läser successivt in de olika graferna och exporterar dem.

<c>!
<c>! Export java
<c>!
<c>function int process( string graph)
<c>  open 'graph'
<c>  printf( "Exporting %s...\n", graph);
<c>  export java
<c>endfunction

<c>main()
<c>  process( "nu4_alla_platar");
<c>  process( "nu4_status_trp");
<c>  process( "nu4_trp_hy1");
<c>  process( "nu4_trp_rb_ut");
<c>  process( "nu4_buffhog");
<c>  process( "nu4_status_ugn");
<c>  process( "nu4_trp_lu1");
<c>  process( "nu4_trp_start");
<c>  process( "nu4_inlagg");
<c>  process( "nu4_trend");
<c>  process( "nu4_trp_rb1");
<c>  process( "nu4_ugn_start");
<c>endmain

<b>Exempel 2
Nästa exempel visar hur man kan byta ut en subgraf i flera bilder. En subgraf är ju normalt 
intern, och en ändring i subgrafet slår inte igenom förrän man har genomfört proceduren att

- sätta subgrafen extern
- spara bilden
- läsa in bilden, nu med den ändrade subgrafen
- sätta subgrafen intern igen
- spara bilden.

Ändrar man ofta i sina subgrafer kan man med fördel skriva ett script som byter ut en subgraf
i alla grafer i projektet.

<c>!
<c>! Replace a subgraph
<c>!
<c>function int process( string graph)
<c>  int sts;
<c>  printf( "Processing graph %s\n", graph);
<c>  open 'graph'
<c>  sts = SetExtern("my_subgraph");
<c>  if ( sts)
<c>    printf( "Changing my_subgraph\n");
<c>    save
<c>    open 'graph'
<c>    SetIntern( "my_subgraph");
<c>    save
<c>  endif
<c>endfunction

<c>main()
<c>  process( "nu4_alla_platar");
<c>  process( "nu4_status_trp");
<c>  process( "nu4_trp_hy1");
<c>  process( "nu4_trp_rb_ut");
<c>  process( "nu4_buffhog");
<c>  process( "nu4_status_ugn");
<c>  process( "nu4_trp_lu1");
<c>  process( "nu4_trp_start");
<c>  process( "nu4_inlagg");
<c>  process( "nu4_trend");
<c>  process( "nu4_trp_rb1");
<c>  process( "nu4_ugn_start");
<c>endmain
</topic>
</chapter>

<chapter>
<topic>geref_web
Web bilder

<h1>Exportera som java-applet
Om en bild ska kunna visas i en web-bläddrare, exporterar man den som en java-applet. Först 
måste se till att attributet IsJavaApplet i File/Graph attributes är satt. Därefter aktiverar
man File/Export Java, som gör att bilden exporteras som en java applet och kompileras. 
Dessutom skapas en html-fil för att öppna appleten. Html-filen tillsammans med ett java-arkiv
med applet-klassen läggs på katalogen $pwrp_web. Genom att kopiera filerna på $pwrp_web till 
någon lämplig katalog under webservern ($pwrp_websrv), kan man öppna dem med web-bläddraren.

<b>Begränsningar
Java versionen av en Ge -bild skiljer sig från utseendet och funktionen i Ge och Xtt på ett 
antal punkter.
- Format-satserna för visning av flyttal, heltal och strängar ska vara av typen %n.mf, 
  %-n.mf, %d, %nd, %s där n och m är siffror.
- Bredden på kantlinjerna i en subgraph skalas pss som subgrafen i övrigt.
- Vid förändring av ett dynamisk objekt ritas inte bakgrunden eller täckande objekt om. Dvs 
  dynamiska objekt bör inte täckas av andra objekt, och texter som kan förändras måste ha en 
  bakgrund i subgrafen.
- Javabilderna är inte skalbara. Skalfaktorn bestämms av attributet 'JavaWidth'.
- Subgrafer får inte innehålla grupper. Detta ger kompileringsfel.
- Basobjekt ritas alltid under komponenter. Lägger men t ex en Text ovanpå en komponent 
  kommer inte texten att synas.

<h1>Konfigurera en web-site
För att kunna öppna de olika process-bilderna i ett system är det lämpligt att ha en web-sida
med en meny till väster och aktuell bild till höger. Med lite konfigurering kan man generera 
en sådan mha Generate web i menyn.

Konfigureringen går till så här:
Skapa ett WebHandler objekt under node-objektet i nod-hierarkin. Webhandler objektet gör att 
en server-process om förser bilderna med dynamisk information från realtidsdatabasen startas.
I objeketet anger man bl a också om man ska ha möjlighet att logga in som ProviewR-användare.
Under WebHandler-objektet lägger man ett WebGraph-objekt för varje bild som ska kunna öppnas 
från menyn.
Under WebHandler-objektet kan man även lägga WebLink-objekt. Varje WebLink-objekt ger upphov 
till ett meny-entry som kan kopplas till en URL, t ex dokument för arbetsinstruktioner, 
funktions-specifikationer o dyl.

Alla filer som krävs för web-siten samlas på filkatalaogen $pwrp_web. Genom att kopiera 
dessa, tillsammans med jar-filerna $pwr_lib/pwr_rt_client.jar och $pwr_lib/pwr_jop.jar, till 
lämplig filkatalog under webservern på operatörsnoden blir de tillgängliga på nätet.
</topic>
</chapter>

<chapter>
<topic>geref_runtime
Runtime

När bilden är klar ska den visas på en operatörs-station, en process-station eller kanske via
intranätet. 

<h1>Underhålls-bilder i xtt
Bilder av underhållskaraktär kan tas upp utan konfiguration från kommado-raden i xtt, vilket 
beskrivs ovan i Test avsnittet. Detta fungerar bra så länge bara man själv och andra invigda 
ska ha tillgång till bilderna. Ska en bredare krets kunna titta på dem kan man bygga upp ett 
meny-träd i xtt. Detta görs genom att lägga in kommandon xtt's startup fil. Startup-filen 
~/xtt_setup.rtt_com exekveras varje gång man startar xtt. Här kan men definera symboler men 
även lägga in kommandon för att skapa menyer. Här följer ett exempel på en symbol-fil som 
skapar en enkel underhålls-meny.

<c>create item/text="Underhåll"/menu/dest=DataBase/before
<c>create item/text="Översikt"/command="open graph oversikt" /menu 
<c>  <t>/dest=Underhåll /firstchild
<c>create item/text="Bläster"/command="open graph blaster" /menu 
<c>  <t>/dest=Underhåll /firstchild
<c>create item/text="Rullbana"/command="open graph rullbana" /menu 
<c>  <t>/dest=Underhåll /firstchild

<h1>Operatörs-bilder i xtt
Ska bilderna vara operatörbilder bygger man upp en operatörs-plats men OpPlace-objekt, 
User-objekt och XttGraph-objekt. Xtt startas men namnet på OpPlace-objektet som argument.

<h1>Java applikationer i xtt
En ge-bild kan exporteras som en java-applikation. Denna kan tas upp i xtt med kommandon 
'open jgraph'.

<h1>Web-bilder
För att lägga ut process-bilder på intranätet krävs att man installerar in webserver i någon 
operatörsstation. Vi använder Tomcat från Apache på Linux.

I ProviewR ska man skapa ett WebHandler-objekt i NodeHierarkin så att en server-process 
startas av näthanteraren som förser web-bilderna med data från rtdb.

En web-sida ska skapas i html för inloggning och länkar till olika bilder. Web-sidan 
innehåller in login-applet som gör det möjligt att logga in med användar-namn och password, 
och erhålla de privilegier hör till användaren. Vill eller kan man inte logga in tilldelas 
man privilegiet RtRead och har ändå möjlighet att titta på bilderna.

<h1>Distribution
<h2>xtt
För att kunna öppna en graf i xtt måste .pwg-filen för grafen kopieras från pwrp_pop i 
utvecklings-miljön till pwrp_exe i runtime-miljön. Även lokala subgrafer som är definierade 
som externa måste kopieras. Här kopierar man .pwsg-filen för subgrafen på motsvarande sätt. 
Lokala Image-filer måste också kopieras.

<h2>Web
Bilder som exporteras som java-applet's, kompileras och läggs i java-arkivet
$pwrp_lib/pwrp_'systemnamn'_web.jar. Här hamnar också GIF- och JPEG-filer som ligger på 
pwrp_pop. Det här biblioteket måste kopieras till webserverns applikations-katalog tillsammans
med de .html-filer som genereras av 'export java'. Till webserverns applikations-katalog ska
dessutom kopieras $pwr_lib/pwr_rt_client.jar och $pwr_lib/pwr_jop.jar.

<h2>Java-applikationer
Bilder som exporteras som en java-frame, komplieras och läggs i arkivet 
$pwr_lib/pwrp_'systemnamn'.jar. Även GIF- och JPEG-filer på $pwrp_pop läggs i detta 
bibliotek. Arkivet ska kopieras till $pwrp_lib på målnoden. Tillsammans med arkiven 
$pwr_lib/pwr_rt.jar och $pwr_lib/pwr_jop.jar ska de läggas in i CLASSPATH'en på målnoden.
</topic>
</chapter>

<chapter>
<topic>gecmd
Ge script och kommandon
<option> printdisable
Introduktion till script <link>gecmd_intro
Kommandon <link>gecmd_command
Script <link>gecmd_script
<option> printenable
</topic>

<topic>gecmd_intro
Introduktion till script
I GE finns en uppsättning kommandon för att skapa grafiska element som rektanglar, texter, 
polylinjer och subgrafer. Dessa kommandon kan utföras direkt från kommandoraden i GE, men det 
vanligaste är att skriva dem i script-filer som sedan exekveras från kommandoraden.

Scriptfilerna kan dessutom innehålla ett c-liknande språk som innehåller operatorer för 
berkäkningar, villkors-satser och for-loopar mm. Dessutom finns rutiner för att hämta 
information i utvecklings-databasen.Se manualen för pwr_cmd för en utförligare beskrivning.

Ge-script kan t ex användas för att konvertera bilder från andra bildhanterings-system till 
ge-bilder, eller för att automatgenerera formulär eller bilder utifrån objekt i databasen.

<h1>Skapa objekt
Basobjekt som rektanglar, linjer mm skapas med create-kommandot. Innan objektet skapas ställer 
man in editorn med egenskaper som objektet ska ha (fill, border, fyllnadsfärg, textstorlek 
etc), sedan skapar man objektet.

<h2>Rektangel
Exempel på en fylld rektangel

<c>set fill
<c>set linewidth 1
<c>set bordercolor Black
<c>set fillcolor BlueHigh7
<c>create rect /x1=10 /y1=1 /width=4  /height=2

<h2>Cirkel
Exempel på en halvcirkel

<c>set nofill
<c>set linewidth 2
<c>set bordercolor Black
<c>create arc /x1=1 /y1=1 /x2=3 /y2=2 /angle1=0 /angle2=180

<h2>Linje
Exempel på en linje

<c>set linewidth 1
<c>set bordercolor Black
<c>create line /x1=0 /y1=0 /x2=10 /y2=0

<h2>Polylinje
För en polylinje skapar man den första del-linjen med 'create', och resterande dellinjer 
med 'add'.

Exempel på polylinje

<c>set nofill
<c>set linewidth 1
<c>set bordercolor Black
<c>create polyline /x1=5 /y1=5 /x2=6 /y2=6
<c>add polyline /x1=5 /y1=7
<c>add polyline /x1= 6/y1=8
<c>add polyline /x1=5 /y1=9
<c>add polyline /x1= 6 /y1=10

<h2>Text
Exempel

<c>set textsize 14
<c>set textfont LucidaSans
<c>set textcolor RedHigh8
<c>set bold
<c>create text/text="Example" /x1=3 /y1=5

<h2>Subgraf objekt
Vid skapande av subgrafobjekt är gången lite annorlunda. Här skapar man först objektet, och 
sedan sätter man attributen på objektet.

Exempel på ventil

<c>create object /sub=pwr_valve /x1=1 /y1= 1 /x2=3 /y2=2
<c>set current fillcolor YellowGreenMedium4
<c>set current attr DigLowColor.Attribute "Rt-Dv1.ActualValue##Boolean"
<c>set current attr DigLowColor.Color GrayHigh8

Exempel på trycknapp

<c>create object /sub=pwr_buttonset /x1=5 /y1=1
<c>! Change type to SetDigConfirmWithTone
<c>set current attr Dyntype1 DigLowColor
<c>set current attr Action Inherit|Confirm
<c>set current attr annotation "Start"
<c>set current attr Confirm.Text "Do you really want to..."
<c>set current attr SetDig.Attribute "rt-Dv1.ActualValue##Boolean"
<c>set current attr DigLowColor.Attribute "rt-Dv2.ActualValue##Boolean"
<c>set current attr DigLowColor.Color YellowGreenMedium4
<c>set current attr Access System|Operator1

<h2>Graf attribut
Innan man sparar bör man sätta upp gränser i x- och y-led för grafen och diverse andra 
attribut. Detta görs med kommandot 'set graphattributes'.

Exempel

<c>set graph x0 -3
<c>set graph y0 -3
<c>set graph x1 40
<c>set graph y1 37
<c>set graph AnimationScanTime 0.2
<c>set graph BackgroundImage "corrado.gif"

<h2>Subgraf attribut
Om grafen ska sparas som subgraf användera man också 'set graphattributes', men sätter först 
attributet 'subgraf' och därefter de attribut som hör till subgrafen.

Exempel

<c>set graph subgraph 1
<c>set graphattr Action ToggleDig
<c>set graphattr DynType1 DigLowColor
<c>set graphattr Color1 YellowGreenMedium4
<c>set graphattr NoConObstacle 1

</topic>

<topic>gecmd_command
Kommandon

Nedan följer beskrivning på kommandon i Ge

add 			<link>gecmd_add
  <t>add polyline 	<link>gecmd_add_polyline
create 			<link>gecmd_create
  <t>create rectangle 	<link>gecmd_create_rect
  <t>create arc 	<link>gecmd_create_arc
  <t>create line 	<link>gecmd_create_line
  <t>create polyline 	<link>gecmd_create_polyline
  <t>create rectangle 	<link>gecmd_create_rect
  <t>create text 	<link>gecmd_create_text
  <t>create subgraph 	<link>gecmd_create_subgraph
exit 			<link>gecmd_exit
filter navigator	<link>gecmd_filter_navigator
group 			<link>gecmd_group
move 			<link>gecmd_move
  <t>move currentobject	<link>gecmd_move_currentobject
  <t>move selectedobject <link>gecmd_move_selectedobject
new 			<link>gecmd_new
open 			<link>gecmd_open
quit 			<link>gecmd_quit
replace 		<link>gecmd_replace
rotate 			<link>gecmd_rotate
  <t>rotate currentobject <link>gecmd_rotate_current
  <t>rotate selectedobject <link>gecmd_rotate_selected
save 			<link>gecmd_save
scale 			<link>gecmd_scale
  <t>scale currentobject <link>gecmd_scale_current
  <t>scale selectedobject <link>gecmd_scale_selected
search object 		<link>gecmd_search_object
select 			<link>gecmd_select
  <t>select currentobject <link>gecmd_select_currentobject
  <t>select clear	<link>gecmd_select_clear
set 			<link>gecmd_set
  <t>set verify		<link>gecmd_set_verify
  <t>set noverify	<link>gecmd_set_noverify
  <t>set fill 		<link>gecmd_set_fill
  <t>set nofill		<link>gecmd_set_nofill
  <t>set border		<link>gecmd_set_border
  <t>set noborder	<link>gecmd_set_noborder
  <t>set shadow		<link>gecmd_set_shadow
  <t>set noshadow	<link>gecmd_set_noshadow
  <t>set grid		<link>gecmd_set_grid
  <t>set nogrid		<link>gecmd_set_nogrid
  <t>set linewidth	<link>gecmd_set_linewidth
  <t>set gridsize	<link>gecmd_set_gridsize
  <t>set textsize	<link>gecmd_set_textsize
  <t>set textfont	<link>gecmd_set_textfont
  <t>set bold		<link>gecmd_set_bold
  <t>set nobold		<link>gecmd_set_nobold
  <t>set backgroundcolor <link>gecmd_set_backgroundcolor
  <t>set fillcolor	<link>gecmd_set_fillcolor
  <t>set bordercolor	<link>gecmd_set_bordercolor
  <t>set textcolor	<link>gecmd_set_textcolor
  <t>set currentobject fillcolor <link>gecmd_set_current_fillcolor
  <t>set currentobject colortone <link>gecmd_set_current_colortone
  <t>set currentobject colorlightness <link>gecmd_set_current_colorlightness
  <t>set currentobject colorintensity <link>gecmd_set_current_colorintensity
  <t>set currentobject colorshift <link>gecmd_set_current_colorshift
  <t>set currentobject gradient <link>gecmd_set_current_gradient
  <t>set currentobject attributes <link>gecmd_set_current_attributes
  <t>set currentobject annotation <link>gecmd_set_current_annotation
  <t>set graphattributes <link>gecmd_set_graphattributes
show 			<link>gecmd_show
  <t>show version <link>gecmd_show_version
</topic>

<headerlevel>
<topic>gecmd_add <style>function
add
</topic>

<topic>gecmd_add_polyline
add polyline

Adderar en punkt till senast skapade polyline.
En polyline skapas med 'create polyline' som också skapar den första del-linjen. Övriga 
del-linjer skapas med 'add polyline'.

<b>Syntax

<c>ge> add polyline /x1= /y1=

/x1 <t>x-koordinat för den adderade del-linjen.
/y1 <t>y-koordinat för den adderade del-linjen.
</topic>

<topic>gecmd_create <style>function
create

Skapa grafiska element i bilden.
</topic>

<topic>gecmd_create_rect
create rectangle

Skapar en rektangel.

<b>Syntax

<c>ge> create rectangel /x1= /y1= /width= /height=

/x1 <t>x-koordinat för övre vänstra hörnet.
/y1 <t>y-koordinat för övre vänstra hörnet.
/widht <t>Rektangelns bredd.
/height <t>Rektangelns höjd.
</topic>

<topic>gecmd_create_arc
create arc

Skapa en cikel eller oval, eller ett segment av en cirkel eller oval.

<b>Syntax

<c>ge> create arc /x1= /y1= /x2= /y2= /angle1= /angle2=

/x1 <t>x-koordinat för övre vänstra hörnet för den rektangel som omsluter ovalen.
/y1 <t>y-koordinat för övre vänstra hörnet för den rektangel som omsluter ovalen.
/x2 <t>x-koordinat för nedre högra hörnet för det rektangel som omsluter ovalen.
/y2 <t>y-koordinat för nedre högra hörnet för den rektangel som omsluter ovalen.
/angle1 <t>Vinkel som beskriver var ett cirkel-segment startar. Anges i grader. 
    <t>Default-värde 0.
/angle2 <t>Vinkel i grader som anger storleken på ett cirkel-segment. Default-värde 
    <t>360 grader.
</topic>

<topic>gecmd_create_line
create line

Skapa en rät linje mellan två punkter.

<b>Syntax

<c>ge> create line /x1= /y1= /x2= /y2=

/x1 <t>x-koordinat för den första änd-punkten.
/y1 <t>y-koordinat för den första änd-punkten.
/x2 <t>x-koordinat för den andra änd-punkten.
/y2 <t>y-koordinat för den andra ändpunkten.
</topic>

<topic>gecmd_create_polyline
create polyline

Skapa en polylinje, dvs en linje som består av flera räta del-linjer.
'create polyline' skapar den första del-linjen. Övriga del-linjer skapas med 'add polyline'. Punkten (x1, y1) är startpunkten för polylinjen. Nästa del-linje hakas på punken (x2, y2).

<b>Syntax

<c>ge> create polyline /x1= /y1= /x2= /y2=
<c>ge> add polyline /x1= /y1=
<c>ge> add polyline /x1= /y1=
<c>ge> ...

/x1 <t>x-koordinat för start-punkten.
/y1 <t>y-koordinat för start-punkten.
/x2 <t>x-koordinat för första del-linjens änd-punkt.
/y2 <t>y-koordinat för första del-linjens änd-punkt.
</topic>

<topic>gecmd_create_text
create text

Skapa en text.

<b>Syntax

<c>ge> create text /x1= /y1= /text=

/x1 <t>x-koordinat.
/y1 <t>y-koordinat.
/text <t>Text omgärdad av dubbel-fnuttar.
</topic>

<topic>gecmd_create_subgraph
create subgraph
Skapar ett subgraf-objekt.

<b>Syntax

<c>ge> create subgraph /x1= /y1= /subgraph= [/x2= /y2=]

/x1 <t>x-koordinat för övre vänstra hörnet.
/y1 <t>y-koordinat för övre vänstra hörnet.
/subgraph <t>Namnet på subgrafen. Om subgrafet tillhör ProviewR's bassystem har 
    <t>subgrafen alltid prefixet 'pwr_' och skrivs med gemener, dvs subgrafen 
    <t>'Valve' har  namnet pwr_valve.
/x2 <t>Om punkten (x2, y2) anges skalas subgrafen så att den innesluts i 
    <t>rektangeln med hörnpunkterna (x1,y1) och (x2, y2).
/y2
</topic>

<topic>gecmd_exit
exit

Avsluta ge och spara aktuell graf först.

<b>Syntax

<c>ge> exit ['filename']
</topic>

<topic>gecmd_filter_navigator
filter navigator

Filtrera objekt i objektsnavigatorn.
Filtrering kan göras på objektsnamn eller subgraf med wildcard.

<b>Syntax

<c>ge> filter navigator /type= /pattern=
<c>ge> filter navigator /reset

/reset   <t>Återställer filtreringen och visar alla objekt.
/type    <t>'name' eller 'class'. Name filtrerar på objektsnamn
         <t>och class på subgraf.
/pattern <t>Filter mönster. Kan innehålla wildcard (*).

<b>Exempel
<c>ge> filter navigator /type=class /pattern=*button*
</topic>

<topic>gecmd_group <style>function
group

Skapa en grupp av utvalda objekt.

</topic>

<topic>gecmd_move <style>function
move

</topic>

<topic>gecmd_move_currentobject
move currentobject

Flyttar senast skapade objekt.

<b>Syntax

<c>ge> move currentobject /x= /y=
<c>ge> move currentobject /absx= /absy=

/x <t>Förflyttning i x-led relativt tidigare position.
/y <t>Förflyttning i y-led relativt tidigare position.
/absx <t>Förflyttning i x-led till absolut position.
/absy <t>Förflyttning i y-led till absolut position.
</topic>

<topic>gecmd_move_selectedobject
move selectedobject

Flyttar utvalt objekt.

<b>Syntax

<c>ge> move selectedobject /x= /y=
<c>ge> move selectedobject /absx= /absy=

/x <t>Förflyttning i x-led relativt tidigare position.
/y <t>Förflyttning i y-led relativt tidigare position.
/absx <t>Förflyttning i x-led till absolut position.
/absy <t>Förflyttning i y-led till absolut position.
</topic>

<topic>gecmd_new <style>function
new

Rensar arbetsarean.
</topic>

<topic>gecmd_open
open

Öppna en graf.

<b>Syntax

<c>ge> open ['filename']
</topic>

<topic>gecmd_quit
quit

Avsluta utan att spara.

<b>Syntax

<c>ge> quit
</topic>

<topic>gecmd_replace
replace attribute

Sträng utbyte i dynamic och actino för utvalda object.

<b>Syntax

<c>ge> replace attribute /from= /to= [/strict]

/from <t>Sträng som ska bytas ut.
/to   <t>Ersättnings sträng.
/strict <t>Sökning efter 'from' sträng skiljer mellan stora och små bokstäver.
</topic>

<topic>gecmd_rotate
rotate
</topic>

<topic>gecmd_rotate_current
rotate currentobject

Roterar senast skapade objekt runt objektets mittpunkt.

<b>Syntax

<c>ge> rotate currentobject /angle=

/angle <t>Vinkel i grader som objektet ska roteras.
</topic>

<topic>gecmd_rotate_selected
rotate selectedobject

Roterar utvalt objekt runt objektets mittpunkt.

<b>Syntax

<c>ge> rotate selectedobject /angle=

/angle <t>Vinkel i grader som objektet ska roteras.
</topic>

<topic>gecmd_save
save

Sparar en graf.

<b>Syntax

<c>ge> save ['filename']
</topic>

<topic>gecmd_scale
scale
</topic>

<topic>gecmd_scale_current
scale currentobject

Skalar om senast skapade objekt.

<b>Syntax

<c>ge> scale currentobject /scalex= /scaley= [/x= /y=]

/scalex <t>Skalfaktor i x-led
/scaley <t>Skalfaktor i y-led.
/x <t>x-koordinat för skalningens referenspunkt.
/y <t>y-koordinat för skalningens referenspunkt.
</topic>

<topic>gecmd_scale_selected
scale selectedobject

Skalar om utvalt objekt.

<b>Syntax

<c>ge> scale selectedobject /scalex= /scaley= [/x= /y=]

/scalex <t>Skalfaktor i x-led
/scaley <t>Skalfaktor i y-led.
/x <t>x-koordinat för skalningens referenspunkt.
/y <t>y-koordinat för skalningens referenspunkt.
</topic>

<topic>gecmd_search_object
search object

Sök efter ett objekt.
När sökningen är gjord väljs det hittade objektet ut.

<b>Syntax

<c>ge> search object /name=

/name <t>Objeksnamn.
</topic>
<topic>gecmd_select <style>function
select
</topic>

<topic>gecmd_select_currentobject
select currentobject

Lägger in senast skapade objekt i listan av utvalda objekt.
</topic>

<topic>gecmd_select_clear <style>function
select clear
Tömmer listan på utvalda objekt.
</topic>

<topic>gecmd_set <style>function
set
</topic>

<topic>gecmd_set_verify
set verify
Sätter verifierings-mod, dvs att exekverade script-rader skrivs ut i terminal-fönster.
</topic>

<topic>gecmd_set_noverify
set noverify
Avslutar verifierings-mod.
</topic>

<topic>gecmd_set_fill
set fill
Sätter 'fill' i editorn. Skapade objekt kommer i forsättningen att ha fill-attributet satt.
</topic>

<topic>gecmd_set_nofill
set nofill
Återställer 'fill' i editorn. Skapade objekt kommer i fortsättningen att ha fill-attributet 
nollställt.
</topic>

<topic>gecmd_set_border
set border
Sätter 'border' i editorn. Skapade objekt kommer i fortsättningen att ha border-attributet satt.
</topic>

<topic>gecmd_set_noborder
set noborder
Återställer 'border' i editorn. Skapade objekt kommer i fortsättningen att ha border-attributet
nollställt.
</topic>

<topic>gecmd_set_grid
set grid

Sätter 'grid' i editorn. Skapade objekt läggs på närmaste grid-punkt.
</topic>

<topic>gecmd_set_nogrid
set nogrid

Återställer grid i editorn.
</topic>

<topic>gecmd_set_linewidth
set linewidth

Sätter linjebredd i editorn. Skapade objekt kommer i forsättningen att skapas med angiven 
linjebredd. Linjebredden han ha ett värde mellan 1 och 8.

<b>Syntax

<c>ge> set linewidth 'linewidth'
</topic>

<topic>gecmd_set_gridsize
set gridsize

Sätter gridstorleken i editorn.

<b>Syntax

<c>ge> set gridsize 'gridsize'
</topic>

<topic>gecmd_set_textsize
set textsize

Sätter 'textsize' i editorn. Alla textobjekt kommer i fortsättning att skapas med denna 
textstorlek. Textstorleken kan vara 8, 10, 12, 14, 18 eller 24.

<b>Syntax

<c>ge> set textsize 'textsize'
</topic>

<topic>gecmd_set_textfont
set textfont

Sätter typsnitt i editorn. Alla textobjekt kommer i fortsättning att skapas med detta
typsnitt. Typsnittet kan vara 'Helvetica', 'Times', 'New Century Schoolbook', 'Curier' 
eller 'LucidaSans'.

<b>Syntax

<c>ge> set textfont 'font'
</topic>

<topic>gecmd_set_bold
set bold

Sätter 'bold' i editorn. Textobjekt kommer i fortsättningen att skapas med fet-stil
</topic>

<topic>gecmd_set_nobold
set nobold

Återställer 'bold'.
</topic>

<topic>gecmd_set_backgroundcolor
set backgroundcolor

Sätter bakgrundfärgen.

<b>Syntax

<c>ge> set backgroundcolor 'color'
</topic>

<topic>gecmd_set_fillcolor
set fillcolor

Sätter fyllnadsfärg i färg-paletten. Objekt kommer i fortsättningen att skapas med denna 
fyllnadsfärg.

<b>Syntax

<c>ge> set fillcolor 'color'
</topic>

<topic>gecmd_set_bordercolor
set bordercolor

Sätter kantfärgen i färg-paletten. Objekt kommer i fortsättningen att skapas med denna kantfärg,

<b>Syntax

<c>ge> set bordercolor 'color'
</topic>

<topic>gecmd_set_textcolor
set textcolor

Sätter textfärgen i färg-paletten. text-objekt kommer i fortsättningen att skapas med denna 
textfärg,

<b>Syntax

<c>ge> set textcolor 'color'
</topic>

<topic>gecmd_set_current_fillcolor
set currentobject fillcolor

Sätter fyllnadsfärg på senast skapade subgraf-objekt.

<b>Syntax

<c>ge> set currentobject fillcolor 'color'
</topic>

<topic>gecmd_set_current_colortone
set currentobject colortone

Sätter färgton på senast skapade subgraf-objekt.

<b>Syntax

<c>ge> set currentobject colortone 'tone'
</topic>

<topic>gecmd_set_current_colorlightness
set currentobject colorlightness

Sätter ljushet på senast skapade subgraf-objekt. Ljusheten är ett heltal. Positivt värde ger 
ljusare färger, negativt mörkare färger.

<b>Syntax

<c>ge> set currentobject colorlightness 'lightness'
</topic>

<topic>gecmd_set_current_colorintensity
set currentobject colorintensity

Sätter färgintensitet på senast skapade subgraf-objekt. Intensiteten är ett heltal. Positivt 
värde ger intensivare färger, negativt dassigare färger.

<b>Syntax

<c>ge> set currentobject colorintensity 'intensity'

</topic>

<topic>gecmd_set_current_colorshift
set currentobject colorshift

Skiftar färgen på senaste skapade subgraf. Färgtonerna i subgrafen roteras på färgcirkeln, men 
färgerna behåller sin inbördes färgkontrast. Colorshift är ett heltal som anger hur många steg 
som färgen ska shiftas. Positivt värde roterar i riktning gult -> guld -> orange -> röd -> 
magenta -> blå -> turkos -> grön -> gul. Negativt i motsatt riktning.

<b>Syntax

<c>ge> set currentobject colorshift 'shift'
</topic>

<topic>gecmd_set_current_gradient
set currentobject gradient

Sätter färg-gradient på senast skapade object.
Gradienten kan vara No, 
HorizontalUp, HorizontalDown, HorizontalTube1, HorizontalTube2,
VerticalLeft, VerticalRight, VerticalTube1, VerticalTube2, 
DiagonalUpperLeft, DiagonalLowerLeft, DiagonalUpperRight, DiagonalLowerRight, 
DiagonalUpTube, DiagonalDownTube, 
Globe, RadialCenter, 
RadialUpperLeft, RadialLowerLeft, RadialUpperRight or RadialLowerRight.

<b>Syntax

<c>ge> set currentobject gradient 'gradient'
</topic>

<topic>gecmd_set_current_attributes
set currentobject attributes
Sätter attribut för senast skapade subgraf.

<b>Syntax

<c>ge> set currentobject attributes 'attrname' 'value'

Attributens namn beror på vilken typ av dynamik som är angiven för subgrafen. Typen av dynamik 
måste sättas först, därefter kan övriga attribut för denna dynamiktyp sättas.

I Ge Användarhandledning finns beskrivet vilka attribut som finns för olika typer av dynamik.

Attribut av en uppräknings-typ, dvs man kan välja en av flera alternativ, sätt värdet tilll 
namnet på uppräkningsvärdet, t ex

<c> set currentobject attr Cycle Slow

Attribut av typ bitmask, där man kan välja flera alternativ, anges namnen för aternativen
åtskilda av '|', t ex

<c> set currentobject attr Action ToggleDig|Confirm|Tooltip
<c> set currentobject attr DigColor.Instances 2|3|4


<b>Exempel
<c> set currentobject attr Cycle Fast
<c> set currentobject attr DynType1 DigColor|DigWarning|DigError
<c> set currentobject attr Action Tooltip|OpenGraph
<c> set currentobject attr DigColor.Instances 2|3
<c> set currentobject attr DigColor3.Attribute H1-Dv3##Boolean
<c> set currentobject attr DigColor3.Color MagentaHigh3
<c> set currentobject attr DigColor2.Attribute H1-Dv2##Boolean
<c> set currentobject attr DigColor2.Color OrangeHigh4
<c> set currentobject attr DigColor.Attribute H1-Dv1##Boolean
<c> set currentobject attr DigColor.Color BlueHigh3
<c> set currentobject attr DigError.Attribute H1-Dv4##Boolean
<c> set currentobject attr DigWarning.Attribute H1-Dv5##Boolean
<c> set currentobject attr OpenGraph.GraphObject Nodes-MyNode-Op-Overview
<c> set currentobject attr ToolTip.Text "Temperature switch indicator"

</topic>

<topic>gecmd_set_current_annotation
set currentobject annotation

Lägger in en sträng i annotation-fältet på senast skapade subgraf. Texten läggs in i annotation
nr 1.

<b>Syntax

<c>ge> set currentobject annotation 'text'
</topic>

<topic>gecmd_set_graphattributes
set graphattributes

Sätter attribute för aktuell graf (eller subgraf).

<b>Graf attribut

<b>Namn  <t>Typ
subgraph <t>Boolean
x0  <t>Float
y0  <t>Float
x1  <t>Float
y1  <t>Float
ScanTime <t>Float
AnimationScanTime <t>Float
JavaWidth <t>Float
IsJavaApplet <t>Boolean
IsJavaFrame <t>Boolean
BackgroundImage <t>String
BackgroundIiled <t>Boolean
DoubleBuffered <t>Boolean
MB3Action <t>Enumeration: No, Close, PopupMenu or Both
Translate <t>Boolean
BitmapFonts <t>Boolean
HotIndication <t>Enumeration: No, LineWidth, DarkColor or LightColor
TooltipTextsize <t>Integer
AppMotion <t>Enumeration: Scroll, Slider or Both

<b>Subgraf attribut

<b>Namn <t>Typ
DynType1 <t>Mask: Inherit, Tone, DigLowColor, DigColor, AnalogColor, 
         <t>StatusColor, DigWarning, DigError, DigFlash, FillLevel, 
         <t>Invisible, DigBorder, DigText, Valule, Rotate, Move, AnalogShift,
         <t>DigShift, Animation, Bar, Trend, FastCurve, XY_Curve, SliderBackground,
         <t>Video, Table, HostObject, DigSound, DigCommand
DynType2 <t>Mask: DigTextColor, TimeoutColor
Action <t>Mask: Inherit, PopupMenu, SetDig, ResetDig, ToggleDig, StoDig,
       <t>SetValue, Command, CommandDoubleClick, Help, OpenGraph, CloseGraph,
       <t>OpenURL, Confirm, IncrAnalog, RadioButton, ValueInput, ToolTip,
       <t>InputFocus, PulldownMenu, OptionMenu, MethodPulldownMenu, Slider
Color1 <t>A color or color tone
Color2 <t>A color or color tone
AnimSequence <t>Enumeration: Cyclic, Dig or ForwBack
NoConObstacle <t>Boolean
Slider <t>Boolean
NextSubgraph <t>String
AnimationCount <t>Int
JavaName <t>String
Cycle <t>Enumeration: Fast or Slow
x0    <t>Float
y0    <t>Float
x1    <t>Float
y1    <t>Float
InputFocusMark <t>Enumeration: Relief or No.
RecursiveDynamic <t>Boolean

<b>Syntax

<c>ge> set graphattributes 'name' 'value'

<b>Exempel graf
<c> set graphattributes x0 0
<c> set graphattributes y0 0
<c> set graphattributes x1 15
<c> set graphattributes y1 20
<c> set graphattributes DoubleBuffered 1
<c> set graphattributes MB3Action PopupMenu
<c> set graphattributes TooltipTextsize 14

<b>Exempel subgraf
<c> set graphattributes Subgraph 1
<c> set graphattributes DynType1 DigLowColor|DigWarning|DigError
<c> set graphattributes Action PopupMenu|OpenGraph
<c> set graphattributes Color1 GrayLow9
<c> set graphattributes Cycle Fast
</topic>

<topic>gecmd_show
show
</topic>

<topic>gecmd_show_version
show version

Visa Ge-version.
</topic>
</headerlevel>
</chapter>

<chapter>
<topic>gecmd_script
Script

Ge-script är ett sätt att programmera ge-kommandon. Scripthanteraren ger dessutom möjlighet 
till att göra beräkningar, utföra vilkors-satser, loop-satser, deklarerara varibler och 
funktioner.

Ett script startas med '@' följt av scriptfils namnet och eventuella argument.

Ett ge-script bör ha filtypen .ge_com.

<b>Exempel

<c>ge> @my_script

I pwr_cmd Användarhandledning finns en beskrivning på scriptspråket och beskrivning på inbyggda
funktioner. Här följer en lista på de inbyggda funktioner som även kan användas i Ge-script.

<h2>Ge funktioner
<b>Funktion <t><t>Beskrivning
BuildGraph <t><t>Bygg aktuell graph .<link>BuildGraph()
ClearAll <t><t>Ta bort alla objekt i grafen.<link>ClearAll()
CreateArc <t><t>Skapa ett Arc objekt.<link>CreateArc()
CreateAxis <t><t>Skapa ett Axis objekt.<link>CreateAxis()
CreateAxisArc <t><t>Skapa ett AxisArc objekt.<link>CreateAxisArc()
CreateBar <t><t>Skapa ett Bar objekt.<link>CreateBar()
CreateBarArc <t><t>Skapa ett BarArc objekt.<link>CreateBarArc()
CreateDsTrend <t><t>Skapa ett DsTrend objekt.<link>CreateDsTrend()
CreateDsTrendCurve <t><t>Skapa ett DsTrendCurve objekt.<link>CreateDsTrendCurve()
CreateFastCurve <t><t>Skapa ett FastCurve objekt.<link>CreateFastCurve()
CreateImage <t><t>Skapa ett Image objekt.<link>CreateImage()
CreateLine <t><t>Skapa ett Line objekt.<link>CreateLine()
CreateObject <t><t>Skapa ett subgraph objekt.<link>CreateObject()
CreatePie <t><t>Skapa ett Pie objekt.<link>CreatePie()
CreatePolyLine <t><t>Skapa ett PolyLine objekt.<link>CreatePolyLine()
CreateRectangle <t><t>Skapa ett Rectangle objekt.<link>CreateRectangle()
CreateRecRounded <t><t>Skapa ett rounded recangle objekt.<link>CreateRectRounded()
CreateSevHist <t><t>Skapa ett SevHist objekt.<link>CreateSevHist()
CreateText <t><t>Skapa ett Text objekt.<link>CreateText()
CreateTrend <t><t>Skapa ett Trend objekt.<link>CreateTrend()
CreateXYCurve <t><t>Skapa ett XYCurve objekt.<link>CreateXYCurve()
DashInsertObject <t><t>Addera ett object till en DashCell.<link>DashInsertObject()
DeleteObject <t><t>Ta bort ett objekt.<link>DeleteObject()
GetCurrentObject <t><t>Returnerar identiteten för senast skapade objekt.<link>GetCurrentObject()
GetFirstObject <t><t>Hämta första objekt. <link>GetFirstObject()
GetGraphName <t><t>Hämta name på nuvarande graf. <link>GetGraphName()
GetNextObject <t><t>Hämta nästa objekt. <link>GetNextObject()
GetObjectAttribute <t><t>Hämta ett attributvärde för ett objekt. <link>GetObjectAttribute()
GetObjectBorder <t><t>Hämta kant för ett objekt. <link>GetObjectBorder()
GetObjectBorderColor <t><t>Hämta kantfärg för ett objekt. <link>GetObjectBorderColor()
GetObjectClass <t><t>Hämta klass för ett objekt. <link>GetObjectClass()
GetObjectDynType <t><t>Hämta dynamik- och aktions-typ för ett objekt. <link>GetObjectDynType()
GetObjectFill <t><t>Hämta fyllnad för ett objekt. <link>GetObjectFill()
GetObjectFillColor <t><t>Hämta fyllnadsfärg för ett objekt. <link>GetObjectFillColor()
GetObjectGradient <t><t>Hämta gradient för ett objekt. <link>GetObjectGradient()
GetObjectName <t><t>Hämta namn på ett objekt. <link>GetObjectName()
GetObjectShadow <t><t>Hämta skuggning på ett objekt. <link>GetObjectShadow()
GetObjectText <t><t>Hämta text för ett objekt. <link>GetObjectText()
GetObjectTextColor <t><t>Hämta textfärg för ett objekt. <link>GetObjectTextColor()
GetObjectType <t><t>Hämta typ för ett objekt. <link>GetObjectType()
GetRgbColor <t><t>Hämta rgb-värden för en färg. <link>GetRgbColor()
GetTextExtent <t><t>Beräkna storleken på en text. <link>GetTextExtent()
GroupGetFirstObject <t><t>Hämta första objektet i en grupp. <link>GroupGetFirstObject()
GroupGetNextObject <t><t>Hämta nästa objekt i en grupp. <link>GroupGetNextObject()
GroupSelected <t><t>Gruppera utvalda objekt. <link>GroupSelected()
MeasureObject <t><t>Hämta ett objekts utbredning. <link>MeasureObject()
MoveAbsObject <t><t>Flytta ett objekt till en position. <link>MoveAbsObject()
MoveObject <t><t>Flytta ett objekt ett visst avstånd. <link>MoveObject()
OpenGraph <t><t>Öppna en graph. <link>OpenGraph()
PolyLineAdd <t><t>Addera ett segment till en PolyLine.<link>PolyLineAdd()
Reload <t><t>Läs in innevarande graph från fil. <link>Reload()
RotateSelected <t><t>Roterar utvalda objekt. <link>RotateSelected()
SaveGraph <t><t>Spara innevarande graph. <link>SaveGraph()
ScaleObject <t><t>Skala ett objekt. <link>ScaleObject()
SelectAdd <t><t>Addera objekt till utvalslistan. <link>SelectAdd()
SetBackgroundColor <t><t>Sätt bakgrundsfärg i aktuell graph. <link>SetBackgroundColor()
SetColorTheme <t><t>Sätt färgtema. <link>SetColorTheme()
SetCurrentObject <t><t>Sätt CurrentObject. <link>SetCurrentObject()
SetDraw <t><t>Sätt ritning till eller från. <link>SetDraw()
SetExtern <t><t>Sätt en subgraf extern. <link>SetExtern()
SetExternAll <t><t>Sätt alla subgrafer extern. <link>SetExternAll()
SetIntern <t><t>Sätt en subgraf intern. <link>SetIntern()
SetInternAll <t><t>Sätt alla subgrafer intern. <link>SetInternAll()
SetGraphName <t><t>Sätt namn på aktuell graph. <link>SetGraphName()
SetObjectAttribute <t><t>Sätt värde på ett attribut för ett objekt. <link>SetObjectAttribute()
SetObjectBackgroundColor <t><t>Sätt bakgrundsfärg på ett objekt. <link>SetObjectBackgroundColor()
SetObjectBorder <t><t>Sätt kant på ett objekt. <link>SetObjectBorder()
SetObjectBorderColor <t><t>Sätt kantfärg på ett objekt. <link>SetObjectBorderColor()
SetObjectFill <t><t>Sätt fyllnad på ett objekt. <link>SetObjectFill()
SetObjectFillColor <t><t>Sätt fyllnadsfärg på ett objekt. <link>SetObjectFillColor()
SetObjectGradient <t><t>Sätt gradient på ett objekt. <link>SetObjectGradient()
SetObjectShadow <t><t>Sätt skuggning på ett objekt. <link>SetObjectShadow()
SetObjectTextColor <t><t>Sätt textfärg på ett objekt. <link>SetObjectTextColor()
SetRgbColor <t><t>Sätt rgb-värden för en färg. <link>SetRgbColor()
SetSelectTextBold <t><t>Sätt fet text på utvalda objekt. <link>SetSelectTextBold()
SetSelectTextFont <t><t>Sätt typsnitt på utvalda objekt. <link>SetSelectTextFont()
SetSelectTextSize <t><t>Sätt textstorlek på utvalda objekt. <link>SetSelectTextSize()

<h2>In och utmatning
<b>Funktion <t>Beskrivning
ask <t>Skriver ut en fråga och läser in ett svar
say <t>Skriver ut en sträng
printf <t>Formaterad utskrift
scanf  <t>Formaterad inläsning

<h2>Filhantering
<b>Funktion <t>Beskrivning
fclose <t>Stäng en fil
felement <t>Hämta ett element ur den med fgets senaste lästa raden.
fgets <t>Läsning av en rad från fil
fopen <t>Öppna en fil
fprintf <t>Formaterad skrivning på fil
fscanf <t>Formaterad läsning frän fil
translate_filename <t>Byt ur miljövariabler i ett filnamn.

<h2>Hantering av strängar
<b>Funktion <t>Beskrivning
edit <t>Rensa bort space och tabbar i början och i slutet av en sträng, 
     <t>samt ta bort multipla space och tabbar i strängen
element <t>Hämta ett element i en sträng
extract <t>Hämta ett antal tecken i en sträng
sprintf <t>Formaterat skrivning i en sträng-variabel.
strchr <t>Leta efter första förekomsten av ett tecken i en sträng
strlen <t>Längden av en sträng
strrchr <t>Leta efter sista förekomsten av ett tecken i en sträng
strstr <t>Leta efter första förekomsten av en teckensekvens i en sträng
tolower <t>Konvertera till gemener
toupper <t>Konvertera till versaler

<h2>Databas funktioner
<b>Funktion <t>Beskrivning
CutObjectName <t>Hämta de sista segmenten i ett objektsnamn
GetAttribute <t>Hämta ett attribut
GetChild <t>Hämta första barnet till ett objekt
GetNextSibling <t>Hämta nästa syskon till ett objekt
GetNextVolume <t>Hämta nästa volym
GetParent <t>Hämta förälder till ett objekt
GetObjectClass <t>Hämta klassen till ett objekt
GetRootList <t>Hämta första objekt i rot-listan
GetVolumeClass <t>Hämta klassen för en volym

<h2>System funktioner
<b>Funktion <t>Beskrivning
exit <t>Avsluta exekveringen av ett skript
time <t>Hämta systemtiden
system <t>Exekvera ett shell kommando
verify <t>Sätt verify på eller av

<option> printdisable
<h2>Fördefinierade variabler
Det finns ett antal fördefinierade variabler för

Objekttyper <link> gecmd_variables,objecttypes
Dynamik och aktionstyper <link> gecmd_variables,dyntypes
Fonter <link> gecmd_variables,fonts
Riktning <link> gecmd_variables,directions
Färger <link> gecmd_variables,colors
Access <link> gecmd_variables,access
<option> printenable

</topic>

<topic> gecmd_variables
Fördefinerade variabler

<h2>Objekttyper <bookmark> objecttypes
eObjectType_Rect
eObjectType_Line
eObjectType_Arc
eObjectType_ConPoint
eObjectType_Annot
eObjectType_PolyLine
eObjectType_SubGraph
eObjectType_Text
eObjectType_Bar
eObjectType_Trend
eObjectType_Slider
eObjectType_Image
eObjectType_Group
eObjectType_Axis
eObjectType_RectRounded
eObjectType_ConGlue
eObjectType_Menu
eObjectType_Window
eObjectType_Table
eObjectType_Folder
eObjectType_XYCurve
eObjectType_AxisArc
eObjectType_Pie
eObjectType_BarChart
eObjectType_Toolbar

<h2>Dynamik och actionstyper <bookmark> dyntypes
<b>DynType1
mDynType1_No
mDynType1_Inherit
mDynType1_Tone
mDynType1_DigLowColor
mDynType1_DigColor
mDynType1_DigError
mDynType1_DigWarning
mDynType1_DigFlash
mDynType1_Invisible
mDynType1_DigBorder
mDynType1_DigText
mDynType1_Value
mDynType1_AnalogColor
mDynType1_Rotate
mDynType1_Move
mDynType1_AnalogShift
mDynType1_DigShift
mDynType1_Animation
mDynType1_Bar
mDynType1_Trend
mDynType1_SliderBackground
mDynType1_Video
mDynType1_FillLevel
mDynType1_FastCurve
mDynType1_AnalogText
mDynType1_Table
mDynType1_StatusColor
mDynType1_HostObject
mDynType1_DigSound
mDynType1_XY_Curve
mDynType1_DigCommand
mDynType1_Pie
mDynType1_BarChart

<b>DynType2
mDynType2_No
mDynType2_Axis
mDynType2_DigTextColor
mDynType2_TimeoutColor
mDynType2_DigFourShift
mDynType2_ScrollingText
mDynType2_ColorThemeLightness
mDynType2_DigBackgroundColor

<b>ActionType1
mActionType1_No
mActionType1_Inherit
mActionType1_PopupMenu
mActionType1_SetDig
mActionType1_ResetDig
mActionType1_ToggleDig
mActionType1_StoDig
mActionType1_Command
mActionType1_CommandDoubleClick
mActionType1_Confirm
mActionType1_IncrAnalog
mActionType1_RadioButton
mActionType1_Slider
mActionType1_ValueInput
mActionType1_TipText
mActionType1_Help
mActionType1_OpenGraph
mActionType1_OpenURL
mActionType1_InputFocus
mActionType1_CloseGraph
mActionType1_PulldownMenu
mActionType1_OptionMenu
mActionType1_SetValue
mActionType1_MethodToolbar
mActionType1_MethodPulldownMenu
mActionType1_Script


<h2>Fonter <bookmark> fonts
eFont_Helvetica
eFont_Times
eFont_NewCenturySchoolbook
eFont_Courier
eFont_LucidaSans

<h2>Riktning <bookmark> directions
eDirection_Center
eDirection_Right
eDirection_Left
eDirection_Up
eDirection_Down

<h2>Colors <bookmark> colors
<b>Standardpalett
eDrawType_Color1 = 0
eDrawType_Color2 = 1
eDrawType_Color3 = 2
...
eDrawType_Color300 = 299

<b>Custom palett
eDrawType_CustomColor1 = 310
eDrawType_CustomColor2 = 314
eDrawType_CustomColor3 = 318
...
eDrawType_CustomColor90 = 666

</topic>

<topic>BuildGraph() <style>function
BuildGraph()
void BuildGraph()

<h2>Beskrivning
Bygg aktuell graph.

<b>Exempel
 
<c> BuildGraph();
</topic>

<topic>ClearAll() <style>function
ClearAll()
void ClearAll()

<h2>Beskrivning
Ta bort alla object i innevarande graph.

<b>Exempel
 
<c> ClearAll();
</topic>

<topic>CreateArc() <style>function
CreateArc()
int CreateArc(float x1, float y1, float x2, float y2, int angle1, int angle2)

<h2>Beskrivning
Skapa ett Arc objekt.

<h2>Argument

float <t>x1     <t>X koordinat för övre vänstra hörnet.
float <t>y1     <t>Y koordinat för övre vänstra hörnet.
float <t>x2     <t>X koordinat för nedre högra hörnet.
float <t>y2     <t>Y koordinat för nedre högra hörnet.
int   <t>angle1 <t>Startvinkel i grader. 0 är kl 3.
int   <t>angle2 <t>Segmentets utbredning i grader medsols från startvinkeln.

Returnerar objektets identitet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateArc(2.0, 2.0, 3.0, 3.0, 0, 180);
</topic>

<topic>CreateAxis() <style>function
CreateAxis()
int CreateAxis(float x1, float y1 [,float x2, float y2, int colortheme, int dynamic, int direction])

<h2>Beskrivning
Skapa ett axis objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.
int    <t>dynamic <t>Dynamisk axis (1) eller static (0). Optional.
int    <t>direction <t>Riktning upp, ner, vänster eller höger. Anges med
                 <t><t>symbolerna eDirection_Up, eDirection_Down,
                 <t><t>eDirection_Left och eDirection_Right. Optional.

Returnerar objektets identitet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateAxis(1.0, 1.0, 10.0, 2.0, 0, 0, eDirection_Down);
<c> SetObjectAttribute(id, "MaxValue", 100.0);
<c> SetObjectAttribute(id, "MinValue", -100.0);
</topic>

<topic>CreateAxisArc() <style>function
CreateAxisArc()
int CreateAxisArc(float x1, float y1 [,float x2, float y2, int colortheme, int dynamic])

<h2>Beskrivning
Skapa ett axis arc objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.
int    <t>dynamic <t>Dynamisk axis (1) eller static (0). Optional.

Returnerar objektets identitet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateAxisArc(1.0, 1.0, 5.0, 4.0, 0, 0);
<c> SetObjectAttribute(id, "MaxValue", 100.0);
<c> SetObjectAttribute(id, "MinValue", -100.0);
<c> SetObjectAttribute(id, "Angle1", -45);
<c> SetObjectAttribute(id, "Angle2", 270);
</topic>

<topic>CreateBar() <style>function
CreateBar()
int CreateBar(float x1, float y1 [,float x2, float y2, int colortheme, int direction])

<h2>Beskrivning
Skapa ett bar objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.
int    <t>direction <t>Riktning upp, ner, vänster eller höger. Anges med
                 <t><t>symbolerna eDirection_Up, eDirection_Down,
                 <t><t>eDirection_Left och eDirection_Right. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateBar(2.0, 2.0, 2.5, 5.0, 1, eDirection_Up);
<c> SetObjectAttribute(id, "Bar.Attribute", "H1-Av1.ActualValue##Float32");
<c> SetObjectAttribute(id, "Bar.MaxValue", 100.0);
<c> SetObjectAttribute(id, "Bar.MinValue", -100.0);
</topic>

<topic>CreateBarArc() <style>function
CreateBarArc()
int CreateBar(float x1, float y1 [,float x2, float y2, int colortheme])

<h2>Beskrivning
Skapa ett BarArc objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateBarArc(2.0, 2.0, 2.5, 5.0, 1);
<c> SetObjectAttribute(id, "Bar.Attribute", "H1-Av1.ActualValue##Float32");
<c> SetObjectAttribute(id, "BarArc.MaxValue", 100.0);
<c> SetObjectAttribute(id, "BarArc.MinValue", -100.0);
<c> SetObjectAttribute(id, "BarArc.Angle1", -45);
<c> SetObjectAttribute(id, "BarArc.Angle2", 270);
</topic>

<topic>CreateDsTrend() <style>function
CreateDsTrend()
int CreateDsTrend(float x1, float y1 [,float x2, float y2, int colortheme])

<h2>Beskrivning
Skapa ett DsTrend objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateDsTrend(2.0, 2.0, 7.0, 5.0, 1);
<c> SetObjectAttribute(id, "DsTrend.Object1", "H1-Trend1");
<c> SetObjectAttribute(id, "DsTrend.MaxValue1", 100.0);
<c> SetObjectAttribute(id, "DsTrend.MinValue1", -100.0);
<c> SetObjectAttribute(id, "DsTrend.ScanTime", 0.5);
</topic>

<topic>CreateDsTrendCurve() <style>function
CreateDsTrendCurve()
int CreateDsTrendCurve(float x1, float y1 [,float x2, float y2, int colortheme])

<h2>Beskrivning
Skapa ett DsTrendCurve objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateDsTrendCurve(2.0, 2.0, 7.0, 5.0, 1);
<c> SetObjectAttribute(id, "DsTrendCurve.Object", "H1-TrendCurve");
<c> SetObjectAttribute(id, "DsTrendCurve.MaxValue1", 100.0);
<c> SetObjectAttribute(id, "DsTrendCurve.MinValue1", -100.0);
<c> SetObjectAttribute(id, "DsTrendCurve.ScanTime", 0.5);
</topic>

<topic>CreateFastCurve() <style>function
CreateFastCurve()
int CreateFastCurve(float x1, float y1 [,float x2, float y2, int colortheme])

<h2>Beskrivning
Skapa ett FastCurve objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateFastCurve(2.0, 2.0, 7.0, 5.0, 1);
<c> SetObjectAttribute(id, "FastCurve.Object", "H1-FastCurve");
<c> SetObjectAttribute(id, "FastCurve.MaxValue1", 100.0);
<c> SetObjectAttribute(id, "FastCurve.MinValue1", -100.0);
</topic>

<topic>CreateImage() <style>function
CreateImage()
int CreateImage(string image, float x1, float y1 [,float x2, float y2])

<h2>Beskrivning
Skapa ett image objekt.

<h2>Argument

string <t>image <t>Image filnamn. Filen ska ligga på
                <t>$pwrp_exe eller $pwr_exe.
float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateImage("pwr_logofully.png", 2.0, 2.0);
</topic>

<topic>CreateLine() <style>function
CreateLine()
int CreateLine(float x1, float y1, float x2, float y2)

<h2>Beskrivning
Skapa en rät linje.
Färg, bredd och linjetyp hämtas från de aktuella inställningarna
i editorn.

<h2>Argument

float <t>x1     <t>X koordinat för startpunkten.
float <t>y1     <t>Y koordinat för startpunkten.
float <t>x2     <t>X koordinat för slutpunkten.
float <t>y2     <t>Y koordinat för slutpunkten.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateLine(2.0, 2.0, 3.0, 3.0);
</topic>

<topic>CreateObject() <style>function
CreateObject()
int CreateObject(string subgraph, float x1, float y1 [,float x2, float y2])

<h2>Beskrivning
Skapa ett subgraph objekt.

<h2>Argument

string <t>subgraph <t>Subgraph name.
float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateObject("pwr_valve", 2.0, 2.0);
</topic>

<topic>CreatePie() <style>function
CreatePie()
int CreatePie(float x1, float y1 [,float x2, float y2, int colortheme])

<h2>Description
Skapa ett Pie objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.

Returnerar identiteten på det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreatePie(2.0, 2.0, 2.5, 5.0, 1);
<c> SetObjectAttribute(id, "Pie.Sectors", 3);
<c> SetObjectAttribute(id, "Pie.FixRange", 1);
<c> SetObjectAttribute(id, "Pie.Attribute1", "H1-Av1.ActualValue##Float32");
<c> SetObjectAttribute(id, "Pie.Attribute2", "H1-Av2.ActualValue##Float32");
<c> SetObjectAttribute(id, "Pie.Attribute3", "H1-Av3.ActualValue##Float32");
<c> SetObjectAttribute(id, "Pie.MinValue", 0.0);
<c> SetObjectAttribute(id, "Pie.MaxValue", 300.0);
</topic>

<topic>CreatePolyLine() <style>function
CreatePolyLine()
int CreatePolyLine(float x1, float y1, float x2, float y2)

<h2>Beskrivning
Skapa första segmentet av en polyline. Efterföljande segment adderas
med PolyLineAdd().
Färg, bredd och linjetyp hämtas från de aktuella inställningarna i
editorn.

<h2>Argument

float <t>x1     <t>X koordinat för startpunkten.
float <t>y1     <t>Y koordinat för startpunkten.
float <t>x2     <t>X koordinat för slutpunkten.
float <t>y2     <t>Y koordinat för slutpunkten.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreatePolyLine(2.0, 2.0, 3.0, 3.0);
<c> PolyLineAdd(id, 4.0, 2.0);
<c> PolyLineAdd(id, 5.0, 3.0);
</topic>

<topic>CreateRectangle() <style>function
CreateRectangle()
int CreateRectangle(float x, float y, float width, float height)

<h2>Beskrivning
Skapa en rektangel.
Färg, fyllnad, kant och andra egenskapter hämtas från
de aktuella inställningarna i editorn.

<h2>Argument

float <t>x     <t>X koordinat för övre vänstra hörnet.
float <t>y     <t>Y koordinat för övre vänstra hörnet.
float <t>width <t>Rektangelns bredd.
float <t>height <t>Rektangelns höjd.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateRectangle(2.0, 2.0, 5.0, 3.0);
</topic>

<topic>CreateRectRounded() <style>function
CreateRectRounded()
int CreateRectRounded(float x, float y, float width, float height)

<h2>Beskrivning
Skapa en rektangel med rundade hörn.
Färg, fyllnad, kant och andra egenskapter hämtas från
de aktuella inställningarna i editorn.

<h2>Argument

float <t>x     <t>X koordinat för övre vänstra hörnet.
float <t>y     <t>Y koordinat för övre vänstra hörnet.
float <t>width <t>Rektangelns bredd.
float <t>height <t>Rektangelns höjd.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateRectRounded(2.0, 2.0, 5.0, 3.0);
</topic>

<topic>CreateSevHist() <style>function
CreateSevHist()
int CreateSevHist(float x1, float y1 [,float x2, float y2, int colortheme])

<h2>Beskrivning
Skapa ett SevHist objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateSevHist(2.0, 2.0, 7.0, 5.0, 1);
<c> SetObjectAttribute(id, "SevHist.Object1", "H1-Av1-Hist");
<c> SetObjectAttribute(id, "SevHist.MaxValue1", 100.0);
<c> SetObjectAttribute(id, "SevHist.MinValue2", -100.0);
<c> SetObjectAttribute(id, "SevHist.TimeRange", 120.0);
</topic>

<topic>CreateText() <style>function
CreateText()
int CreateText(string text, float x, float y)

<h2>Beskrivning
Skapa ett text objekt. Font, storlek, färg och andra egenskaper
hämtas från de aktuella inställningarna i editorn.

<h2>Argument

string <t>text <t>Text.
float  <t>x     <t>X koordinat.
float  <t>y     <t>Y koordinat.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateText("Start", 2.0, 2.0);
</topic>

<topic>CreateTrend() <style>function
CreateTrend()
int CreateTrend(float x1, float y1 [,float x2, float y2, int colortheme])

<h2>Beskrivning
Skapa ett Trend objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateTrend(2.0, 2.0, 7.0, 5.0, 1);
<c> SetObjectAttribute(id, "Trend.Attribute1", "H1-Av1.ActualValue##Float32");
<c> SetObjectAttribute(id, "Trend.MaxValue1", 100.0);
<c> SetObjectAttribute(id, "Trend.MinValue1", -100.0);
<c> SetObjectAttribute(id, "Trend.ScanTime", 0.5);
</topic>

<topic>CreateXYCurve() <style>function
CreateXYCurve()
int CreateXYCurve(float x1, float y1 [,float x2, float y2, int colortheme])

<h2>Beskrivning
Skapa ett XYCurve objekt.

<h2>Argument

float  <t>x1    <t>X koordinat för övre vänstra hörnet.
float  <t>y1    <t>Y koordinat för övre vänstra hörnet.
float  <t>x2    <t>X koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
float  <t>y2    <t>Y koordinat för nedre högra hörnet om objektet
                <t><t>ska skalas. Optional.
int    <t>colortheme <t>1 om färgtema färger ska användas, annars 0. Optional.

Returnerar id för det skapade objektet.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreateXYCurve(2.0, 2.0, 7.0, 5.0, 1);
<c> SetObjectAttribute(id, "XY_Curve.XAttr", "H1-X1.Value##Float32#100");
<c> SetObjectAttribute(id, "XY_Curve.YAttr", "H1-Y1.Value##Float32#100");
<c> SetObjectAttribute(id, "XY_Curve.XMaxValue", 100.0);
<c> SetObjectAttribute(id, "XY_Curve.XMinValue", 0.0);
<c> SetObjectAttribute(id, "XY_Curve.YMaxValue", 100.0);
<c> SetObjectAttribute(id, "XY_Curve.YMinValue", -100.0);
<c> SetObjectAttribute(id, "XY_Curve.UpdateAttr", "H1-Update.ActualValue##Boolean");
</topic>

<topic>DashInsertObject() <style>function
DashInsertObject()
void DashInsertObject(int dashoid, int oid)

<h2>Description
Addera ett objekt till en dashcell.

<h2>Argument

int <t>dashoid <t>Objektidentitet för DashCell-objektet.
int <t>oid     <t>Objektidentitet för objektet.

<b>Exempel
<c> int doid;
<c> int oid;
 
<c> DashInsertObject(doid, oid);
</topic>

<topic>DeleteObject() <style>function
DeleteObject()
void DeleteObject( int oid)

<h2>Beskrivning
Ta bort ett objekt.

<h2>Argument

int <t>oid     <t>Objektsidentitet.

<b>Exempel
<c> int oid;
 
<c> DeleteObject( oid);
</topic>

<topic>GetFirstObject() <style>function
GetFirstObject()
int GetFirstObject()

<h2>Beskrivning
Hämtar identiteten för det första objektet i en graf. Övriga objekt
kan hämtas med GetNextObject(). 

Returnerar en integer med objektsidentiteten.

<b>Exempel
<c> int oid;
 
<c> oid = GetFirstObject();
<c> while ( oid != 0)
<c>   ...
<c>   oid = GetNextObject( oid)
<c> endwhile
</topic>

string GetGraphName()

<h2>Beskrivning
Hämta namn på nuvarande graf.

Returnerar en sträng med namnet.

<b>Exempel
<c> string name;
 
<c> name = GetGraphName();
</topic>

<topic>GetNextObject() <style>function
GetNextObject()
int GetNextObject( int oid)

<h2>Beskrivning
Hämtar identiteten för nästa objekt i en graf. Det första objektet
kan hämtas med GetFirstObject() och övriga objekt med GetNextObject() 

<h2>Argument

int <t>oid     <t>Objektidentitet på objekt vars nästa objekt ska hämtas.

Returnerar en integer med objektsidentiteten.

<b>Exempel
<c> int oid;
 
<c> oid = GetFirstObject();
<c> while ( oid != 0)
<c>   ...
<c>   oid = GetNextObject( oid)
<c> endwhile
</topic>

<topic>GetObjectAttribute() <style>function
GetObjectAttribute()
int GetObjectAttribute( int oid, string attribute, (arbitrary type) value)

<h2>Beskrivning
Hämtar värde på ett attribut för ett objekt. Attributet namnges på
samma sätt som i attributeditorn för objektet.

<h2>Argument

int <t>oid     <t>Objektets identitet.
string <t>attribut <t>Attributnamn.
(arbitrary type) <t>value <t>Hämtat värde på attributet.

Returnerar status för operationen.

<b>Exempel
<c> int sts;
<c> int oid;
<c> int color;
 
<c> sts = GetObjectAttribute( oid, "DigColor.Color", color);
<c> if ( !(sts & 1))
<c>   printf( "Couldn't get color\n");
<c> endif
</topic>

<topic>GetObjectBorder() <style>function
GetObjectBorder()
int GetObjectBorder( int oid)

<h2>Beskrivning
Hämtar kant för ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar värdet på kant, 0 eller 1.

<b>Exempel
<c> int oid;
<c> int border;
 
<c> border = GetObjectBorder( oid);
</topic>

<topic>GetObjectBorderColor() <style>function
GetObjectBorderColor()
int GetObjectBorderColor( int oid)

<h2>Beskrivning
Hämtar kantfärgen för ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar värdet på kantfärgen.

<b>Exempel
<c> int oid;
<c> int bcolor;
 
<c> bcolor = GetObjectBorderColor( oid);
<c> if ( bcolor == eDrawType_Color33)
<c>   SetObjectBorderColor( oid, eDrawType_CustomColor24);
<c> endif
</topic>

<topic>GetObjectClass() <style>function
GetObjectClass()
string GetObjectClass( int oid)

<h2>Beskrivning
Hämtar namnet på subgrafet för ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar namnet.

<b>Exempel
<c> int oid;
<c> string class;
 
<c> class = GetObjectClass( oid);
<c> if ( class == "pwr_roundind")
<c>   ...
<c> endif
</topic>

<topic>GetObjectDynType() <style>function
GetObjectDynType()
int GetObjectDynType( int oid, int dyntype1, int dyntype2, int actiontype1, int actiontype2)

<h2>Beskrivning
Hämtar dynamiktyp och aktionstyp för objektet.

<h2>Argument

int <t>oid     <t>Objektets identitet.
int <t>dyntype1 <t>Hämtat värde på DynType1.
int <t>dyntype2 <t>Hämtat värde på DynType2.
int <t>actiontype1 <t>Hämtat värde på ActionType1.
int <t>actiontype2 <t>Hämtat värde på ActionType2.

Returnerar status för operationen.

Se Fördefinerade variables för värden på dyntype and actiontype. <link> gecmd_variables,dyntypes

<b>Exempel
<c> int sts;
<c> int oid;
<c> int dyntype1;
<c> int dyntype2;
<c> int actiontype1;
<c> int actiontype2;
 
<c> sts = GetObjectDynType( oid, dyntype1, dyntype2, actiontype1, actiontype2);
<c> if ( dyntype1 & mDynType1_Value)
<c>   ...
<c> endif
</topic>

<topic>GetObjectFill() <style>function
GetObjectFill()
int GetObjectFill( int oid)

<h2>Beskrivning
Hämtar fyllnad för ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar värdet på fyllnad, 0 eller 1.

<b>Exempel
<c> int oid;
<c> int fill;
 
<c> fill = GetObjectFill( oid);
</topic>

<topic>GetObjectFillColor() <style>function
GetObjectFillColor()
int GetObjectFillColor( int oid)

<h2>Beskrivning
Hämtar fyllnadsfärgen för ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar värdet på fyllnadsfärgen.

<b>Exempel
<c> int oid;
<c> int fcolor;
 
<c> fcolor = GetObjectFillColor( oid);
<c> if ( fcolor == eDrawType_Color67)
<c>   SetObjectFillColor( oid, eDrawType_CustomColor23);
<c> endif
</topic>

<topic>GetObjectGradient() <style>function
GetObjectGradient()
int GetObjectGradient( int oid)

<h2>Beskrivning
Hämtar gradienten för ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar värdet på gradienten, dvs typen av gradient. Värdet 0 innebär ingen gradient.

<b>Exempel
<c> int oid;
<c> int grad;
 
<c> grad = GetObjectGradient( oid);
</topic>

<topic>GetObjectName() <style>function
GetObjectName()
string GetObjectName( int oid)

<h2>Beskrivning
Hämtar namnet på ett objekt.

<h2>Argument

Returnerar namnet.

int <t>oid     <t>Objektets identitet.

<b>Exempel
<c> int oid;
<c> string oname;
 
<c> oname = GetObjectName( oid);
</topic>

<topic>GetObjectShadow() <style>function
GetObjectShadow()
int GetObjectShadow( int oid)

<h2>Beskrivning
Hämtar skuggning för ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar en integer med skuggningen.

<b>Exempel
<c> int oid;
<c> int shadow;
 
<c> shadow = GetObjectShadow( oid);
</topic>

<topic>GetObjectText() <style>function
GetObjectText()
string GetObjectText( int oid)

<h2>Beskrivning
Hämtar text för ett text-objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar texten.

<b>Exempel
<c> int oid;
<c> string text;
 
<c> text = GetObjectText( oid);
</topic>

<topic>GetObjectTextColor() <style>function
GetObjectTextColor()
int GetObjectTextColor( int oid)

<h2>Beskrivning
Hämtar textfärgen för ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar värdet på textfärgen.

<b>Exempel
<c> int oid;
<c> int tcolor;
 
<c> tcolor = GetObjectTextColor( oid);
<c> if ( tcolor == eDrawType_Color49)
<c>   SetObjectTextColor( oid, eDrawType_CustomColor5);
<c> endif
</topic>

<topic>GetObjectType() <style>function
GetObjectType()
int GetObjectType( int oid)

<h2>Beskrivning
Hämtar ett objects typ.

<h2>Argument

int <t>oid     <t>Objektets identitet.

Returnerar objektstypen.
Se Fördefinierade variabler för värden på objekttyper <link> gecmd_variables,objecttypes

<b>Exempel
<c> int oid;
<c> int type;
 
<c> type = GetObjectType( oid);
<c> if ( type == eObjectType_SubGraph)
<c>   SetObjectFillColor( oid, eDrawType_CustomColor22);
<c> endif
</topic>

<topic>GetRgbColor() <style>function
void GetRgbColor()
void GetRgbColor( int color, float red, float green, float blue)

<h2>Beskrivning
Hämtar rgb-värden för en färg. Färgen anges med färgindex eller med symbol, se nedan.
rgb-värdena är flyttal mellan 0 och 1.

<h2>Argument

int <t>color     <t>Färg.
float <t>red     <t>Returnerar värde på röd.
float <t>green   <t>Returnerar värde på grön.
float <t>blue     <t>Returnerar värde på blå.

Färger i standardpaletten finns definierade med eDrawType_Color1 - eDrawType_Color300, 
och färger i custom color paletten med eDrawType_CustomColor1 - eDrawType_CustomColor90.
Motsvarande färgindex kan också användas, för standardpaletten 0 - 299, och för
custom color paletten 310 - 669. För custom color ligger grundfärgen på var fjärde index, 
dvs 310, 314, 318, ... 666.

<b>Exempel
<c> int i;
<c> float r;
<c> float g;
<c> float b;
 
<c> printf( "Idx  Red   Green Blue\n");
<c> for ( i = eDrawType_CustomColor1; i <= eDrawType_CustomColor90; i += 4)
<c>   GetRgbColor( i, r, g, b);

<c>   printf( "%3d  %5.3f %5.3f %5.3f\n", i, r, g, b);
<c> endfor
</topic>

<topic>GetTextExtent() <style>function
GetTextExtent()
int GetTextExtent( string text, int textsize, int font, int bold, float widht [, float height, 
float descent])

<h2>Beskrivning

Beräknar storleken på en text.
Returnerar text-bredden i width argumentet, och om argumentet height och descent skickats med, 
även höjd och descent i dessa argument.

<h2>Argument

string <t>text     <t>Text vars storlek ska beräknas.
int    <t>textsize <t>Textstorleksindex (0-5)).
int    <t>bold     <t>Fet (1) eller normal (0) text.
float  <t>width    <t>Textens bredd returneras i denna variabel.
float  <t>height   <t>Höjden på texten returneras i denna variabel.
float  <t>descent  <t>Textens descent returneras i denna variabel.

<b>Exempel
<c> float width;
 
<c> GetTextExtent("Detta är en text", 3, eFont_LucidaSans, 1, width);
</topic>

<topic>GroupGetFirstObject() <style>function
GroupGetFirstObject()
int GroupGetFirstObject( int group)

<h2>Beskrivning
Hämtar identiteten för det första objektet i en grupp. Övriga objekt
kan hämtas med GroupGetNextObject(). 

<h2>Argument

int  <t>group <t>Identitet på gruppen.

Returnerar en integer med objektsidentiteten.

<b>Exempel
<c> int goid;
<c> int oid;
 
<c> # Get all objects
<c> goid = GetFirstObject();
<c> while ( goid != 0)
<c>   type = GetObjectType( goid);
<c>   if ( type == eObjectType_Group)	
<c>     # This is a group, get all objects in the group
<c>     oid = GroupGetFirstObject( goid);
<c>     while ( oid != 0)
<c>       ...
<c>       oid = GroupGetNextObject( goid, oid)
<c>   endwhile
<c> endwhile
</topic>

<topic>GroupGetNextObject() <style>function
GroupGetNextObject()
int GroupGetNextObject( int group, int oid)

<h2>Beskrivning
Hämtar identiteten för nästa objekt i en grupp. Det första objektet
kan hämtas med GroupGetFirstObject() och övriga objekt med GroupGetNextObject() 

<h2>Argument

int <t>oid     <t>Objektidentitet på objekt vars nästa objekt ska hämtas.

Returnerar en integer med objektsidentiteten.

</topic>

<topic>GroupSelected() <style>function
GroupSelected()
int GroupSelected()

<h2>Beskrivning

Skapa en grupp med de utvalda objekten.

Returnar en integer med gruppens identiteten.

<b>Exempel

<c> int id1;
<c> int id2;
<c> int gid;
 
<c> SelectAdd(id1);
<c> SelectAdd(id2);
<c> gid = GroupSelected();
</topic>

<topic>MeasureObject() <style>function
MeasureObject()
void MeasureObject( int oid, float ll_x, float ll_y, float ur_x, float ur_y)

<h2>Beskrivning
Hämta utbredningen av ett objekt.
Returnerar x och y koordinat för under vänstra och övre högre hörnpunkterna.

<h2>Argument

int <t>oid     <t>Objektsidentitet
float <t>ll_x  <t>Returnerad x koordinat för under vänstra.
float <t>ll_y  <t>Returnerad y koordinat för under vänstra.
float <t>ur_x  <t>Returnerad x koordinat för övre högra.
float <t>ur_y  <t>Returnerad y koordinat för övre högra.

<b>Exempel
<c> int oid;
<c> float ll_x;
<c> float ll_y;
<c> float ur_x;
<c> float ur_y;
 
<c> MeasureObject( oid, ll_x, ll_y, ur_x, ur_y);
</topic>

<topic>OpenGraph() <style>function
OpenGraph()
void OpenGraph(string name)

<h2>Description
Öppna en graph.

<h2>Argument

string <t>name     <t>Namn på grafen.

<b>Exempel
 
<c> OpenGraph("overview");
</topic>

<topic>MoveAbsObject() <style>function
MoveAbsObject()
void MoveAbsObject( int oid, float x, float y)

<h2>Beskrivning

Flytta ett objekt till koordinaterna x och y.

<h2>Argument

int <t>oid <t>Objektsidentitet.
float <t>x <t>x koordinat.
float <t>y <t>y koordinat.

<b>Exempel

<c> MoveAbsObject( oid, 0.5, o.5);
</topic>

<topic>MoveObject() <style>function
MoveObject()
void MoveObject( int oid, float dx, float dy)

<h2>Beskrivning

Flytta ett objekt ett visst avstånd.

<h2>Argument

int <t>oid <t>Objektsidentitet.
float <t>dx <t>Avstånd att flytta i x-led.
float <t>dy <t>Avstånd att flytta i y-led.

<b>Exempel

<c> MoveObject( oid, 0.5, 0.5);
</topic>

<topic>PolyLineAdd() <style>function
PolyLineAdd()
int PolyLineAdd(int id, float x, float y)

<h2>Description
Addera ett segment till ett PolyLine objekt.

<h2>Argument

float <t>x     <t>X koordinat för slutpunkten.
float <t>y     <t>Y koordinat för slutpunkten.

<b>Exempel
 
<c> int id;
<c>
<c> id = CreatePolyLine(2.0, 2.0, 3.0, 3.0);
<c> PolyLineAdd(id, 4.0, 2.0);
<c> PolyLineAdd(id, 5.0, 3.0);
</topic>

<topic>RotateSelected() <style>function
RotateSelected()
void RotateSelected(float angle, int rotationpoint)

<h2>Beskrivning
Rotera utvalda objekt runt rotationspunkten.
Rotationspunkten kan vara

 0 nedre vänstra hörnet
 1 nedre högra hörnet
 2 övre högra hörnet
 3 övre vänstra hörnet
 4 mittpunkten (default-värde)

<h2>Argument

float <t>angle     <t>Vinkel i grader för rotationen.
int <t>rotationpoint     <t>Rotationspunkt. Default-värde center.

<b>Exempel
 
<c> int id;

<c> SelectAdd(id);
<c> RotateSelected(90.0);
</topic>

<topic>Reload() <style>function
Reload()
void Reload()

<h2>Beskrivning

Läser nuvarande graf från fil.

<b>Exempel
<c> # Update subgraph pwr_roundind
<c> SetExtern("pwr_roundind");
<c> save
<c> Reload();
<c> SetIntern("pwr_roundind");
<c> save
</topic>

<topic>SaveGraph() <style>function
SaveGraph()
void SaveGraph([string name])

<h2>Beskrivning
Spara aktuell graph.

<h2>Argument

string <t>name     <t>Namn på grafen. Optional.

<b>Exempel
 
<c> SaveGraph();
</topic>

<topic>SelectAdd() <style>function
SelectAdd()
int SelectAdd( int objectid)

<h2>Beskrivning

Lägger in ett objekt i listan av utvalda objekt.

<h2>Argument

int          <t>objectid   <t>Objektsidentitet.

<b>Exempel
<c> int id;
 
<c> id = GetCurrentObject();
<c> SelectAdd( id);
</topic>

<topic>GetCurrentObject() <style>function
GetCurrentObject()
int GetCurrentObject()

<h2>Beskrivning

Returnerar identiteten på senast skapade objekt.

<b>Exempel
<c> int id;
 
<c> id = GetCurrentObject();
</topic>

<topic>Reload() <style>function
Reload()
void Reload()

<h2>Beskrivning

Läser nuvarande graf från fil.

<b>Exempel
<c> SetExtern("pwr_roundind");
<c> save

<c> Reload();

<c> SetIntern("pwr_roundind");
<c> save
</topic>

<topic>ScaleObject() <style>function
ScaleObject()
void ScaleObject( int oid, float scalex, float scaley)

<h2>Beskrivning

Skala ett objekt.

<h2>Argument

int <t>oid <t>Objektsidentitet.
float <t>scalex <t>Skalfaktor i x-led.
float <t>scaley <t>Skalfaktor i y-led.

<b>Exempel

<c> ScaleObject( oid, 1.5, 1.5);
</topic>

<topic>SetBackgroundColor() <style>function
SetBackgroundColor()
void SetBackgroundColor(int color)

<h2>Beskrivning
Sätt bakgrundsfärg för aktuell graph.

<h2>Argument

int <t>color     <t>Bakgrundsfärg.

<b>Exempel
 
<c> SetBackgroundColor(eDrawType_CustomColor1);
</topic>

<topic>SetColorTheme() <style>function
SetColorTheme()
void SetColorTheme(int colortheme)

<h2>Beskrivning
Sätt färgtema för aktuell graph.
I runtime måste även ColorTheme i GraphAttributes sättas till
$default. 


<h2>Argument

int <t>colortheme     <t>Index för färgtema.

<b>Exempel
 
<c> SetGraphAttribute("ColorTheme", "$default");
<c> SetColorTheme(2);
</topic>

<topic>SetCurrentObject() <style>function
SetCurrentObject()
void SetCurrentObject( int oid)

<h2>Beskrivning

Sätter CurrentObject.

<h2>Argument

int <t>oid <t>Objektsidentitet.

<b>Exempel

<c> SetCurrentObject( oid);
</topic>

<topic>SetDraw() <style>function
SetDraw()
void SetDraw( int draw)

<h2>Beskrivning

Sätter ritning på skärmen till (1) eller från (0).

<h2>Argument

int <t>draw <t>1 innebär att ritning sätts till, och 0 att ritning sätts från.

<b>Exempel

<c>  SetDraw(0);

<c>  for ( i = 0; i < 10000; i++)
<c>    x2 = x + 0.55;
<c>    y2 = y + 0.55;
<c>    create object/sub=pwr_indsquare/x1='x'/y1='y'/x2='x2'/y2='y2'
<c>    set current attr DigLowColor.Attribute H1-DArray.Val['i']##Boolean
<c>    x += 0.65;
<c>    if ( i - (i / 100) * 100 == 99)
<c>      y += 0.65;
<c>      x = 0;
<c>    endif
<c>  endfor  

<c>  SetDraw(1);
</topic>

<topic>SetExtern() <style>function
SetExtern()
int SetExtern( string name)

<h2>Beskrivning

Sätter en subgraf extern.

<h2>Argument

string      <t>name       <t>Namn på subgrafen.

<b>Exempel
 
<c> SetExtern("MySubgraph");
</topic>

<topic>SetExternAll() <style>function
SetExternAll()
void SetExternAll()

<h2>Beskrivning

Sätter alla subgrafer extern.

<b>Exempel
 
<c> SetExternAll();
</topic>

<topic>SetIntern() <style>function
SetIntern()
int SetIntern( string name)

<h2>Beskrivning

Sätter en subgraf intern.

<h2>Argument

string    <t>name       <t>Namn på subgrafen.

<b>Exempel
 
<c> SetIntern("MySubgraph");
</topic>

<topic>SetInternAll() <style>function
SetInternAll()
void SetInternAll()

<h2>Beskrivning

Sätter alla subgrafer intern.

<b>Exempel
 
<c> SetInternAll();
</topic>

<topic>SetGraphName() <style>function
SetGraphName()
string SetGraphName()

<h2>Beskrivning
Sätt namn på innevarande graph.

<h2>Argument

string    <t>name       <t>Namn på grafen.

<b>Exempel
<c> string name = "overview";
 
<c> SetGraphName(name);
</topic>

<topic>SetObjectAttribute() <style>function
SetObjectAttribute()
int SetObjectAttribute( int oid, string attribute, (arbitrary type) value)

<h2>Beskrivning
Sätter värde på ett attribut i ett objekt. Attributet namnges på
samma sätt som i attributeditorn för objektet.

Citationstecken i strängar kan sättas med \", och ny rad i
attribut med flera rade med \\n.

<h2>Argument

int <t>oid     <t>Objektets identitet.
string <t>attribut <t>Attributnamn.
(arbitrary type) <t>Värde på attributet.

Returnerar status för operationen.

<b>Exempel 1
<c> int sts;
<c> int oid;
 
<c> sts = SetObjectAttribute( oid, "DigColor.Color", eDrawType_Color244);

<b>Exempel 2
Script attribut med flera rader och strängar med citationstecket.

<c>  SetObjectAttribute(id, "Script.Script", "\
<c>int a;\\n\
<c>a = GetAttribute(\"H1-Dv1.ActualValue\");\\n\
<c>if (a)\\n\
<c>  SetSubwindow(\"$current\",\"W1\",\"@plant1\",\"\", 0);\\n\
<c>else\\n\
<c>  SetSubwindow(\"$current\",\"W1\",\"@plant2\",\"\", 0);\\n\
<c>endif");

</topic>

<topic>SetObjectBackgroundColor() <style>function
SetObjectBackgroundColor()
void SetObjectBackgroundColor( int oid, int color)

<h2>Beskrivning
Sätter bakgrundsfärg på ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.
int <t>color   <t>Bakgrundsfärg.

<b>Exempel
 
<c> SetObjectBackgroundColor( oid, eDrawType_CustomColor1);
</topic>

<topic>SetObjectBorder() <style>function
SetObjectBorder()
void SetObjectBorder( int oid, int border)

<h2>Beskrivning
Sätter kant på ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.
int <t>border  <t>1 ritar ut kantlinjen, 0 tar bort kantlinjen.

<b>Exempel
 
<c> SetObjectBorder( oid, 1);
</topic>

<topic>SetObjectBorderColor() <style>function
SetObjectBorderColor()
void SetObjectBorderColor( int oid, int color)

<h2>Beskrivning
Sätter kantfärg på ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.
int <t>color   <t>Kantfärg.

<b>Exempel
 
<c> SetObjectBorderColor( oid, eDrawType_CustomColor1);
</topic>

<topic>SetObjectFill() <style>function
SetObjectFill()
void SetObjectFill( int oid, int fill)

<h2>Beskrivning
Sätter fyllnad på ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.
int <t>fill    <t>Objektets fyllnad, 1 eller 0.

<b>Exempel
 
<c> SetObjectFill( oid, 1);
</topic>

<topic>SetObjectFillColor() <style>function
SetObjectFillColor()
void SetObjectFillColor( int oid, int color)

<h2>Beskrivning
Sätter fyllnadsfärg på ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.
int <t>color   <t>Fyllnadsfärg.

<b>Exempel
 
<c> SetObjectFillColor( oid, eDrawType_CustomColor1);
</topic>

<topic>SetObjectGradient() <style>function
SetObjectGradient()
void SetObjectGradient( int oid, int gradient)

<h2>Beskrivning
Sätter gradient på ett objekt.

<h2>Argument

int <t>oid     <t>Object identity.
int <t>gradient <t>Gradient. 0 betyder ingen gradient.

<b>Exempel
 
<c> SetObjectGradient( oid, 0);
</topic>

<topic>SetObjectShadow() <style>function
SetObjectShadow()
void SetObjectShadow( int oid, int shadow)

<h2>Beskrivning
Sätter skuggning på ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.
int <t>shadow  <t>Objektets skuggning, 1 eller 0.

<b>Exempel
 
<c> SetObjectShadow( oid, 1);
</topic>

<topic>SetObjectTextColor() <style>function
SetObjectTextColor()
void SetObjectTextColor( int oid, int color)

<h2>Beskrivning
Sätter textfärg på ett objekt.

<h2>Argument

int <t>oid     <t>Objektets identitet.
int <t>color   <t>Textfärg.

<b>Exempel
 
<c> SetObjectTextColor( oid, eDrawType_CustomColor5);
</topic>


<topic>SetRgbColor() <style>function
void SetRgbColor()
void SetRgbColor( int color, float red, float green, float blue)

<h2>Beskrivning
Sätter rgb-värden på en färg i custom color paletten. Färgen anges med färgindex eller med symbol, se nedan.
rgb-värdena är flyttal mellan 0 och 1.

<h2>Argument

int <t>color     <t>Färg.
float <t>red     <t>Värde på röd.
float <t>green   <t>Värde på grön.
float <t>red     <t>Värde på blå.

Färger i standardpaletten finns definierade med eDrawType_Color1 - eDrawType_Color300, 
och färger i custom color paletten med eDrawType_CustomColor1 - eDrawType_CustomColor90.
Motsvarande färgindex kan också användas, för standardpaletten 0 - 299, och för
custom color paletten 310 - 669. För custom color ligger grundfärgen på var fjärde index, 
dvs 310, 314, 318, ... 666.
<
b>Exempel
<c> float red = 0.731;
<c> float green = 0.224;
<c> float blue = 0.328;

<c> SetRgbColor( eDrawType_CustomColor1, red, green, blue);
</topic>

<topic>SetSelectTextBold() <style>function
void SetSelectTextBold()
void SetSelectTextBold(int font)

<h2>Description
Sätt fet text på utvalda objekt.

<h2>Argument

int <t>bold     <t>1 för fet text 0 för normal text.

<b>Exempel

<c> int id;

<c> SelectAdd(id);
<c> SetSelectTextBold(1);

</topic>

<topic>SetSelectTextFont() <style>function
void SetSelectTextFont()
void SetSelectTextFont(int font)

<h2>Description
Sätt typsnitt på utvalda objekt.

<h2>Argument

int <t>font     <t>Typsnitt.

<b>Exempel

<c> int id;

<c> SelectAdd(id);
<c> SetSelectTextFont(eFont_LucidaSans);

</topic>

<topic>SetSelectTextSize() <style>function
void SetSelectTextSize()
void SetSelectTextSize(int size)

<h2>Beskrivning
Sätt text-storleken på utvalda objekt.

<h2>Argument

int <t>size     <t>Storlek, värde i området 0-5.

<b>Exempel

<c> int id;

<c> SelectAdd(id);
<c> SetSelectTextSize(2);
</topic>

<topic>gecmd_examples <style>function
Exempel

<h1>Exempel 1
<c>!
<c>! Rita några enkla objekt
<c>!
<c>main()
<c>  string name;

<c>  verify(1);


<c>  ! Rita en rektangel
<c>  set fill
<c>  set shadow
<c>  set linewidth 1
<c>  set bordercolor Black
<c>  set fillcolor BlueHigh8
<c>  create rect /x1=10 /y1=1 /width=20 /height=12
<c>  set current attr shadow_width 2
<c>  set current attr gradient Globe

<c>  ! Rita en cirkel
<c>  set fill
<c>  set shadow
<c>  set fillcolor MagentaHigh4
<c>  set linewidth 2
<c>  create arc /x1=1/y1=1/x2=6/y2=6
<c>  set current attr shadow_width 12
<c>  set current attr gradient DiagonalLowerLeft
  
<c>  ! Rita en polyline
<c>  set fill
<c>  set shadow
<c>  set fillcolor YellowGreenHigh5
<c>  set linewidth 1
<c>  create polyline /x1=5 /y1=5 /x2=10 /y2=10
<c>  add polyline /x1=10 /y1=20
<c>  add polyline /x1=5 /y1=20
<c>  add polyline /x1=5 /y1=5
<c>  set current attr gradient DiagonalLowerLeft

<c>  ! Skriv en text
<c>  set bold
<c>  set textsize 24
<c>  set textfont LucidaSans
<c>  set textcolor RedHigh8
<c>  create text/text="Example" /x1=3 /y1=5

<c>  ! Skapa en subgraf
<c>  set fillcolor YellowGreenMedium3
<c>  create object/sub=pwr_valve/x1=1/y1=1/x2=3/y2=2
<c>  set current attr DigLowColor.Attribute "Rt-Dv1.ActualValue##Boolean"
<c>  set current attr DigLowColor.Color GrayHigh9
  
<c>  ! Skapa en trycknapp
<c>  create object /sub=pwr_buttonsetcenter /x1=5 /y1=1
<c>  set current annotation "Start"
<c>  set current attr SetDig.Attribute "rt-dv1.actualvalue##Boolean"
<c>  set current attr Access System|Operator1

<c>  ! Sätt graph attributes
<c>  set graphattr x0 -3
<c>  set graphattr y0 -3
<c>  set graphattr x1 40
<c>  set graphattr y1 25

<c>  save
<c>endmain

<h1>Exempel 2
<c>!
<c>! Det här exemplet letar upp alla dv-objekt i en hierarki,
<c>! skriver ut namnet och visar värdet i en indikator.
<c>! En ram ritas runt objekten.
<c>!
<c>main()

<c>  string name;
<c>  string segname;
<c>  string attr;
<c>  float x;
<c>  float y;
<c>  float x_ind;
<c>  float y_ind;
<c>  float x1;
<c>  float x2;
<c>  float y1;
<c>  float y2;
<c>  float width;
<c>  float height;
<c>  float t_width;
<c>  string class;

<c>  verify(1);
  
<c>  x_ind = 2;
<c>  x = 4;
<c>  y_ind = 1.5;
<c>  y = 2;
<c>  name = GetChild( p1);
  
<c>  if ( p1 == "")
<c>    printf("usage : test3 'parent'\n");
<c>    exit();
<c>  endif
  
<c>  set bold
<c>  set textsize 12
<c>  while ( name != "")
<c>    class = GetObjectClass( name);
<c>    if ( class == "Dv")
<c>      create object/sub=pwr_indsquare/x1='x_ind'/y1='y_ind'
<c>      attr = name + ".ActualValue##Boolean";
<c>      set current attr DigLowColor.Attribute "'attr'"
<c>      segname = CutObjectName( name, 1);
<c>      create text/text="'segname'"/x1='x'/y1='y'
<c>      GetTextExtent( segname, 12, 1, t_width);
<c>      if ( t_width > width)
<c>        width = t_width;
<c>      endif
<c>      y += 1;
<c>      y_ind += 1;
<c>    endif
<c>    name = GetNextSibling( name);
<c>  endwhile

<c>  x1 = x_ind - 1;
<c>  x2 = x + width + 1;
<c>  y1 = 0;
<c>  y1 = y;
<c>  width = x2 - x1;
<c>  height = y2 - y1;

<c>  set fillcolor GrayLow3
<c>  set shadow
<c>  set noborder
<c>  set nofill
<c>  create rectangle/x1='x1'/y1='y1'/width='width'/height='height'
<c>  set current attr shadow_width 2
<c>  set current attr relief Down

<c>  x1--;
<c>  x2++;
<c>  y1--;
<c>  y2++;
<c>  set background GrayLow3
<c>  set graph x0 'x1'
<c>  set graph y0 'y1'
<c>  set graph x1 'x2'
<c>  set graph y1 'x2'
<c>endmain
</topic>
</chapter>


