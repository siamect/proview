/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cow_pn_gsdml_attr_qt_h
#define cow_pn_gsdml_attr_qt_h

/* cow_pn_gsdml_attr_qt.h -- Profibus gsd attribute editor */

#include <stdlib.h>

#include "cow_wow_qt.h"
#include "cow_pn_gsdml_attr.h"

#include <QLabel>
#include <QTextEdit>

class GsdmlAttrQtWidget;

class GsdmlAttrQt : public GsdmlAttr
{
public:
  GsdmlAttrQtWidget* toplevel;
  QWidget* brow_widget;
  QWidget* form_widget;
  QLabel* msg_label;
  QLabel* cmd_prompt;
  QTextEdit* help_text;
  QAction* menubutton_copy;
  QAction* menubutton_cut;
  QAction* menubutton_paste;
  QAction* menubutton_changevalue;
  CoWowFocusTimerQt focustimer;
  static CoWowRecall value_recall;
  CoWowEntryQt* cmd_entry;

  GsdmlAttrQt(void* a_parent_ctx, void* a_object, pn_gsdml* a_gsdml,
      int a_edit_mode, const char* a_data_filename, pwr_tStatus* a_sts);
  ~GsdmlAttrQt();

  void message(char severity, const char* message);
  void attr_help_text(const char* help_text);
  void set_prompt(const char* prompt);
  void change_value();
};

class GsdmlAttrQtWidget : public QWidget
{
  Q_OBJECT

public:
  GsdmlAttrQtWidget(GsdmlAttrQt* parent_ctx) : QWidget(), attr(parent_ctx) {}

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_change_value();
  void activate_ordermoduletype_default();
  void activate_ordermoduletype_name();
  void activate_ordermoduletype_number();
  void activate_exit();
  void activate_help();
  void activate_copy();
  void activate_cut();
  void activate_paste();
  void activate_viewio(bool);
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_print();
  void activate_collapse();
  void activate_expand_all();
  void activate_cmd_entry();
  void activate_cmd_ok();
  void activate_cmd_apply();

  void valchanged_cmd_entry() {}

private:
  GsdmlAttrQt* attr;
};

#endif
