/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

/* xtt_c_pndevice_qt.cpp -- xtt methods for PnDevice. */

#include "cow_xhelp_qt.h"

#include "xtt_menu.h"

#include "rt_pb_msg.h"

#include "cow_pn_gsdml_attr_qt.h"

#include "xtt_c_pndevice.h"

char* id_to_string(pwr_tOid oid)
{
  unsigned char vid[4];
  static char str[40];

  memcpy(&vid, &oid.vid, sizeof(vid));
  sprintf(str, "%3.3u_%3.3u_%3.3u_%3.3u_%8.8x", vid[3], vid[2], vid[1], vid[0],
          oid.oix);
  return str;
}

// Show Configuration
static pwr_tStatus ShowConfiguration(xmenu_sMenuCall* ip)
{
  pwr_tStatus sts;
  xtt_pndevice_sCtx* ctx;
  pwr_tFileName datafile;

  sprintf(datafile, "$pwrp_load/pwr_pn_%s.xml",
          id_to_string(ip->Pointed.Objid));

  sts = xtt_pndevice_create_ctx(ip->Pointed, ip->EditorContext, &ctx);
  if (EVEN(sts))
    return sts;

  ctx->attr = new GsdmlAttrQt(ctx, 0, ctx->gsdml, 0, datafile, &sts);
  if (sts == PB__CONFIGABORTED)
  {
    delete ctx->attr;
    return 1;
  }
  ctx->attr->close_cb = xtt_pndevice_close_cb;
  ctx->attr->save_cb = xtt_pndevice_save_cb;
  ctx->attr->help_cb = xtt_pndevice_help_cb;
#if 0
  if (ODD(sts))
    sts = pndevice_init(ctx);
#endif
  if (EVEN(sts))
  {
    ctx->attr->wow->DisplayError(
        "Configuration load error",
        "Configuration load error\nCheck configuration data");
  }

  return 1;
}

/*----------------------------------------------------------------------------*\
  Every method to be exported to xtt should be registred here.
\*----------------------------------------------------------------------------*/

pwr_dExport pwr_BindXttMethods(PnDevice) = {
    pwr_BindXttMethod(ShowConfiguration), pwr_NullMethod};
