/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef pn_viewer_gtk_h
#define pn_viewer_gtk_h

/* pn_viewer_gtk.h -- Profinet viewer */

#include "cow_wow_gtk.h"

#include "../src/pn_viewer.h"

class PnViewerGtk : public PnViewer
{
public:
  PnViewerGtk(void* v_parent_ctx, GtkWidget* v_parent_wid, const char* v_name,
              const char* v_device, pwr_tStatus* status);
  ~PnViewerGtk();

  GtkWidget* parent_wid;
  GtkWidget* toplevel;
  GtkWidget* form;
  GtkWidget* nav_widget;
  GtkWidget* navconf_widget;
  GtkWidget* msg_label;
  GtkWidget* cmd_prompt;
  GtkWidget* cmd_input;
  CoWowFocusTimerGtk focustimer;
  CoWowFocusTimerGtk maptimer;
  CoWowRecall* value_recall;
  CoWowEntryGtk* cmd_entry;

  void message(char severity, const char* msg);
  void set_prompt(const char* prompt);
  void open_change_value();

  static gboolean action_inputfocus(GtkWidget* w, GdkEvent* event,
                                    gpointer data);
  static void valchanged_cmd_input(GtkWidget* w, gpointer data);
  static void activate_exit(GtkWidget* w, gpointer data);
  static void activate_update(GtkWidget* w, gpointer data);
  static void activate_filter(GtkWidget* w, gpointer data);
  static void activate_setdevice(GtkWidget* w, gpointer data);
  static void activate_changevalue(GtkWidget* w, gpointer data);
  static void activate_zoom_in(GtkWidget* w, gpointer data);
  static void activate_zoom_out(GtkWidget* w, gpointer data);
  static void activate_zoom_reset(GtkWidget* w, gpointer data);
  static void activate_help(GtkWidget* w, gpointer data);
};

#endif
