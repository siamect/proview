/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_uted_qt_h
#define wb_uted_qt_h

#include "wb_uted.h"

#include <QCheckBox>
#include <QLabel>
#include <QLineEdit>

class WUtedQtWidget;

class WUtedQt : public WUted {
public:
  QLabel* label;
  QWidget* quit;
  QLabel* commandlabel;
  QWidget* help;
  QLabel* qualifier[UTED_QUALS];
  QLineEdit* value[UTED_QUALS];
  QCheckBox* present[UTED_QUALS];
  QAction* optmenubuttons[UTED_MAX_COMMANDS];

  WUtedQt(void* wu_parent_ctx, const char* wu_name, const char* wu_iconname,
      ldh_tWBContext wu_ldhwb, ldh_tSesContext wu_ldhses, int wu_editmode,
      void (*wu_quit_cb)(void*), pwr_tStatus* status);
  ~WUtedQt();
  void remove_command_window();
  void reset_qual();
  void message(const char* new_label);
  void set_command_window(char* cmd);
  void raise_window();
  void clock_cursor();
  void reset_cursor();
  void configure_quals(const char* label);
  void enable_entries(int enable);
  void get_value(int idx, char* str, int len);
  bool get_present(int idx);
  void questionbox(char* question_title, char* question_text,
      void (*yes_procedure)(WUted*), void (*no_procedure)(WUted*),
      void (*cancel_procedure)(WUted*), pwr_tBoolean cancel);
  void update_title(int editmode);

private:
  WUtedQtWidget* toplevel;
};

class WUtedQtWidget : public QWidget {
  Q_OBJECT

public:
  WUtedQtWidget(WUtedQt* parent_ctx) : QWidget(), uted(parent_ctx) {}

protected:
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_command();
  void activate_helputils();
  void activate_helppwr_plc();
  void activate_batch();
  void activate_currsess();
  void activate_ok();
  void activate_show_cmd();
  void activate_cmd_wind();
  void commandchanged();
  void activate_present(bool set);

private:
  WUtedQt* uted;
};

#endif
