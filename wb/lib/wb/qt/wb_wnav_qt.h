/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_wnav_qt_h
#define wb_wnav_qt_h

#include "wb_wnav.h"

#include <QTimer>

#include <qlocalserver.h>

/* wtt_wnav_qt.h -- Simple navigator */

class CoLogin;

class WAttText;

class WNavQtTraceObject;

class WNavQt : public WNav {
public:
  WNavQt(void* xn_parent_ctx, QWidget* xn_parent_wid, const char* xn_name,
      const char* xn_layout, QWidget** w, ldh_tSesContext xn_ldhses,
      wnav_sStartMenu* root_menu, wnav_eWindowType xn_type,
      pwr_tStatus* status);
  ~WNavQt();

  QWidget* brow_widget;
  QWidget* form_widget;

  QLocalServer* serverString;
  QLocalServer* serverGraph;
  QLocalServer* serverObjId;
  QLocalServer* serverAttrRef;

  void pop();
  void set_inputfocus(int focus);
  void print(const char* title);
  void trace_start();
  void set_selection_owner();
  Ge* ge_new(char* graph_name, int nojournal);
  WGe* wge_new(char* name, char* filename, char* object_name, int modal);
  void create_popup_menu(pwr_tAttrRef aref, int x, int y);
  int get_selection(char* str, int len);
  int open_foe(const char* name, pwr_tOid plcpgm, void** foectx, int map_window,
      ldh_eAccess access, pwr_tOid oid);
  void wda_new(pwr_tOid oid, pwr_tCid cid, char* attribute, int edit_mode,
      int advuser, int display_objectname);
  void message_dialog(char* title, char* text);
  int confirm_dialog(char* title, char* text, int display_cancel, int* cancel);
  int continue_dialog(char* title, char* text);
  int prompt_dialog(char* title, char* text, char** value);
  void wge_subwindow_loop(WGe* wge);
  void wge_modal_loop(WGe* wge);

  bool has_window()
  {
    return parent_wid != NULL;
  }

  wb_utl* utl_new();
  WRev* rev_new();
  void logw_new(char* item, wlog_eCategory* categories, int show_item);
  CoLogin* login_new(const char* name, const char* groupname,
      void (*bc_success)(void*), void (*bc_cancel)(void*), pwr_tStatus* status);
  WCrr* wcrr_new(pwr_tAttrRef* aref, pwr_tStatus* status);
  WbBckW* bckw_new(char* name, wb_bck_list* list, pwr_tStatus* status);
  WbExpW* expw_new(char* name, int type, pwr_tStatus* status);
  WAttText* watttext_new(pwr_tAttrRef aref, int editmode, pwr_tStatus* status);

private:
  QWidget* parent_wid;
  WNavQtTraceObject* trace_obj;
};

class WNavQtTraceObject : public QObject {
  Q_OBJECT

public:
  WNavQtTraceObject(WNavQt* parent);

public slots:
  void trace_scan();
  void sel_convert_cb();

private:
  WNavQt* wnav;
  QTimer* trace_timerid;
};

#endif
