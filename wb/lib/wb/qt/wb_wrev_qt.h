/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_wrev_qt_h
#define wb_wrev_qt_h

/* wb_wrev_qt.h -- Package window */

#include "cow_wow_qt.h"

#include "wb_wrev.h"

#include <QLabel>

class WRevQt;

class WRevInputDialog : public QDialog {
  Q_OBJECT

public:
  WRevInputDialog(WRevQt* parent_ctx, QWidget* parent, const char* text1,
      const char* text2, const char* init_text1, const char* init_text2);

protected:
  void closeEvent(QCloseEvent* event);

private:
  WRevQt* rev;
  QLineEdit* india_text1;
  QLineEdit* india_text2;

public slots:
  void activate_ok();
  void activate_cancel();
};

class WRevQtWidget;

class WRevQt : public WRev {
public:
  WRevQt(void* wa_parent_ctx, ldh_tSession wb_ldhses);
  ~WRevQt();

  QWidget* brow_widget;
  QWidget* form_widget;
  QLabel* msg_label;
  QWidget* india_widget;
  CoWowFocusTimerQt focustimer;

  void message(char severity, const char* message);
  void pop();
  void set_clock_cursor();
  void reset_cursor();
  void flush();
  void open_input_dialog(const char* text1, const char* text2,
      const char* title, const char* init_text1, const char* init_text2,
      void (*ok_cb)(WRev*, char*, char*));

private:
  WRevQtWidget* toplevel;
};

class WRevQtWidget : public QWidget {
  Q_OBJECT

public:
  WRevQtWidget(WRevQt* parent_ctx) : QWidget(), rev(parent_ctx) {}

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_store();
  void activate_restore();
  void activate_delete();
  void activate_build();
  void activate_history();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_help();

private:
  WRevQt* rev;
};

#endif
