/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_vsel_h
#define wb_vsel_h

/* wb_vsel.h -- select volume */

#include "cow_wow.h"

#include "wb.h"
#include "wb_ldh.h"

#define VSEL_MAX_VOLUMES 200

class WVsel {
public:
  WVsel(pwr_tStatus* status, void* wv_parent_ctx, const char* wv_name,
      ldh_tWBContext wv_wbctx, char* volumename,
      int (*bc_success)(void*, pwr_tVolumeId*, int), void (*bc_cancel)(),
      int (*bc_time_to_exit)(void*), int show_volumes, wb_eType wv_wb_type);
  virtual ~WVsel();

  void* parent_ctx;
  char name[40];
  ldh_tWBContext wbctx;
  int (*vsel_bc_success)(void*, pwr_tVolumeId*, int);
  void (*vsel_bc_cancel)();
  int (*vsel_bc_time_to_exit)(void*);
  pwr_tVolumeId volumes[VSEL_MAX_VOLUMES];
  int volume_count;
  int all;
  int write_priv;
  wb_eType wb_type;
  CoWow* wow;

  virtual void list_add_item(char* str)
  {
  }
  virtual void list_clear()
  {
  }

  pwr_tStatus load_volumelist();
  pwr_tStatus check_volumelist(int quiet, int* display_window);
};

#endif
