/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_wge_h
#define wb_wge_h

#include "pwr.h"

class Graph;

class WGe {
public:
  void* parent_ctx;
  pwr_tAName name;
  Graph* graph;
  pwr_tFileName filename;
  int scrollbar;
  int navigator;
  int menu;
  void* current_value_object;
  void* current_confirm_object;
  int value_input_open;
  int confirm_open;
  int (*command_cb)(void*, char*);
  void (*close_cb)(void*);
  void (*help_cb)(void*, char* key);
  int (*is_authorized_cb)(void*, unsigned int);
  int width;
  int height;
  int modal;
  int terminated;
  int subwindow_release;

  WGe(void* parent_ctx, char* name, char* filename, int scrollbar, int menu,
      int navigator, int width, int height, int x, int y, char* object_name,
      int modal);
  virtual ~WGe();

  virtual void pop()
  {
  }
  virtual void set_size(int width, int height)
  {
  }
  virtual void set_subwindow_release();

  int set_object_focus(char* name, int empty);
  int set_folder_index(char* name, int idx);
  int set_subwindow_source(char* name, char* source, int modal);
  void print();

  static void graph_init_cb(void* client_data);
  static int graph_close_cb(void* client_data);
  static int wge_command_cb(void* ge_ctx, char* command, char* script);
  static int wge_is_authorized_cb(void* ge_ctx, unsigned int access);
  static void message(void* ctx, char severity, const char* message);
};

#endif
