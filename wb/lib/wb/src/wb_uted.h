/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_uted_h
#define wb_uted_h

#include "wb_ldh.h"

#define UTED_MODE_EDIT 0
#define UTED_MODE_VIEW 1

#define UTED_QUALS 10

#define UTED_PROC_PWRPLC 0
#define UTED_PROC_DCL 1

#define UTED_QUAL_QUAL 0
#define UTED_QUAL_PAR 1
#define UTED_QUAL_DEFQUAL 2

#define UTED_INS_PLANT 0
#define UTED_INS_NODE 1
#define UTED_INS_PLNO 2
#define UTED_INS_NOPL 3

#define UTED_BATCH_BATCH 0
#define UTED_BATCH_CURRSESS 1

#define UTED_MAX_COMMANDS 40

typedef struct {
  char qual[30];
  int insert;
  int insert_hier;
  int value;
  int present;
  int type;
} uted_sQual;

typedef struct {
  char command[80];
  int process;
  int view_sensitivity;
  int batch_sensitivity;
  uted_sQual qualifier[10];
} uted_sCommand;

class WUted {
public:
  void* parent_ctx;
  char name[80];
  int current_index;
  int batch_sts;
  ldh_tWBContext ldhwb;
  ldh_tSesContext ldhses;
  int mode;
  void (*questionbox_yes)(WUted*);
  void (*questionbox_no)(WUted*);
  void (*questionbox_cancel)(WUted*);
  void (*quit_cb)(void* parent_ctx);
  int dummy[20];
  static uted_sCommand commands[UTED_MAX_COMMANDS];

  WUted(void* wu_parent_ctx, const char* wu_name, const char* wu_iconname,
      ldh_tWBContext wu_ldhwb, ldh_tSesContext wu_ldhses, int wu_editmode,
      void (*wu_quit_cb)(void*), pwr_tStatus* status);
  virtual ~WUted();

  int execute(int show);
  void message_error(pwr_tStatus sts);
  void set_editmode(int edit, ldh_tSesContext ldhses);

  virtual void remove_command_window()
  {
  }
  virtual void reset_qual()
  {
  }
  virtual void message(const char* new_label)
  {
  }
  virtual void set_command_window(char* cmd)
  {
  }
  virtual void raise_window()
  {
  }
  virtual void clock_cursor()
  {
  }
  virtual void reset_cursor()
  {
  }
  virtual void configure_quals(const char* label)
  {
  }
  virtual void enable_entries(int enable)
  {
  }
  virtual void get_value(int idx, char* str, int len) = 0;
  virtual bool get_present(int idx) = 0;
  virtual void questionbox(char* question_title, char* question_text,
      void (*yes_procedure)(WUted*), void (*no_procedure)(WUted*),
      void (*cancel_procedure)(WUted*), pwr_tBoolean cancel)
  {
  }
  virtual void update_title(int editmode)
  {
  }

  static void get_message_error(pwr_tStatus sts, char* str);
  static pwr_tStatus get_command_index(const char* label, int* index);
  static void get_filename(char* filename);
};

#endif
