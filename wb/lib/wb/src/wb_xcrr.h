/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_xcrr_h
#define wb_xcrr_h

class WAttNav;

/* wb_xcrr.h -- Object crossreferences */

#include "flow_browapi.h"

#include "wb_ldh.h"

class WCrr {
public:
  WCrr(void* xa_parent_ctx, ldh_tSesContext xa_ldhses, pwr_sAttrRef* xa_objar,
      int xa_advanced_user, int* xa_sts);
  virtual ~WCrr();
  void* parent_ctx;
  ldh_tSesContext ldhses;
  pwr_sAttrRef objar;
  char name[80];
  WAttNav* xcrrnav;
  void* root_item;
  int input_open;
  int input_multiline;
  void* object;
  void (*close_cb)(void*, void*);
  void (*redraw_cb)(void*);
  void (*popup_menu_cb)(
      void*, pwr_sAttrRef, unsigned long, unsigned long, char*, int x, int y);
  void (*start_trace_cb)(void*, pwr_tObjid, char*);
  void* client_data;
  brow_tObject input_node;
  char input_name[80];

  virtual void pop()
  {
  }
  virtual void print()
  {
  }

  void activate_print()
  {
    print();
  }
  static void xcrr_popup_menu_cb(void* ctx, pwr_sAttrRef attrref,
      unsigned long item_type, unsigned long utility, char* arg, int x, int y);
  static void xcrr_start_trace_cb(void* ctx, pwr_tObjid objid, char* name);
  static void xcrr_close_cb(void* ctx);
};

#endif
