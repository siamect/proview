/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_wpkgnav_h
#define wb_wpkgnav_h

#include "wb_ldh.h"
#include "wb_utility.h"
#include "wb_wnav_brow.h"

#define wpkgnav_cVersion "X3.3b"
#define WPKGNAV_BROW_MAX 25

typedef enum {
  wpkg_mDisplayMode__ = 0,
  wpkg_mDisplayMode_FileOrderTime = 1 << 0,
  wpkg_mDisplayMode_FileDiff = 1 << 1,
  wpkg_mDisplayMode_FilePath = 1 << 2
} wpkg_mDisplayMode;

class WItemPkg;
class WItemPkgPackage;

class WPkgNav {
public:
  WPkgNav(void* wa_parent_ctx, const char* wa_name, wb_eUtility wa_utility,
      pwr_tStatus* status);
  virtual ~WPkgNav();

  void* parent_ctx;
  char name[80];
  WNavBrow* brow;
  void (*message_cb)(void*, char, const char*);
  void (*set_clock_cursor_cb)(void*);
  void (*reset_cursor_cb)(void*);
  void (*change_value_cb)(void*);
  wb_eUtility utility;
  int displayed;
  int display_mode;

  virtual void set_inputfocus()
  {
  }

  void message(char sev, const char* text);
  int root_objects();
  void redraw();
  void enable_events();
  void set_display_mode(int mode)
  {
    display_mode = mode;
  }
  int get_select(WItemPkg*** items, int* item_cnt);
  void refresh_node(WItemPkg* item);
  WItemPkg* get_parent(WItemPkg* item);
  void delete_package(WItemPkg* item);
  void delete_package(WItemPkgPackage* item);
  void get_zoom(double* zoom_factor);
  void zoom(double zoom_factor);
  void unzoom();

  static int brow_cb(FlowCtx* ctx, flow_tEvent event);
  static int init_brow_cb(FlowCtx* fctx, void* client_data);
};

class WItemPkg {
public:
  WItemPkg();
  virtual ~WItemPkg();
  virtual int open_children(
      WNavBrow* brow, double x, double y, int display_mode);
  virtual int close(WNavBrow* brow, double x, double y);

  brow_tNode node;
  char name[120];
};

class WItemPkgNode : public WItemPkg {
public:
  WItemPkgNode(WNavBrow* brow, char* item_name, char* item_nodename,
      int item_bus, pwr_mOpSys item_opsys, brow_tNode dest,
      flow_eDest dest_code);
  int open_children(WNavBrow* brow, double x, double y, int display_mode);
  char nodename[32];
  int bus;
  pwr_mOpSys opsys;
};

class WItemPkgPackage : public WItemPkg {
public:
  WItemPkgPackage(WNavBrow* brow, char* item_name, char* item_packagename,
      pwr_tTime item_time, char* item_nodename, int item_bus, brow_tNode dest,
      flow_eDest dest_code);
  int open_children(WNavBrow* brow, double x, double y, int display_mode);
  char packagename[120];
  pwr_tTime time;
  char nodename[32];
  int bus;
};

class WItemPkgFileHier : public WItemPkg {
public:
  WItemPkgFileHier(WNavBrow* brow, const char* item_name,
      char* item_packagename, brow_tNode dest, flow_eDest dest_code);
  int open_children(WNavBrow* brow, double x, double y, int display_mode);
  char packagename[120];
};

class WItemPkgInfoHier : public WItemPkg {
public:
  WItemPkgInfoHier(WNavBrow* brow, const char* item_name,
      char* item_packagename, char* item_nodename, int item_bus,
      brow_tNode dest, flow_eDest dest_code);
  int open_children(WNavBrow* brow, double x, double y, int display_mode);
  char packagename[120];
  char nodename[120];
  int bus;
};

class WItemPkgInfo : public WItemPkg {
public:
  WItemPkgInfo(WNavBrow* brow, const char* item_name, char* item_value,
      brow_tNode dest, flow_eDest dest_code);
  virtual ~WItemPkgInfo();
  char name[120];
  char value[120];
};

class WItemPkgFile : public WItemPkg {
public:
  WItemPkgFile(WNavBrow* brow, const char* item_name, char* item_filename,
      pwr_tTime item_time, int dmode, brow_tNode dest, flow_eDest dest_code);
  virtual ~WItemPkgFile();
  char filename[120];
  pwr_tTime time;
};

#endif
