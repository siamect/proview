/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#include "wb_wnav_brow.h"

void WNavBrow::brow_setup()
{
  brow_sAttributes brow_attr;
  unsigned long mask;

  mask = 0;
  mask |= brow_eAttr_indentation;
  brow_attr.indentation = 0.5;
  mask |= brow_eAttr_annotation_space;
  brow_attr.annotation_space = 0.5;
  brow_SetAttributes(ctx, &brow_attr, mask);
  brow_SetCtxUserData(ctx, userdata);
}

//
//  Free pixmaps
//
void WNavBrow::free_pixmaps()
{
  brow_FreeAnnotPixmap(ctx, pixmap_leaf);
  brow_FreeAnnotPixmap(ctx, pixmap_map);
  brow_FreeAnnotPixmap(ctx, pixmap_openmap);
  brow_FreeAnnotPixmap(ctx, pixmap_ref);
  brow_FreeAnnotPixmap(ctx, pixmap_crossref);
  brow_FreeAnnotPixmap(ctx, pixmap_openattr);
  brow_FreeAnnotPixmap(ctx, pixmap_attr);
  brow_FreeAnnotPixmap(ctx, pixmap_attrarray);
  brow_FreeAnnotPixmap(ctx, pixmap_attrarrayelem);
  brow_FreeAnnotPixmap(ctx, pixmap_crrread);
  brow_FreeAnnotPixmap(ctx, pixmap_crrwrite);
  brow_FreeAnnotPixmap(ctx, pixmap_script);
  brow_FreeAnnotPixmap(ctx, pixmap_file);
  brow_FreeAnnotPixmap(ctx, pixmap_graph);
  brow_FreeAnnotPixmap(ctx, pixmap_symbol);
  brow_FreeAnnotPixmap(ctx, pixmap_morehelp);
  brow_FreeAnnotPixmap(ctx, pixmap_closehelp);
  brow_FreeAnnotPixmap(ctx, pixmap_objname);
  brow_FreeAnnotPixmap(ctx, pixmap_object);
  brow_FreeAnnotPixmap(ctx, pixmap_attrref);
  brow_FreeAnnotPixmap(ctx, pixmap_attrxref);
  brow_FreeAnnotPixmap(ctx, pixmap_ref_err);
  brow_FreeAnnotPixmap(ctx, pixmap_crossref_err);
  brow_FreeAnnotPixmap(ctx, pixmap_attrref_err);
  brow_FreeAnnotPixmap(ctx, pixmap_attrxref_err);
  brow_FreeAnnotPixmap(ctx, pixmap_project);
  brow_FreeAnnotPixmap(ctx, pixmap_database);
  brow_FreeAnnotPixmap(ctx, pixmap_volume);
  brow_FreeAnnotPixmap(ctx, pixmap_docblock);
}

//
//  Create pixmaps for leaf, closed map and open map
//
void WNavBrow::allocate_pixmaps()
{
  brow_LoadPBMs(ctx, "xnav_bitmap_leaf", &pixmap_leaf);
  brow_LoadPBMs(ctx, "xnav_bitmap_map", &pixmap_map);
  brow_LoadPBMs(ctx, "xnav_bitmap_openmap", &pixmap_openmap);
  brow_LoadPBMs(ctx, "xnav_bitmap_ref", &pixmap_ref);
  brow_LoadPBMs(ctx, "xnav_bitmap_crossref", &pixmap_crossref);
  brow_LoadPBMs(ctx, "xnav_bitmap_openattr", &pixmap_openattr);
  brow_LoadPBMs(ctx, "xnav_bitmap_attr", &pixmap_attr);
  brow_LoadPBMs(ctx, "xnav_bitmap_attrarra", &pixmap_attrarray);
  brow_LoadPBMs(ctx, "xnav_bitmap_attrarel", &pixmap_attrarrayelem);
  brow_LoadPBM(ctx, "xnav_bitmap_attrenum", &pixmap_attrenum);
  brow_LoadPBM(ctx, "xnav_bitmap_attrmask", &pixmap_attrmask);
  brow_LoadPBM(ctx, "xnav_bitmap_crrread", &pixmap_crrread);
  brow_LoadPBM(ctx, "xnav_bitmap_crrwrite", &pixmap_crrwrite);
  brow_LoadPBM(ctx, "xnav_bitmap_script", &pixmap_script);
  brow_LoadPBM(ctx, "xnav_bitmap_graph", &pixmap_graph);
  brow_LoadPBM(ctx, "xnav_bitmap_file", &pixmap_file);
  brow_LoadPBM(ctx, "xnav_bitmap_symbol", &pixmap_symbol);
  brow_LoadPBMs(ctx, "xnav_bitmap_morehelp", &pixmap_morehelp);
  brow_LoadPBM(ctx, "xnav_bitmap_closehelp", &pixmap_closehelp);
  brow_LoadPBMs(ctx, "xnav_bitmap_objname", &pixmap_objname);
  brow_LoadPBMs(ctx, "xnav_bitmap_object", &pixmap_object);
  brow_LoadPBMs(ctx, "xnav_bitmap_attrref", &pixmap_attrref);
  brow_LoadPBM(ctx, "xnav_bitmap_attrxref", &pixmap_attrxref);
  brow_LoadPBM(ctx, "xnav_bitmap_ref_err", &pixmap_ref_err);
  brow_LoadPBM(ctx, "xnav_bitmap_crossref_err", &pixmap_crossref_err);
  brow_LoadPBM(ctx, "xnav_bitmap_attrref_err", &pixmap_attrref_err);
  brow_LoadPBM(ctx, "xnav_bitmap_attrxref_err", &pixmap_attrxref_err);
  brow_LoadPBM(ctx, "xnav_bitmap_docblock", &pixmap_docblock);
  brow_LoadPBMs(ctx, "xnav_bitmap_project", &pixmap_project);
  brow_LoadPBMs(ctx, "xnav_bitmap_database", &pixmap_database);
  brow_LoadPBMs(ctx, "xnav_bitmap_volume", &pixmap_volume);
  brow_LoadPBMs(ctx, "xnav_bitmap_castattr", &pixmap_castattr);
  brow_LoadPBMs(ctx, "xnav_bitmap_uncastattr", &pixmap_uncastattr);
  brow_LoadPBMs(ctx, "xnav_bitmap_confcomp", &pixmap_confcomp);
}

//
// Create nodeclasses
//
void WNavBrow::create_nodeclasses()
{
  allocate_pixmaps();

  // Create common-class

  brow_CreateNodeClass(
      ctx, "NavigatorDefault", flow_eNodeGroup_Common, &nc_object);
  brow_AddAnnotPixmap(nc_object, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_object, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_object, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_object, 7, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_object, 11, 0.6, 2, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_object, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create multi object class
  for (int i = 0; i < wnav_eMultiobject_; i++) {
    char name[20];
    flow_eDrawType square_drawtype = flow_eDrawType_Line;
    flow_eDrawType triangle_drawtype = flow_eDrawType_Line;

    sprintf(name, "NavigatorObject%d", i);

    brow_CreateNodeClass(ctx, name, flow_eNodeGroup_Common, &nc_multiobject[i]);
    brow_AddAnnotPixmap(
        nc_multiobject[i], 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
    brow_AddAnnotPixmap(
        nc_multiobject[i], 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);

    switch (i) {
    case wnav_eMultiobject_Normal:
      square_drawtype = flow_eDrawType__;
      triangle_drawtype = flow_eDrawType__;
      break;
    case wnav_eMultiobject_RedSquare:
      square_drawtype = flow_eDrawType_LineRed;
      triangle_drawtype = flow_eDrawType__;
      break;
    case wnav_eMultiobject_YellowSquare:
      square_drawtype = flow_eDrawType_Yellow;
      triangle_drawtype = flow_eDrawType__;
      break;
    case wnav_eMultiobject_GreenSquare:
      square_drawtype = flow_eDrawType_Green;
      triangle_drawtype = flow_eDrawType__;
      break;
    case wnav_eMultiobject_RedTriangle:
      square_drawtype = flow_eDrawType__;
      triangle_drawtype = flow_eDrawType_LineRed;
      break;
    case wnav_eMultiobject_RedSquare_RedTriangle:
      square_drawtype = flow_eDrawType_LineRed;
      triangle_drawtype = flow_eDrawType_LineRed;
      break;
    case wnav_eMultiobject_YellowSquare_RedTriangle:
      square_drawtype = flow_eDrawType_Yellow;
      triangle_drawtype = flow_eDrawType_LineRed;
      break;
    case wnav_eMultiobject_GreenSquare_RedTriangle:
      square_drawtype = flow_eDrawType_Green;
      triangle_drawtype = flow_eDrawType_LineRed;
      break;
    case wnav_eMultiobject_YellowTriangle:
      square_drawtype = flow_eDrawType__;
      triangle_drawtype = flow_eDrawType_Yellow;
      break;
    case wnav_eMultiobject_RedSquare_YellowTriangle:
      square_drawtype = flow_eDrawType_LineRed;
      triangle_drawtype = flow_eDrawType_Yellow;
      break;
    case wnav_eMultiobject_YellowSquare_YellowTriangle:
      square_drawtype = flow_eDrawType_Yellow;
      triangle_drawtype = flow_eDrawType_Yellow;
      break;
    case wnav_eMultiobject_GreenSquare_YellowTriangle:
      square_drawtype = flow_eDrawType_Green;
      triangle_drawtype = flow_eDrawType_Yellow;
      break;
    }

    if (square_drawtype != flow_eDrawType__) {
      brow_AddFilledRect(
          nc_multiobject[i], 1.3, 0.15, 0.4, 0.4, square_drawtype);
      brow_AddRect(
          nc_multiobject[i], 1.3, 0.15, 0.4, 0.4, flow_eDrawType_Line, 0, 0);
    }
    if (triangle_drawtype != flow_eDrawType__) {
      brow_AddFilledTriangle(
          nc_multiobject[i], 1.9, 0.05, 0.5, 0.5, triangle_drawtype);
      brow_AddTriangle(
          nc_multiobject[i], 1.9, 0.05, 0.5, 0.5, flow_eDrawType_Line, 0, 0);
    }

    brow_AddAnnot(nc_multiobject[i], 2.77, 0.6, 0, flow_eDrawType_TextHelvetica,
        2, flow_eAnnotType_OneLine, 0);
    brow_AddAnnot(nc_multiobject[i], 7.7, 0.6, 1, flow_eDrawType_TextHelvetica,
        2, flow_eAnnotType_OneLine, 1);
    brow_AddAnnot(nc_multiobject[i], 11.7, 0.6, 2, flow_eDrawType_TextHelvetica,
        2, flow_eAnnotType_OneLine, 1);
    brow_AddAnnot(nc_multiobject[i], 15.7, 0.6, 3, flow_eDrawType_TextHelvetica,
        2, flow_eAnnotType_OneLine, 1);
    brow_AddAnnotPixmap(
        nc_multiobject[i], 2, 12.9, 0.1, flow_eDrawType_Line, 2, 1);
    brow_AddAnnot(nc_multiobject[i], 13.4, 0.6, 4, flow_eDrawType_TextHelvetica,
        2, flow_eAnnotType_OneLine, 1);
    brow_AddAnnotPixmap(
        nc_multiobject[i], 3, 14.9, 0.1, flow_eDrawType_Line, 2, 1);
    brow_AddAnnot(nc_multiobject[i], 15.4, 0.6, 5, flow_eDrawType_TextHelvetica,
        2, flow_eAnnotType_OneLine, 1);
    brow_AddAnnotPixmap(
        nc_multiobject[i], 4, 16.9, 0.1, flow_eDrawType_Line, 2, 1);
    brow_AddAnnot(nc_multiobject[i], 17.4, 0.6, 6, flow_eDrawType_TextHelvetica,
        2, flow_eAnnotType_OneLine, 1);
    brow_AddAnnotPixmap(
        nc_multiobject[i], 5, 18.9, 0.1, flow_eDrawType_Line, 2, 1);
    brow_AddAnnot(nc_multiobject[i], 19.4, 0.6, 7, flow_eDrawType_TextHelvetica,
        2, flow_eAnnotType_OneLine, 1);
    brow_AddFrame(
        nc_multiobject[i], 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);
  }

  // Create attribute nodeclass

  brow_CreateNodeClass(ctx, "NavigatorAttr", flow_eNodeGroup_Common, &nc_attr);
  brow_AddAnnotPixmap(nc_attr, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_attr, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_attr, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_attr, 8, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_attr, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create attribute nodeclass for fullname display

  brow_CreateNodeClass(
      ctx, "NavigatorAttrFull", flow_eNodeGroup_Common, &nc_attr_full);
  brow_AddAnnotPixmap(nc_attr_full, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_attr_full, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_attr_full, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_attr_full, 25, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_attr_full, 0, 0, 60, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Input with Used and Inverted radiobutton
  brow_CreateNodeClass(
      ctx, "NavigatorAttrInput", flow_eNodeGroup_Common, &nc_attr_input);
  brow_AddRadiobutton(
      nc_attr_input, 14, 0.03, 0.7, 0.7, 0, flow_eDrawType_Line, 1);
  brow_AddRadiobutton(
      nc_attr_input, 18, 0.03, 0.7, 0.7, 1, flow_eDrawType_Line, 1);
  brow_AddAnnotPixmap(nc_attr_input, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_attr_input, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_attr_input, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_attr_input, 8, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddText(nc_attr_input, "Used", 12, 0.6, flow_eDrawType_TextHelvetica, 2);
  brow_AddText(
      nc_attr_input, "Inverted", 15, 0.6, flow_eDrawType_TextHelvetica, 2);
  brow_AddFrame(nc_attr_input, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Input with Inverted radiobutton
  brow_CreateNodeClass(ctx, "NavigatorAttrInputNoinv", flow_eNodeGroup_Common,
      &nc_attr_inputinv);
  brow_AddRadiobutton(
      nc_attr_inputinv, 15, 0.03, 0.7, 0.7, 0, flow_eDrawType_Line, 1);
  brow_AddAnnotPixmap(nc_attr_inputinv, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_attr_inputinv, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_attr_inputinv, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_attr_inputinv, 8, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddText(
      nc_attr_inputinv, "Inverted", 12, 0.6, flow_eDrawType_TextHelvetica, 2);
  brow_AddFrame(
      nc_attr_inputinv, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Input and output with Used radiobutton
  brow_CreateNodeClass(
      ctx, "NavigatorAttrOutput", flow_eNodeGroup_Common, &nc_attr_output);
  brow_AddRadiobutton(
      nc_attr_output, 14, 0.03, 0.7, 0.7, 0, flow_eDrawType_Line, 1);
  brow_AddAnnotPixmap(nc_attr_output, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_attr_output, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_attr_output, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_attr_output, 8, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddText(
      nc_attr_output, "Used", 12, 0.6, flow_eDrawType_TextHelvetica, 2);
  brow_AddFrame(nc_attr_output, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create multiline attribute nodeclass

  brow_CreateNodeClass(ctx, "NavigatorAttrMultiLine", flow_eNodeGroup_Common,
      &nc_attr_multiline);
  brow_AddAnnotPixmap(
      nc_attr_multiline, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(
      nc_attr_multiline, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_attr_multiline, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_attr_multiline, 8, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_MultiLine, 1);
  brow_AddFrame(
      nc_attr_multiline, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create multiline attribute nodeclass for fullname

  brow_CreateNodeClass(ctx, "NavigatorAttrMultiLineFull",
      flow_eNodeGroup_Common, &nc_attr_multiline_full);
  brow_AddAnnotPixmap(
      nc_attr_multiline_full, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(
      nc_attr_multiline_full, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_attr_multiline_full, 2, 0.6, 0, flow_eDrawType_TextHelvetica,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_attr_multiline_full, 25, 0.6, 1,
      flow_eDrawType_TextHelvetica, 2, flow_eAnnotType_MultiLine, 1);
  brow_AddFrame(
      nc_attr_multiline_full, 0, 0, 60, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create attribute nodeclass

  brow_CreateNodeClass(ctx, "NavigatorEnum", flow_eNodeGroup_Common, &nc_enum);
  brow_AddRadiobutton(nc_enum, 12, 0.03, 0.7, 0.7, 0, flow_eDrawType_Line, 1);
  brow_AddAnnotPixmap(nc_enum, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_enum, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_enum, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddFrame(nc_enum, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create attribute nodeclass

  brow_CreateNodeClass(
      ctx, "NavigatorEnumObject", flow_eNodeGroup_Common, &nc_enumobject);
  brow_AddRadiobutton(
      nc_enumobject, 2, 0.03, 0.7, 0.7, 0, flow_eDrawType_Line, 1);
  brow_AddAnnotPixmap(nc_enumobject, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_enumobject, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_enumobject, 4, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddFrame(nc_enumobject, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create table nodeclass

  brow_CreateNodeClass(
      ctx, "NavigatorTable", flow_eNodeGroup_Common, &nc_table);
  brow_AddAnnotPixmap(nc_table, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_table, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_table, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table, 8, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 12, 0.6, 2, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 16, 0.6, 3, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 20, 0.6, 4, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 24, 0.6, 5, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 28, 0.6, 6, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 32, 0.6, 7, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 35, 0.6, 8, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 38, 0.6, 9, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_table, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create text

  brow_CreateNodeClass(ctx, "NavigatorText", flow_eNodeGroup_Common, &nc_text);
  brow_AddAnnotPixmap(nc_text, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_text, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_text, 2, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_text, 7, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_text, 11, 0.6, 2, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_text, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create Header

  brow_CreateNodeClass(
      ctx, "NavigatorHead", flow_eNodeGroup_Common, &nc_header);
  brow_AddAnnotPixmap(nc_header, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_header, 2, 0.6, 0, flow_eDrawType_TextHelveticaBold, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_header, 8, 0.6, 1, flow_eDrawType_TextHelveticaBold, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_header, 0, 0, 20, 0.83, flow_eDrawType_LineGray, 2, 1);

  // Create Header2

  brow_CreateNodeClass(
      ctx, "NavigatorHeadLarge", flow_eNodeGroup_Common, &nc_headerlarge);
  brow_AddAnnotPixmap(nc_headerlarge, 0, 0.5, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_headerlarge, 2, 1.0, 0, flow_eDrawType_TextHelveticaBold, 4,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_headerlarge, 8, 1.0, 1, flow_eDrawType_TextHelveticaBold, 4,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_headerlarge, 0, 0, 20, 1.4, flow_eDrawType_LineGray, -1, 1);

  // Create TableHeader

  brow_CreateNodeClass(
      ctx, "NavigatorTableHead", flow_eNodeGroup_Common, &nc_table_header);
  brow_AddAnnotPixmap(nc_table_header, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_table_header, 2, 0.6, 0, flow_eDrawType_TextHelveticaBold, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 8, 0.6, 1, flow_eDrawType_TextHelveticaBold, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 12, 0.6, 2, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 16, 0.6, 3, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 20, 0.6, 4, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 24, 0.6, 5, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 28, 0.6, 6, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 32, 0.6, 7, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 35, 0.6, 8, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 38, 0.6, 9, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddFrame(nc_table_header, 0, 0, 20, 0.83, flow_eDrawType_LineGray, 2, 1);
}
