/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_watt_h
#define wb_watt_h

/* wb_watt.h -- Object attribute editor */

#include "flow_browapi.h"

#include "wb.h"
#include "wb_ldh.h"
#include "wb_utility.h"

class WAttNav;

class WAtt {
public:
  WAtt(void* wa_parent_ctx, ldh_tSesContext wa_ldhses, pwr_sAttrRef wa_aref,
      int wa_editmode, int wa_advanced_user, int wa_display_objectname);
  virtual ~WAtt();
  void* parent_ctx;
  ldh_tSesContext ldhses;
  pwr_sAttrRef aref;
  int editmode;
  char name[80];
  WAttNav* wattnav;
  void* root_item;
  int input_open;
  int input_multiline;
  void* object;
  void (*close_cb)(void*);
  void (*redraw_cb)(void*);
  void* client_data;
  brow_tObject input_node;
  char input_name[80];
  wb_eUtility utility;
  int pending_close;

  virtual void message(char severity, const char* message)
  {
  }
  virtual void set_prompt(const char* prompt)
  {
  }
  virtual void change_value(int set_focus)
  {
  }
  virtual void change_value_close()
  {
  }
  virtual void pop()
  {
  }
  virtual void print(const char* title)
  {
  }
  virtual void update_title()
  {
  }

  void activate_print();
  void set_editmode(int editmode, ldh_tSesContext ldhses);
  int open_changevalue(const char* name, int close = 0);
  static void message_cb(void* watt, char severity, const char* message);
  static void change_value_cb(void* watt);
};

#endif
