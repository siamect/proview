/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_log_h
#define wb_log_h

#include <string>
#include <vector>

#include "cow_log.h"

#define wlog_cLogFile "$pwrp_db/wb_history.log"

typedef enum {
  wlog_eCategory_,
  wlog_eCategory_WbLogin,
  wlog_eCategory_ConfiguratorSave,
  wlog_eCategory_PlcSave,
  wlog_eCategory_GeSave,
  wlog_eCategory_PlcBuild,
  wlog_eCategory_GeBuild,
  wlog_eCategory_VolumeBuild,
  wlog_eCategory_NodeBuild,
  wlog_eCategory_CreatePackage,
  wlog_eCategory_CopyPackage,
  wlog_eCategory_GeExport,
  wlog_eCategory_UpdateClasses,
  wlog_eCategory_WbLoad,
  wlog_eCategory_VolumeClone,
  wlog_eCategory_DirectoryBuild,
  wlog_eCategory_NewRevision,
  wlog_eCategory_RevisionRestore,
  wlog_eCategory_BuildAll,
  wlog_eCategory__,
} wlog_eCategory;

class VItem {
public:
  VItem(char* t) : text(t), has_comment(false), disable(false)
  {
  }
  std::string text;
  bool has_comment;
  bool disable;
};

class wb_log;
class wb_session;

class wb_log {
public:
  wb_log()
  {
  }
  static void log(wb_session* session, wlog_eCategory category, pwr_tVid vid,
      unsigned int opt = 0);
  static void log(wb_session* session, wlog_eCategory category, pwr_tOid oid,
      unsigned int opt = 0);
  static void log(wb_session* session, wlog_eCategory category,
      pwr_tAttrRef aref, unsigned int opt = 0);
  static void log(wlog_eCategory category, const char* str, const char* comment,
      unsigned int opt = 0);
  static void category_to_string(wlog_eCategory category, char* str);
  static void string_to_category(char* str, wlog_eCategory* category);
  static void push()
  {
    CoLog::dpush();
  }
  static void pull()
  {
    CoLog::dpull();
  }
  static void generate_html(char* filename, pwr_tStatus* sts);
  static void gen_cb(
      void* ctx, pwr_tTime time, char* s1, char* s2, char* s3, char* s4);
  static void filter(std::vector<VItem>& v);
};

#endif
