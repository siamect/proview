/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_cdef_h
#define wb_cdef_h

#include "wb_name.h"

class wb_bdef;
class wb_adef;
class wb_cdrep;
class wb_mvrep;
class wb_object;
class wb_orep;
class wb_attribute;

class wb_cdef : public wb_status {
public:
  wb_cdrep* m_cdrep;

  wb_cdef();
  wb_cdef(wb_cdrep* cdrep);
  wb_cdef(wb_adef&); // x = other_object
  wb_cdef(const wb_orep&); // x = other orep
  wb_cdef(wb_mvrep*, pwr_tCid);
  wb_cdef(const wb_cdef&);
  ~wb_cdef();

  wb_cdef& operator=(const wb_cdef&);
  operator bool() const
  {
    return (m_cdrep != 0);
  }
  operator wb_cdrep*() const
  {
    return m_cdrep;
  }

  bool operator==(wb_cdef&);

  size_t size(pwr_eBix bix);
  pwr_tCid cid();
  pwr_tOid oid()
  {
    pwr_tOid oid = pwr_cNOid;
    return oid;
  } // Fix

  const char* name() const;
  wb_name longName();
  pwr_mClassDef flags();

  wb_bdef bdef(pwr_eBix bix);
  wb_bdef bdef(const char* bname);
  wb_bdef bdef(wb_name bname);

  void templateBody(pwr_tStatus* sts, pwr_eBix bix, void* p, pwr_tOid oid);
  void attrTemplateBody(
      pwr_tStatus* sts, pwr_eBix bix, void* p, wb_attribute& a);
  wb_object classBody(const char* bname);
  wb_cdef super();

private:
  void check() const;
};

#endif
