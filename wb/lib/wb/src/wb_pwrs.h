/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_pwrs_h
#define wb_pwrs_h

/* wb_pwrs.h -- common include file for work bench methods. */

#include "wb_ldh.h"

#ifndef NULL
#define NULL (void*)0
#endif

#define pwrs_cSmdVersionStr "V2.7.0"

typedef struct {
  pwr_tObjName MethodName;
  pwr_tStatus (*Method)();
} pwr_sMethodBinding;

typedef struct {
  pwr_tObjName ClassName;
  pwr_sMethodBinding (*Methods)[];
} pwr_sClassBinding;

#define pwr_BindMethods(Class) pwr_sMethodBinding pwr_g##Class##_Methods[]
#define pwr_BindClasses(Type) pwr_sClassBinding pwr_g##Type##_ClassMethods[]
#define pwr_BindClass(Class)                                                   \
  {                                                                            \
    #Class, (pwr_sMethodBinding(*)[]) pwr_g##Class##_Methods                   \
  }
#define pwr_BindMethod(Method)                                                 \
  {                                                                            \
    #Method, (pwr_tStatus(*)()) Method                                         \
  }

#define pwr_NullMethod                                                         \
  {                                                                            \
    "", NULL                                                                   \
  }

#define pwr_NullClass                                                          \
  {                                                                            \
    "", NULL                                                                   \
  }

/*----------------------------------------------------------------------------*\
  Prototypes for DbCallbacks
\*----------------------------------------------------------------------------*/

typedef pwr_tStatus (*wb_tMethodMenu)(ldh_sMenuCall*);
typedef pwr_tStatus (*wb_tMethodMenuFilter)(ldh_sMenuCall*, pwr_sMenuButton*);
typedef pwr_tStatus (*wb_tMethodAnteCreate)(
    ldh_tSesContext, pwr_tOid, pwr_tCid);
typedef pwr_tStatus (*wb_tMethodPostCreate)(
    ldh_tSesContext, pwr_tOid, pwr_tOid, pwr_tCid);
typedef pwr_tStatus (*wb_tMethodAnteMove)(
    ldh_tSesContext, pwr_tOid, pwr_tOid, pwr_tOid);
typedef pwr_tStatus (*wb_tMethodPostMove)(
    ldh_tSesContext, pwr_tOid, pwr_tOid, pwr_tCid);
typedef pwr_tStatus (*wb_tMethodAnteAdopt)(ldh_tSesContext, pwr_tOid, pwr_tCid);
typedef pwr_tStatus (*wb_tMethodPostAdopt)(
    ldh_tSesContext, pwr_tOid, pwr_tOid, pwr_tCid);
typedef pwr_tStatus (*wb_tMethodAnteUnadopt)(
    ldh_tSesContext, pwr_tOid, pwr_tOid, pwr_tCid);
typedef pwr_tStatus (*wb_tMethodPostUnadopt)(
    ldh_tSesContext, pwr_tOid, pwr_tOid, pwr_tCid);
typedef pwr_tStatus (*wb_tMethodPostRename)(ldh_tSesContext, pwr_tOid);
typedef pwr_tStatus (*wb_tMethodSyntaxCheck)(
    ldh_tSesContext, pwr_tAttrRef, int*, int*);
typedef pwr_tStatus (*wb_tMethodGetIoDeviceData)(
    pwr_tAttrRef, const char*, char*, int);
typedef pwr_tStatus (*wb_tMethodSetIoDeviceData)(
    pwr_tAttrRef, const char*, const char*);
typedef pwr_tStatus (*wb_tMethodPostCopy)(
    ldh_tSesContext, pwr_tOid, pwr_tOid, pwr_tCid);

#endif
