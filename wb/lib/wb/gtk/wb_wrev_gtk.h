/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_wrev_gtk_h
#define wb_wrev_gtk_h

/* wb_wrev_gtk.h -- Package window */

#include "wb_wrev.h"

#include "cow_wow_gtk.h"

class WRevGtk : public WRev {
public:
  WRevGtk(
      GtkWidget* wa_parent_wid, void* wa_parent_ctx, ldh_tSession wb_ldhses);
  ~WRevGtk();
  GtkWidget* parent_wid;
  GtkWidget* brow_widget;
  GtkWidget* form_widget;
  GtkWidget* toplevel;
  GtkWidget* msg_label;
  GtkWidget* wrevnav_form;
  GtkWidget* india_widget;
  GtkWidget* india_label1;
  GtkWidget* india_label2;
  GtkWidget* india_text1;
  GtkWidget* india_text2;
  GdkCursor* clock_cursor;
  CoWowFocusTimerGtk focustimer;

  void message(char severity, const char* message);
  void pop();
  void set_clock_cursor();
  void reset_cursor();
  void flush();
  void create_input_dialog();
  void open_input_dialog(const char* text1, const char* text2,
      const char* title, const char* init_text1, const char* init_text2,
      void (*ok_cb)(WRev*, char*, char*));

  static void activate_store(GtkWidget* w, gpointer data);
  static void activate_restore(GtkWidget* w, gpointer data);
  static void activate_delete(GtkWidget* w, gpointer data);
  static void activate_build(GtkWidget* w, gpointer data);
  static void activate_history(GtkWidget* w, gpointer data);
  static void activate_zoom_in(GtkWidget* w, gpointer data);
  static void activate_zoom_out(GtkWidget* w, gpointer data);
  static void activate_zoom_reset(GtkWidget* w, gpointer data);
  static void activate_exit(GtkWidget* w, gpointer data);
  static void activate_help(GtkWidget* w, gpointer data);
  static void activate_india_ok(GtkWidget* w, gpointer data);
  static void activate_india_cancel(GtkWidget* w, gpointer data);
  static gboolean action_inputfocus(
      GtkWidget* w, GdkEvent* event, gpointer data);
};

#endif
