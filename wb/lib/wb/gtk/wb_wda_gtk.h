/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_wda_gtk_h
#define wb_wda_gtk_h

/* wb_wda_gtk.h -- Spreadsheet editor */

#include "wb_wda.h"

#include "cow_wow_gtk.h"

class WdaGtk : public Wda {
public:
  WdaGtk(GtkWidget* wa_parent_wid, void* wa_parent_ctx,
      ldh_tSesContext wa_ldhses, pwr_tObjid wa_objid, pwr_tClassId wa_classid,
      const char* wa_attribute, int wa_editmode, int wa_advanced_user,
      int wa_display_objectname);
  ~WdaGtk();
  GtkWidget* parent_wid;
  GtkWidget* brow_widget;
  GtkWidget* form_widget;
  GtkWidget* toplevel;
  GtkWidget* msg_label;
  GtkWidget* cmd_prompt;
  GtkWidget* cmd_input;
  GtkWidget* cmd_scrolledinput;
  GtkWidget* cmd_scrolled_ok;
  GtkWidget* cmd_scrolled_ca;
  GtkWidget* cmd_scrolledtextview;
  GtkTextBuffer* cmd_scrolled_buffer;
  GtkWidget* pane;
  GtkWidget* wdaclass_dia;
  GtkWidget* wdaclass_hiervalue;
  GtkWidget* wdaclass_namevalue;
  GtkWidget* wdaclass_classvalue;
  GtkWidget* wdaclass_attrobjects;
  GtkWidget* wdaattr_dia;
  static CoWowRecall value_recall;
  CoWowEntryGtk* cmd_entry;
  CoWowFocusTimerGtk focustimer;

  void message(char severity, const char* message);
  void set_prompt(const char* prompt);
  void change_value(int set_focus);
  void change_value_close();
  void pop();
  void open_class_dialog(char* hierstr, char* classstr, char* namestr);
  void create_class_dialog();
  void print(const char* title);
  void update_title();

  static void activate_change_value(GtkWidget* w, gpointer data);
  static void activate_close_changeval(GtkWidget* w, gpointer data);
  static void activate_exit(GtkWidget* w, gpointer data);
  static void activate_export_text(GtkWidget* w, gpointer data);
  static void activate_import_text(GtkWidget* w, gpointer data);
  static void activate_print(GtkWidget* w, gpointer data);
  static void activate_setclass(GtkWidget* w, gpointer data);
  static void activate_setattr(GtkWidget* w, gpointer data);
  static void activate_nextattr(GtkWidget* w, gpointer data);
  static void activate_prevattr(GtkWidget* w, gpointer data);
  static void activate_help(GtkWidget* w, gpointer data);
  static void activate_cmd_input(GtkWidget* w, gpointer data);
  static gboolean action_inputfocus(
      GtkWidget* w, GdkEvent* event, gpointer data);
  static void valchanged_cmd_input(GtkWidget* w, gpointer data);
  static void activate_cmd_scrolled_ok(GtkWidget* w, gpointer data);
  static void activate_cmd_scrolled_ca(GtkWidget* w, gpointer data);
  static void class_activate_ok(GtkWidget* w, gpointer data);
  static void class_activate_cancel(GtkWidget* w, gpointer data);
};

#endif
