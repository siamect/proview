/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef wb_cmdc_h
#define wb_cmdc_h

#include "co_dcli_input.h"

#include "wb_wnav.h"

class Cmd {
public:
  Cmd();
  void parse(int argc, char* argv[]);
  int utilities(char* str);

  wb_eUtility ctx_type;
  ldh_tSesContext ldhses;
  ldh_tWBContext wbctx;
  ldh_tVolContext volctx;
  pwr_tVolumeId volid;
  WNav* wnav;
  int wb_type;
  dcli_sChannel chn;
  dcli_sRecall* recall_buf;
  static char cmd_volume[80];
  static char* cmd_volume_p;
  static char cmd_classvolume[80];
  static unsigned int cmd_options;

  int detach_volume();
  static void usage();
  static int get_wbctx(void* ctx, ldh_tWBContext* wbctx);
  static int attach_volume_cb(void* ctx, pwr_tVolumeId volid, int pop);
  static int detach_volume_cb(void* ctx);
  static void save_cb(void* ctx, int quiet);
  static void revert_ok(Cmd* cmd);
  static void revert_cb(void* ctx, int confirm);
  static void close_cb(void* ctx);
};

#endif
