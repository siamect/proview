/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef xtt_log_h
#define xtt_log_h

#include "pwr_privilege.h"

#include "rt_sevcli.h"

#include "glow.h"

/* xtt_log.h -- Sev Table Viewer */

class LogNav;
class LogNav_hier;
class XttSevHist;
class CoLogin;
class CoWow;

class XttLog {
public:
  XttLog(void* xn_parent_ctx, LogNav_hier *xn_tree);
  void* parent_ctx;
  char name[80];
  LogNav* lognav;
  LogNav_hier *tree;
  CoLogin* cologin;
  int command_open;
  void (*close_cb)(void*);
  char base_user[80];
  char user[80];
  unsigned int base_priv;
  unsigned int priv;
  int verify;
  int ccm_func_registred;
  CoWow* wow;
  int quiet;

  virtual void message(char severity, const char* message)
  {
  }
  virtual void set_prompt(const char* prompt)
  {
  }

  int is_authorized(unsigned int access = pwr_mAccess_AllSev, int msg = 1);
  void open_login();
  void logout();
  void activate_print();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_help();
  void activate_help_project();
  void activate_help_proview();

  static void message(void* attr, char severity, const char* message);
  static int is_authorized(void* ctx, unsigned int access, int msg);
  static int command_cb(void* ctx, char* cmd);
  static void delete_item_yes(void* ctx, void* data);
  static int sevhist_get_select_cb(
      void* ctx, pwr_tOid* oid, char* aname, char* oname);
  static void sevhist_help_cb(void* ctx, const char* key);
  virtual ~XttLog();

  int command(char* input_str);
  int readcmdfile(char* incommand);
  int read_bootfile(char* systemname, char* systemgroup);
};

#endif
