/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef ge_attrnav_qt_h
#define ge_attrnav_qt_h

/* xtt_attrnav_qt.h -- Simple navigator */

#include "ge_attrnav.h"

#include <QObject>
#include <QWidget>

class AttrNavQtTraceObject;

//! The navigation area of the attribute editor.
class AttrNavQt : public AttrNav {
public:
  AttrNavQt(void* xn_parent_ctx, attr_eType xn_type, const char* xn_name,
      attr_sItem* xn_itemlist, int xn_item_cnt, QWidget** w,
      pwr_tStatus* status);
  ~AttrNavQt();

  QWidget* brow_widget;
  QWidget* form_widget;

  void start_trace(pwr_tObjid Objid, char* object_str);
  void set_inputfocus();
  void trace_start();

private:
  AttrNavQtTraceObject* trace_obj;
};

class AttrNavQtTraceObject : public QObject {
  Q_OBJECT

public:
  AttrNavQtTraceObject(AttrNavQt* parent);

public slots:
  void trace_scan();

private:
  AttrNavQt* attrnav;
  QTimer* trace_timerid;
};

#endif
