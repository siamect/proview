/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef ge_attr_qt_h
#define ge_attr_qt_h

#include "cow_wow_qt.h"

#include "ge_attr.h"

#include <QLabel>
#include <QSplitter>
#include <QTextEdit>

/* ge_attr.h -- Ge attribute editor */

/*! \brief Contains the AttrQt class. */
/*! \addtogroup Ge */

class AttrQtWidget;

//! Attribute editor.
/*! Displays grow attributes and dynamic attributes for an object or graph. */
class AttrQt : public Attr {
public:
  AttrQt(QWidget* a_parent_wid, void* a_parent_ctx, attr_eType a_type,
      void* a_object, attr_sItem* itemlist, int item_cnt);

  AttrQtWidget* toplevel;
  QWidget* brow_widget;
  QWidget* form_widget;
  QLabel* msg_label;
  QLabel* cmd_prompt;
  QWidget* cmd_scrolledinput;
  QTextEdit* cmd_scrolled_buffer;
  QSplitter* pane;
  static CoWowRecall value_recall;
  CoWowEntryQt* cmd_entry;
  int input_max_length;

  void message(char severity, const char* message);
  void message_popup(char severity, const char* message);
  void set_prompt(const char* prompt);
  void change_value();
  int reconfigure_attr();

  ~AttrQt();
};

class AttrQtWidget : public QDialog {
  Q_OBJECT

public:
  AttrQtWidget(AttrQt* parent_ctx, QWidget* parent)
      : QDialog(parent), attr(parent_ctx) {}

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void attr_activate_changevalue();
  void attr_activate_store();
  void attr_activate_recall();
  void attr_activate_help();
  void attr_activate_recall_prev();
  void attr_activate_cmd_entry();
  void attr_activate_cmd_scrolled_ok();
  void attr_activate_cmd_scrolled_ca();

  void action_text_inserted();

private:
  AttrQt* attr;
};

#endif
