/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef ge_item_view_qt_h
#define ge_item_view_qt_h

#include "ge.h"

#include <QCheckBox>
#include <QFileSystemWatcher>
#include <QTreeWidget>

class GeItemViewQt : public QWidget {
  Q_OBJECT

private:
  Ge* ge_ctx;
  QTreeWidget* tree_widget;
  QCheckBox* autosave_button;

public:
  GeItemViewQt(Ge* gectx);

  void update();
  void update(const char*, int);
  QString selected_text();
  QString selected_text(QTreeWidget*);

protected:
  void contextMenuEvent(QContextMenuEvent* event);

private:
  QStringList files;
  QFileSystemWatcher* watcher;

public slots:
  void directory_changed(const QString& path);
  void activate_menu_open();
  void activate_menu_delete();
  void activate_tree_widget(QTreeWidgetItem* item, int idx);
  void autosave_toggled(int set);
};

#endif
