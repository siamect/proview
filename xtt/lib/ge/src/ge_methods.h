/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef ge_methods_h
#define ge_methods_h

#include "pwr.h"
#include "pwr_baseclasses.h"

class GeMethods {
public:
  static const int opmeth_size = 12;
  static const int mntmeth_size = 32;
  static const unsigned int op_helpmask = 1 << 8;
  static const unsigned int mnt_helpmask = 1 << 4;
  static pwr_tString80 op_name[opmeth_size];
  static pwr_tString80 op_subgraph[opmeth_size];
  static pwr_tString80 op_image[opmeth_size];
  static pwr_tString80 op_tooltip[opmeth_size];
  static pwr_tString80 op_method[opmeth_size];
  static pwr_tString80 op_filter[opmeth_size];
  static pwr_tString80 mnt_name[mntmeth_size];
  static pwr_tString80 mnt_subgraph[mntmeth_size];
  static pwr_tString80 mnt_image[mntmeth_size];
  static pwr_tString80 mnt_tooltip[mntmeth_size];
  static pwr_tString80 mnt_method[mntmeth_size];
  static pwr_tString80 mnt_filter[mntmeth_size];

  static int get_xm_mask(pwr_tAttrRef* arp, char* name,
      pwr_sClass_XttMethodsMask* xm_mask, int* configured,
      int(command_cb)(char* cmd, void* udata), void* udata);
};

#endif
