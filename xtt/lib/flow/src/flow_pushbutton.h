/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef flow_pushbutton_h
#define flow_pushbutton_h

#include "flow_rect.h"
#include "flow_text.h"

class FlowPushButton : public FlowArrayElem {
public:
  FlowPushButton(FlowCtx* flow_ctx, char* p_name, double x1, double y1,
      double width, double height);
  friend std::ostream& operator<<(std::ostream& o, const FlowPushButton p);
  int event_handler(flow_eEvent event, int x, int y);
  void zoom(){}
  void nav_zoom(){}
  void print_zoom(){}
  void traverse(int x, int y){}
  void print(double ll_x, double ll_y, double ur_x, double ur_y){}
  void draw(int ll_x, int ll_y, int ur_x, int ur_y);
  void get_borders(
      double* x1_right, double* x1_left, double* y1_high, double* y1_low){}
  void get_borders(double pos_x, double pos_y, double* x_right, double* x_left,
      double* y_high, double* y_low){}
  double zoom_factor;
  FlowCtx* ctx;
  FlowPoint pos;
  char name[32];
  FlowRect r;
  FlowText t;
  void conpoint_refcon_redraw(void* node, int conpoint){}
  void conpoint_refcon_erase(void* node, int conpoint){}
  void remove_notify(){}
};

#endif
