/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef flow_printdraw_gtk_h
#define flow_printdraw_gtk_h

#include "cow_gtk.h"

#include "flow_printdraw.h"

class FlowPrintDrawGtk : public FlowPrintDraw {
public:
  FlowPrintDrawGtk(void* context, const char* title, int page, void* flow_ctx,
      int page_border, int* sts);
  ~FlowPrintDrawGtk();
  int print_page(double ll_x, double ll_y, double ur_x, double ur_y);
  int rect(double x, double y, double width, double height, flow_eDrawType type,
      double idx, int highlight);
  int filled_rect(double x, double y, double width, double height,
      flow_eDrawType type, double idx);
  int arc(double x, double y, double width, double height, int angle1,
      int angle2, flow_eDrawType type, double idx, int highlight);
  int line(double x1, double y1, double x2, double y2, flow_eDrawType type,
      double idx, int highlight);
  int text(double x, double y, char* text, int len, flow_eDrawType type,
      double size, int line);
  int pixmap(
      double x, double y, flow_sPixmapDataElem* data, flow_eDrawType type);
  int image(double x, double y, double width, double height,
      flow_tImImage image, flow_eDrawType type);
  int arrow(double x1, double y1, double x2, double y2, double x3, double y3,
      flow_eDrawType type, double idx);
  void set_showred(int show)
  {
    show_red = show;
  }
  GtkPrintContext* print_ctx;
  int border;
  FlowCtx* ctx;
  int show_red;
  cairo_t* cairo;
  double page_x;
  double page_y;
  char title[80];
  int page;
};

#endif
