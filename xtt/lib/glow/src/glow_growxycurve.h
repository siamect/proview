/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef glow_growxycurve_h
#define glow_growxycurve_h

#include "glow_growtrend.h"

/*! \file glow_growcurve.h
    \brief Contains the GrowXYCurve class. */
/*! \addtogroup Glow */
/*@{*/

//! Class for drawing xy-curves in a trend window.
/*! A GrowXYCurve object is an object that draws a number of curves specified by
  points
  with x and y coordinates. The curves are drawn filled or unfilled.
*/

class GrowXYCurve : public GrowTrend {
public:
  //! Constuctor
  /*!
    \param glow_ctx 	The glow context.
    \param name		Name (max 31 char).
    \param x		x coordinate for position.
    \param y		y coordinate for position.
    \param w		Width.
    \param h		Height.
    \param border_d_type Border color.
    \param line_w	Linewidth of border.
    \param display_lev	Displaylevel when this object is visible.
    \param fill_rect	Rectangle is filled.
    \param display_border Border is visible.
    \param fill_d_type	Fill color.
    \param nodraw	Don't draw the object now.
  */
  GrowXYCurve(GrowCtx* glow_ctx, const char* name, double x = 0, double y = 0,
      double w = 0, double h = 0,
      glow_eDrawType border_d_type = glow_eDrawType_Line, int line_w = 1,
      glow_mDisplayLevel display_lev = glow_mDisplayLevel_1, int fill_rect = 0,
      int display_border = 1, glow_eDrawType fill_d_type = glow_eDrawType_Line,
      int nodraw = 0);

  //! Get the object type
  /*!
    \return The type of the object.
  */
  glow_eObjectType type()
  {
    return glow_eObjectType_GrowXYCurve;
  }

  void save(std::ofstream& fp, glow_eSaveMode mode);
  void open(std::ifstream& fp);

  void set_xy_range_x(int curve, double min, double max);
  void set_xy_range_y(int curve, double min, double max);
  void get_xy_range_x(int curve, double *min, double *max);
  void get_xy_range_y(int curve, double *min, double *max);
  void set_xy_noofcurves(int noofcurves);
  int get_xy_noofpoints() {return no_of_points;}
  void set_xy_curve_color(
      int curve, glow_eDrawType curve_color, glow_eDrawType fill_color);
  void set_xy_data(
      double* y_data, double* x_data, int curve_idx, int data_points);
  void export_javabean(GlowTransform* t, void* node, glow_eExportPass pass,
      int* shape_cnt, int node_cnt, int in_nc, std::ofstream& fp);
  int get_java_name(char* name);
};

/*@}*/
#endif
