/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef glow_colpalapi_h
#define glow_colpalapi_h

#ifndef __cplusplus
typedef void* ColPalCtx;
#ifndef glow_api_h
typedef void* GlowCtx;
#endif
#endif

#include "glow.h"

#if defined __cplusplus
extern "C" {
#endif

/*! \file glow_colpalapi.h
    \brief Contains c API for the color palette, i.e. the ColPalCtx class. */
/*! \addtogroup GlowColPalApi */
/*@{*/

typedef ColPalCtx* colpal_tCtx;

//! Enable an event an register a callback function for the event.
/*!
  \param ctx		Colorpalette context.
  \param event	Event to enable.
  \param event_type	Eventtype of the event.
  \param event_cb	Callback function for the event.
*/
void colpal_EnableEvent(ColPalCtx* ctx, glow_eEvent event,
    glow_eEventType event_type,
    int (*event_cb)(GlowCtx* ctx, glow_tEvent event));

//! Disable an event.
/*!
  \param ctx		Colorpalette context.
  \param event	Event to disable.
*/
void colpal_DisableEvent(ColPalCtx* ctx, glow_eEvent event);

//! Disable all events.
/*!
  \param ctx		Colorpalette context.
*/
void colpal_DisableEventAll(ColPalCtx* ctx);

//! Get user data.
/*!
  \param ctx		Colorpalette context.
  \param user_data	User data.
*/
void colpal_GetCtxUserData(colpal_tCtx ctx, void** user_data);

//! Set user data.
/*!
  \param ctx		Colorpalette context.
  \param user_data	User data.
*/
void colpal_SetCtxUserData(colpal_tCtx ctx, void* user_data);

//! Get the currently selected colors.
/*!
  \param ctx		Colorpalette context.
  \param fill_color	Selected fill color.
  \param border_color	Selected border color.
  \param text_color	Selected text color.
*/
void colpal_GetCurrentColors(colpal_tCtx ctx, glow_eDrawType* fill_color,
    glow_eDrawType* border_color, glow_eDrawType* text_color);

//! Set the currently selected colors.
/*!
  \param ctx		Colorpalette context.
  \param fill_color	Fill color.
  \param border_color	Border color.
  \param text_color	Text color.
*/
void colpal_SetCurrentColors(colpal_tCtx ctx, glow_eDrawType fill_color,
    glow_eDrawType border_color, glow_eDrawType text_color);

void colpal_GetCurrentColorTone(colpal_tCtx ctx, glow_eDrawType* tone);

void colpal_SetCurrentColorTone(colpal_tCtx ctx, glow_eDrawType tone);

colpal_eActive colpal_GetActive(colpal_tCtx ctx);

void colpal_UpdateCustomColors(colpal_tCtx ctx, void* customcolors);

/*@}*/
#if defined __cplusplus
}
#endif
#endif
