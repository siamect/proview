/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cow_statusmon_nodelist_qt_h
#define cow_statusmon_nodelist_qt_h

/* cow_statusmon_nodelist_qt.h -- Status Monitor */

#include "cow_statusmon_nodelist.h"

#include "cow_wow_qt.h"

#include <QLabel>

class NodelistQt;
class NodelistQtWidget;

class NodelistInputDialogQt : public QDialog {
  Q_OBJECT

public:
  NodelistInputDialogQt(
      NodelistQt* parent_ctx, QWidget* parent, const char* title,
      const char* label1, const char* label2, const char* label3,
      const char* txt1, const char* txt2 = "", const char* txt3 = "",
      bool input_callback = true);

  QLabel* label;
  QLabel* label2;
  QLabel* label3;
  QLineEdit* text;
  QLineEdit* text2;
  QLineEdit* text3;
  void (*ok_cb)(Nodelist*, char*, char*, char*);

public slots:
  void activate_ok();
  void activate_cancel();

private:
  NodelistQt* nodelist;
};

class NodelistQt : public Nodelist {
public:
  NodelistQt(void* nodelist_parent_ctx, const char* nodelist_name,
      int nodelist_mode, int nodelist_view_node_descr, int msgw_pop,
      pwr_tStatus* status);
  ~NodelistQt();

  QWidget* nodelistnav_widget;

  CoWowFocusTimerQt focustimer;

  void pop();
  void set_clock_cursor();
  void reset_cursor();
  void open_add_input_dialog(const char* text, const char* text2,
      const char* text3, const char* title, const char* init_text,
      void (*ok_cb)(Nodelist*, char*, char*, char*));
  void open_mod_input_dialog(const char* text, const char* text2,
      const char* text3, const char* title, const char* init_text,
      const char* init_text2, const char* init_text3,
      void (*ok_cb)(Nodelist*, char*, char*, char*));

private:
  NodelistQtWidget* toplevel;
};

class NodelistQtWidget : public QWidget {
  Q_OBJECT

public:
  NodelistQtWidget(NodelistQt* parent_ctx) : QWidget(), nodelist(parent_ctx) {}

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_add_node();
  void activate_modify_node();
  void activate_remove_node();
  void activate_open_xtt();
  void activate_open_opplace();
  void activate_open_rtmon();
  void activate_save();
  void activate_show_events();
  void activate_pop_events();
  void activate_gui_gtk();
  void activate_gui_qt();
  void activate_mode();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_help();

private:
  NodelistQt* nodelist;
};

#endif
