/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef QT_HELPERS_H
#define QT_HELPERS_H

#include "co_log.h"

#include <QAction>
#include <QComboBox>
#include <QLabel>
#include <QSplitter>
#include <QStatusBar>
#include <QString>
#include <QToolBar>

/*
 * Qt Helper functions
 */
QString fl(const char* text);

#ifndef qPrintableLatin1
#define qPrintableLatin1(string) (string).toLatin1().data()
#endif
QString convert_utf8(const char* str);
QString translate_utf8(const char* str);
void pop(QWidget* w);
QIcon get_icon(const char* iconName);
QAction* addMenuItem(QObject* parent, QMenu* menu, const char* text,
    const char* callback, const char* shortcut = "", const char* iconName = "");
QAction* addCheckableMenuItem(QObject* parent, QMenu* menu, const char* text,
    const char* callback, const char* shortcut = "", const char* iconName = "");
QAction* addMenuRadioItem(QObject* parent, QMenu* menu, const char* text,
    const char* callback, QActionGroup* group, const char* shortcut = "");
QAction* addToolItem(QObject* parent, QToolBar* tools, const char* text,
    const char* callback, const char* iconName);
QAction* addCheckableToolItem(QObject* parent, QToolBar* tools,
    const char* text, const char* callback, const char* iconName);
QComboBox* addToolMenu(QWidget* parent, QToolBar* tools, const char* callback);
QWidget* layout_to_widget(QLayout* layout);
void set_pane_position(QSplitter* pane, int right);
QFrame* separator(QFrame::Shape shape);
QLabel* new_image_label(QWidget* parent, const char* filename);
void fixed_put(QWidget* parent, QWidget* widget, int x, int y);
void add_expanding(QStatusBar* statusbar, QWidget* widget);
void add_expanding(QSplitter* splitter, QWidget* widget);
void add_expanding(QSplitter* splitter, QLayout* widget);
void add_expanding(QLayout* layout, QWidget* widget);
void add_expanding(QLayout* layout, QLayout* widget);

QFrame* wrapInFrame(QFrame* widget);

void initOneShotTimer(QTimer* timer, const char* slot, int time);

#endif // QT_HELPERS_H
