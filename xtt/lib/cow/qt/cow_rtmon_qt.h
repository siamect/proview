/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cow_rtmon_qt_h
#define cow_rtmon_qt_h

/* cow_rtmon_qt.h -- Status Monitor */

#include "cow_rtmon.h"

#include <QAction>
#include <QHBoxLayout>
#include <QLabel>
#include <QWidget>

class RtMonQtWidget;

class RtMonQt : public RtMon {
public:
  RtMonQt(void* rtmon_parent_ctx, const char* rtmon_name,
      const char* rtmon_display, pwr_tStatus* status);
  ~RtMonQt();

  QWidget* nodelistnav_widget;
  QLabel* bbox_label;
  QWidget* bbox_start;
  QWidget* bbox_restart;
  QWidget* bbox_stop;
  QLabel* bbox_image;
  QLabel* bbox_image_gray;
  QHBoxLayout *bbox_vbox;
  QAction* tools_xtt;
  QAction* tools_op;
  QAction* file_xtt;
  QAction* file_op;
  QTimer* timerid;
  pwr_tStatus old_status;

  void pop();
  void set_clock_cursor();
  void reset_cursor();
  void open_input_dialog(
      char* text, char* title, char* init_text, void (*ok_cb)(RtMon*, char*));

private:
  RtMonQtWidget* toplevel;
};

class RtMonQtWidget : public QWidget {
  Q_OBJECT

public:
  RtMonQtWidget(RtMonQt* parent_ctx) : QWidget(), rtmon(parent_ctx) {}

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_start();
  void activate_restart();
  void activate_stop();
  void activate_reset();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_xtt();
  void activate_op();
  void activate_help();

  void rtmon_scan();

private:
  RtMonQt* rtmon;
};

#endif
