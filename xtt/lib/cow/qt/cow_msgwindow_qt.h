/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cow_msgwindow_qt_h
#define cow_msgwindow_qt_h

/* cow_msgwindow_qt.h -- Message window */

#include "cow_msgwindow.h"

#include "cow_wow_qt.h"

class MsgWindowQtWidget;

class MsgWindowQt : public MsgWindow {
public:
  MsgWindowQt(void* msg_parent_ctx, const char* msg_name, pwr_tStatus* status);

  QWidget* nav_widget;
  CoWowFocusTimerQt focustimer;
  CoWowFocusTimerQt maptimer;

  void map();
  void unmap();
  void print();

private:
  MsgWindowQtWidget* toplevel;
};

class MsgWindowQtWidget : public QWidget {
  Q_OBJECT

public:
  MsgWindowQtWidget(MsgWindowQt* parent_ctx) : QWidget(), msgwin(parent_ctx) {}

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_print();
  void activate_exit();
  void activate_clear();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_help();
  void activate_help_message();

private:
  MsgWindowQt* msgwin;
};

#endif
