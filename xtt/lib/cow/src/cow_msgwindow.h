/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cow_msgwindow_h
#define cow_msgwindow_h

/* cow_msgwindow.h -- Message window */

#include "co_error.h"

#include "cow_msglist.h"

typedef enum { msgw_ePop_No, msgw_ePop_Yes, msgw_ePop_Default } msgw_ePop;

typedef enum { msgw_eRow_, msgw_eRow_Plc, msgw_eRow_Ge } msgw_eRow;

class CoWow;
class CoWowFocusTimer;

class MsgWindow {
public:
  MsgWindow(void* msg_parent_ctx, const char* msg_name, pwr_tStatus* status);
  virtual ~MsgWindow();

  void* parent_ctx;
  char name[80];
  MsgList* msgnav;
  int displayed;
  int deferred_map;
  int nodraw;
  int size;
  int max_size;
  void (*find_wnav_cb)(void*, pwr_tObjid);
  void (*find_plc_cb)(void*, pwr_tObjid);
  void (*find_ge_cb)(void*, char*, void*);
  CoWow* wow;

  static MsgWindow* default_window;
  static int hide_info;

  virtual void map();
  virtual void unmap();
  virtual void print();

  int is_mapped();
  void insert(int severity, const char* text, pwr_tOid oid = pwr_cNOid,
      msgw_eRow row = msgw_eRow_);
  void insert(int severity, const char* text, char* object, void* utility,
      msgw_eRow row = msgw_eRow_);
  void set_nodraw();
  void reset_nodraw();
  void msg(int severity, const char* text, msgw_ePop pop = msgw_ePop_Default,
      pwr_tOid oid = pwr_cNOid, msgw_eRow row = msgw_eRow_);
  void activate_print();
  static void set_default(MsgWindow* msgw);
  static int has_default();
  static void message(int severity, const char* text,
      msgw_ePop pop = msgw_ePop_Default, pwr_tOid oid = pwr_cNOid,
      msgw_eRow row = msgw_eRow_);
  static void message(int severity, const char* text, msgw_ePop pop,
      char* object, void* utility, msgw_eRow row = msgw_eRow_);
  static void message(const co_error& e, const char* text1 = 0,
      const char* text2 = 0, pwr_tOid oid = pwr_cNOid,
      msgw_eRow row = msgw_eRow_);
  static void message(int severity, const char* text1, const char* text2,
      const char* text3 = 0, pwr_tOid oid = pwr_cNOid,
      msgw_eRow row = msgw_eRow_);
  static void message(int severity, const char* text1, const char* text2,
      const char* text3, char* object, void* utility,
      msgw_eRow row = msgw_eRow_);
  static bool has_window();
  static CoWow* get_wow();
  static void map_default();
  static void dset_nodraw();
  static void dreset_nodraw();
  static void hide_info_messages(int hide);
  static void msgw_find_wnav_cb(void* ctx, pwr_tOid oid);
  static void msgw_find_plc_cb(void* ctx, pwr_tOid oid);
  static void msgw_find_ge_cb(void* ctx, char* object, void* utility);
};

#endif
