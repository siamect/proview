/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#include "co_cdh.h"
#include "co_dcli.h"
#include "co_time.h"
#include "co_lng.h"
#include "cow_xhelp.h"

CoXHelp* CoXHelp::default_xhelp = 0;

void CoXHelp::open_URL(void* ctx, char* url)
{
  CoXHelp* xhelp = (CoXHelp*)ctx;

  if (xhelp->open_URL_cb)
    (xhelp->open_URL_cb)(xhelp->parent_ctx, url);
}

void CoXHelp::find_ok(CoXHelp* xhelp, char* search_str)
{
  xhelp->xhelpnav->search(search_str, false);
}

void CoXHelp::pop()
{
  ((CoXHelpNav*)xhelpnav)->pop();
  displayed = 1;
}

void CoXHelp::clear()
{
  xhelpnav->brow_push_all();
  xhelpnav->clear();
}

int CoXHelp::help(const char* key, const char* help_bookmark,
    navh_eHelpFile file_type, const char* file_name, bool strict)
{
  return xhelpnav->help(key, help_bookmark, file_type, file_name, 0, strict);
}

int CoXHelp::home()
{
  return xhelpnav->home();
}

int CoXHelp::back()
{
  return xhelpnav->back();
}

int CoXHelp::next_topic()
{
  return xhelpnav->next_topic();
}

int CoXHelp::previous_topic()
{
  return xhelpnav->previous_topic();
}

//
//  Static function to call help for the default xhelp
//
int CoXHelp::dhelp(const char* key, const char* help_bookmark,
    navh_eHelpFile file_type, const char* file_name, bool strict)
{
  if (!default_xhelp)
    return 0;

  default_xhelp->clear();
  default_xhelp->pop();
  return default_xhelp->help(key, help_bookmark, file_type, file_name, strict);
}

int CoXHelp::help_index(navh_eHelpFile file_type, const char* file_name)
{
  return xhelpnav->help_index(file_type, file_name, 0);
}

int CoXHelp::dhelp_index(navh_eHelpFile file_type, const char* file_name)
{
  if (!default_xhelp)
    return 0;

  default_xhelp->clear();
  default_xhelp->pop();
  return default_xhelp->help_index(file_type, file_name);
}

CoXHelp::~CoXHelp()
{
}

CoXHelp::CoXHelp(void* xa_parent_ctx, xhelp_eUtility utility, int* xa_sts)
    : parent_ctx(xa_parent_ctx), client_data(0), close_cb(0), open_URL_cb(0),
      set_focus_disabled(0), displayed(0)
{
  *xa_sts = 1;
}
