/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#include "cow_msgwindow.h"
#include "cow_xhelp.h"

extern "C" {
#include "cow_api.h"
#include "co_dcli.h"
}

//
// c api to co_msgwindow
//
void msgw_message(int severity, const char* text, msgw_ePop pop)
{
  MsgWindow::message(severity, text, pop);
}

void msgw_message_sts(pwr_tStatus sts, const char* text1, const char* text2)
{
  MsgWindow::message(co_error(sts), text1, text2);
}

void msgw_message_object(
    pwr_tStatus sts, const char* text1, const char* text2, pwr_tOid oid)
{
  MsgWindow::message(co_error(sts), text1, text2, oid);
}

void msgw_message_plcobject(
    pwr_tStatus sts, const char* text1, const char* text2, pwr_tOid oid)
{
  MsgWindow::message(co_error(sts), text1, text2, oid, msgw_eRow_Plc);
}

void msgw_set_nodraw()
{
  MsgWindow::dset_nodraw();
}

void msgw_reset_nodraw()
{
  MsgWindow::dreset_nodraw();
}

int msgw_has_default()
{
  return MsgWindow::has_default();
}

//
// c api to co_xhelp
//

int xhelp_help(char* key, char* help_bookmark, navh_eHelpFile file_type,
    char* file_name, int strict)
{
  return CoXHelp::dhelp(key, help_bookmark, file_type, file_name, strict != 0);
}
