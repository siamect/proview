/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cow_tree_h
#define cow_tree_h

#include "pwr_privilege.h"

#include "glow.h"

/* cow_tree.h -- Tree viewer */

typedef enum {
  tree_mOptions_LayoutList = 1 << 0,
  tree_mOptions_LayoutTree = 1 << 1,
  tree_mOptions_AlphaOrder = 1 << 2
} tree_mOptions;

class TreeNav;
class CoWow;
class CowTree {
public:
  CowTree(void* xn_parent_ctx, pwr_tAttrRef* xn_itemlist, int xn_item_cnt,
      unsigned int xn_options,
      pwr_tStatus (*get_object_info)(
          void*, pwr_tAttrRef*, char*, int, char*, char*, int),
      pwr_tStatus (*get_node_info)(void*, char*, char*, int),
      pwr_tStatus (*action)(void*, pwr_tAttrRef*));
  void* parent_ctx;
  char name[80];
  TreeNav* treenav;
  void (*close_cb)(void*);
  void (*object_info_cb)(void*, pwr_tAttrRef, char*, char*);
  pwr_tStatus (*get_object_info_cb)(
      void*, pwr_tAttrRef*, char*, int, char*, char*, int);
  pwr_tStatus (*get_node_info_cb)(void*, char*, char*, int);
  pwr_tStatus (*action_cb)(void*, pwr_tAttrRef*);
  CoWow* wow;

  void activate_print();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_help();
  int activate_button_ok();

  virtual void message(char sev, const char* text)
  {
  }
  virtual void pop()
  {
  }

  static void message(void* attr, char severity, const char* message);
  static int cowtree_get_select_cb(
      void* ctx, pwr_tOid* oid, char* aname, char* oname);
  static void cowtree_help_cb(void* ctx, const char* key);
  static int get_select_cb(void* ctx, pwr_tAttrRef* aref);
  static pwr_tStatus get_object_info(void* ctx, pwr_tAttrRef* aref, char* name,
      int nsize, char* cname, char* descr, int dsize);
  static pwr_tStatus get_node_info(
      void* ctx, char* name, char* descr, int dsize);
  static pwr_tStatus action(void* ctx, pwr_tAttrRef* aref);
  virtual ~CowTree();
};

#endif
