/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cow_wow_h
#define cow_wow_h

/* cow_wow -- useful windows */

#include "co_wow_msg.h"
#include "co_lng.h"

typedef enum {
  wow_eFileSelAction_Save,
  wow_eFileSelAction_Open
} wow_eFileSelAction;

typedef enum {
  wow_eFileSelType_,
  wow_eFileSelType_All,
  wow_eFileSelType_Dbs,
  wow_eFileSelType_Wbl,
  wow_eFileSelType_WblClass,
  wow_eFileSelType_Graph,
  wow_eFileSelType_Image,
  wow_eFileSelType_History,
  wow_eFileSelType_Backup,
  wow_eFileSelType_ColorTheme,
  wow_eFileSelType_Tmp,
  wow_eFileSelType__
} wow_eFileSelType;

typedef enum {
  wow_eModalDialogReturn_NYI,
  wow_eModalDialogReturn_Button1,
  wow_eModalDialogReturn_Button2,
  wow_eModalDialogReturn_Button3,
  wow_eModalDialogReturn_Deleted,
  wow_eModalDialogReturn_ReturnPressed
} wow_eMotalDialogReturn;

typedef enum { wow_ePixmap_No, wow_ePixmap_Graph, wow_ePixmap__ } wow_ePixmap;

typedef struct {
  char input_str[200];
  int status;
} wow_sModalInputDialog;

class CoWowWidget {
};

class CoWowTimer {
public:
  void (*m_callback)(void*);
  void* m_data;

  CoWowTimer();
  virtual ~CoWowTimer();
  virtual void add(int time, void (*callback)(void* data), void* data);
  virtual void remove();
};

class CoWowRecall {
public:
  static const int m_recall_size = 30;
  static const int m_line_size = 160;
  char m_recall[m_recall_size][m_line_size];
  int m_current_recall_line;
  int m_current_size;
  int m_tmp_size;
  char tmp[m_recall_size][m_line_size];

  void push(const char* src);
  void resetTmp();
  const char* popUp(const char* src);
  const char* popDown(const char* src);

  CoWowRecall();
};

class CoWow {
protected:
  static bool m_autoremove;
  static bool m_printdialog_disable;
  static char m_default_printer[80];
  static void* m_transient_wid;

public:
  CoWow();
  virtual ~CoWow();

  virtual void DisplayQuestion(void* ctx, const char* title, const char* text,
      void (*questionbox_ok)(void*, void*),
      void (*questionbox_cancel)(void*, void*), void* data);
  virtual void DisplayError(const char* title, const char* text,
      lng_eCoding coding = lng_eCoding_ISO8859_1, int modal = 1);
  virtual void DisplayText(
      const char* title, const char* text, int width = 0, int height = 0);
  virtual void CreateInputDialog(void* ctx, const char* title, const char* text,
      void (*inputdialogbox_ok)(void*, void*, char*),
      void (*inputdialogbox_cancel)(void*, void*), int input_length,
      char* init_text, void* data);
  virtual void* CreateList(const char* title, const char* texts, int textsize,
      void(action_cb)(void*, char*, int), void(cancel_cb)(void*), void* ctx,
      int show_apply_button = 0);
  virtual void PopList(void* ctx);
  virtual void DeleteList(void* ctx);
  virtual void CreateFileSelDia(const char* title, void* parent_ctx,
      void (*file_selected_cb)(void*, char*, wow_eFileSelType),
				wow_eFileSelType file_type, wow_eFileSelAction action);
  virtual int CreateModalDialog(const char* title, const char* text,
      const char* button1, const char* button2, const char* button3,
      const char* image);
  virtual wow_sModalInputDialog* CreateModalInputDialog(const char* title,
      const char* text, const char* button1, const char* button2,
      const char* button3, const char* image, int input_length,
      CoWowRecall* recall = 0);
  virtual void Wait(float time);

  static int HideWarranty();
  void* CreateFileList(const char* title, const char* dir, const char* pattern,
      const char* type, void(action_cb)(void*, char*, int),
      void(cancel_cb)(void*), void* ctx, int show_apply_button = 0);
  virtual int DisplayWarranty();
  virtual void DisplayLicense();
  virtual CoWowTimer* timer_new();
  virtual pwr_tStatus CreateMenuItem(
      const char* name, void* menu, int pixmap, int append, void* w);
  virtual pwr_tStatus DeleteMenuItem(const char* name, void* menu);
  virtual void CreateBrowPrintDialog(const char* title, void* brow_ctx,
      int orientation, double scale, void* parent_widget, pwr_tStatus* sts);
  virtual void CreateFlowPrintDialog(const char* title, void* flow_ctx,
      int orientation, double scale, void* parent_widget, pwr_tStatus* sts);
  static void SetDefaultPrinter(const char* printer);
  static void DisablePrintDialog();
  static bool PrintDialogIsDisabled();
  static void SetAutoRemove(bool on);
  static void SetTransient(void* transient_wid);
};

#endif
