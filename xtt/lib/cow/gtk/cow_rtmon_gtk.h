/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef cow_rtmon_gtk_h
#define cow_rtmon_gtk_h

/* cow_rtmon_gtk.h -- Status Monitor */

#include "cow_gtk.h"

#include "cow_rtmon.h"

class RtMonGtk : public RtMon {
public:
  RtMonGtk(void* rtmon_parent_ctx, GtkWidget* rtmon_parent_wid,
      const char* rtmon_name, const char* rtmon_display, pwr_tStatus* status);
  ~RtMonGtk();

  GtkWidget* parent_wid;
  GtkWidget* parent_wid_nodelist;
  GtkWidget* toplevel;
  GtkWidget* form_nodelist;
  GtkWidget* nodelistnav_widget;
  GtkWidget* bbox_label;
  GtkWidget* bbox_label_eb;
  GtkWidget* bbox_start;
  GtkWidget* bbox_restart;
  GtkWidget* bbox_stop;
  GtkWidget* lbox_reset;
  GtkWidget* bbox_image;
  GtkWidget* bbox_image_gray;
  GtkWidget* tools_xtt;
  GtkWidget* tools_op;
  GtkWidget* file_xtt;
  GtkWidget* file_op;
  GdkCursor* clock_cursor;
  gint timerid;
  pwr_tStatus old_status;

  void pop();
  void set_clock_cursor();
  void reset_cursor();
  void free_cursor();
  void create_input_dialog();
  void open_input_dialog(
      char* text, char* title, char* init_text, void (*ok_cb)(RtMon*, char*));

  static gboolean action_inputfocus(
      GtkWidget* w, GdkEvent* event, gpointer data);
  static void activate_exit(GtkWidget* w, gpointer data);
  static void activate_start(GtkWidget* w, gpointer data);
  static void activate_restart(GtkWidget* w, gpointer data);
  static void activate_stop(GtkWidget* w, gpointer data);
  static void activate_reset(GtkWidget* w, gpointer data);
  static void activate_zoom_in(GtkWidget* w, gpointer data);
  static void activate_zoom_out(GtkWidget* w, gpointer data);
  static void activate_zoom_reset(GtkWidget* w, gpointer data);
  static void activate_xtt(GtkWidget* w, gpointer data);
  static void activate_op(GtkWidget* w, gpointer data);
  static void activate_help(GtkWidget* w, gpointer data);
};

#endif
