/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef xtt_ge_qt_h
#define xtt_ge_qt_h

#include "xtt_ge.h"

#include "cow_wow_qt.h"

#include <QMessageBox>

class XttGeQtWidget;

class XttGeQt : public XttGe {
public:
  XttGeQtWidget* toplevel;
  QWidget* grow_widget;
  QWidget* form_widget;
  QWidget* nav_widget = NULL;
  QWidget* graph_form;
  QLineEdit* value_input;
  QWidget* value_dialog;
  QMessageBox* confirm_widget = NULL;
  CoWowFocusTimerQt focustimer;

  XttGeQt(void* parent_ctx, const char* name, const char* filename,
      int scrollbar, int menu, int navigator, int width, int height, int x,
      int y, double scan_time, const char* object_name, int use_default_access,
      unsigned int access, unsigned int options, void* basewidget,
      double* borders, int color_theme,
      int (*xg_command_cb)(void*, char*, char*, void*),
      int (*xg_get_current_objects_cb)(void*, pwr_sAttrRef**, int**),
      int (*xg_is_authorized_cb)(void*, unsigned int),
      void (*xg_keyboard_cb)(void*, void*, int, int));
  ~XttGeQt();

  void pop();
  void iconify();
  void set_size(int width, int height);
  void create_confirm_dialog();
  void confirm_reply(int ok);

  void* get_widget()
  {
    return this;
  }

  QWidget* get_graph_widget()
  {
    return graph_form;
  }

  void iconify(int val);
  void set_below(int val);

  static void ge_change_value_cb(void* ge_ctx, void* value_object, char* text);
  static void confirm_cb(void* ge_ctx, void* confirm_object, char* text);
  static void message_dialog_cb(void* ge_ctx, const char* text);
};

class XttGeQtWidget : public QWidget {
  Q_OBJECT

public:
  XttGeQtWidget(XttGeQt* parent) : QWidget(), ge(parent) {}

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_confirm_ok();
  void activate_confirm_cancel();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_help();
  void action_resize(QResizeEvent* event);

private:
  XttGeQt* ge;
};

#endif
