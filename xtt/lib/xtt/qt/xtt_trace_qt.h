/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef xtt_trace_qt_h
#define xtt_trace_qt_h

#include "pwr_baseclasses.h"

#include "cow_qt_helpers.h"

#include "xtt_trace.h"

#include <QWidget>

class RtTraceQtWidget;

class RtTraceQt : public RtTrace {
public:
  QWidget* flow_widget;
  QWidget* form;
  QWidget* menu;
  QWidget* nav_shell;
  QWidget* nav_widget;

  RtTraceQt(void* parent_ctx, pwr_tObjid objid, pwr_tStatus* status);
  ~RtTraceQt();

  void pop();
  void popup_menu_position(int event_x, int event_y, int* x, int* y);
  RtTrace* subwindow_new(void* ctx, pwr_tObjid oid, pwr_tStatus* sts);

private:
  RtTraceQtWidget* toplevel;
};

class RtTraceQtWidget : public QWidget {
  Q_OBJECT

public:
  RtTraceQtWidget(RtTraceQt* parent_ctx) : QWidget(), rt(parent_ctx) {}

protected:
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_print();
  void activate_printselect();
  void activate_savetrace();
  void activate_restoretrace();
  void activate_cleartrace();
  void activate_parent_window();
  void activate_display_object();
  void activate_collect_insert();
  void activate_open_object();
  void activate_open_subwindow();
  void activate_show_cross();
  void activate_open_classgraph();
  void activate_trace();
  void activate_simulate();
  void activate_view();
  void activate_zoomin();
  void activate_zoomout();
  void activate_zoomreset();
  void activate_scantime();
  void activate_help();
  void activate_helpplc();
  void activate_helpplclist();

private:
  RtTraceQt* rt;
};

#endif
