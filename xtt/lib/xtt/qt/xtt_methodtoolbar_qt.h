/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef xtt_methodtoolbar_qt_h
#define xtt_methodtoolbar_qt_h

#include "xtt_methodtoolbar.h"

#include <QAction>
#include <QToolBar>

class XttMethodToolbarQt;

typedef struct {
  XttMethodToolbarQt* mt;
  int idx;
} xtt_sMethodButtonCb;

class XttMethodToolbarQtObject;

class XttMethodToolbarQt : public XttMethodToolbar {
public:
  QToolBar* m_toolbar_w;
  QAction* m_op_button_w[32];
  QAction* m_mnt_button_w[32];
  xtt_sMethodButtonCb m_cb[64];
  QTimer* m_timerid;

  XttMethodToolbarQt(void* parent_ctx, void* xnav, unsigned int op_method_mask,
      unsigned int mnt_method_mask, const char* tooltip_suffix);
  ~XttMethodToolbarQt();
  QWidget* build();
  void set_sensitive();
  void set_current_sensitive();

private:
  XttMethodToolbarQtObject* object;
};

class XttMethodToolbarQtObject : public QObject {
  Q_OBJECT

public:
  XttMethodToolbarQtObject(XttMethodToolbarQt* parent_ctx)
      : QObject(), toolbar(parent_ctx) {}

public slots:
  void activate_button();
  void set_sensitive_cb();

private:
  XttMethodToolbarQt* toolbar;
};

#endif
