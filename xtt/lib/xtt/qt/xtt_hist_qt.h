/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef xtt_hist_qt_h
#define xtt_hist_qt_h

/* xtt_hist_qt.h -- Historical event window in xtt */

#if defined PWRE_CONF_LIBDB

#include "xtt_hist.h"

#include <QCheckBox>
#include <QLabel>
#include <QLineEdit>

class HistQtWidget;

class HistQt : public Hist {
public:
  HistQt(void* hist_parent_ctx, char* hist_name, pwr_tAttrRef* arp,
      pwr_tStatus* status);
  ~HistQt();

  QWidget* form_hist;
  QWidget* hist_widget;
  QWidget* start_time_help_lbl_w;
  QLineEdit* start_time_entry_w;
  QLineEdit* stop_time_entry_w;
  QLineEdit* event_text_entry_w;
  QLineEdit* event_name_entry_w;
  QCheckBox* alarm_toggle_w;
  QCheckBox* info_toggle_w;
  QCheckBox* infosuccess_toggle_w;
  QCheckBox* mnt_alarm_toggle_w;
  QCheckBox* sys_alarm_toggle_w;
  QCheckBox* user_alarm1_toggle_w;
  QCheckBox* user_alarm2_toggle_w;
  QCheckBox* user_alarm3_toggle_w;
  QCheckBox* user_alarm4_toggle_w;
  QCheckBox* ack_toggle_w;
  QCheckBox* ret_toggle_w;
  QCheckBox* prioA_toggle_w;
  QCheckBox* prioB_toggle_w;
  QCheckBox* prioC_toggle_w;
  QCheckBox* prioD_toggle_w;
  QLabel* nrofevents_string_lbl_w;
  QLabel* search_string_lbl_w;
  QLabel* search_string2_lbl_w;
  QLabel* search_string3_lbl_w;
  QLabel* search_string4_lbl_w;
  QWidget* search_vbox;

  void set_num_of_events(int nrOfEvents);
  void set_search_string(
      const char* s1, const char* s2, const char* s3, const char* s4);
  void SetListTime(pwr_tTime StartTime, pwr_tTime StopTime, int Sensitive);
  void insert_eventname(const char* name);

private:
  HistQtWidget* toplevel;
};

class HistQtWidget : public QWidget {
  Q_OBJECT

public:
  HistQtWidget(HistQt* parent_ctx) : QWidget(), hist(parent_ctx) {}

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_print();
  void activate_export();
  void activate_analyse();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_hide_search(bool set);
  void activate_open_plc();
  void activate_stat();
  void activate_display_in_xnav();
  void activate_disp_hundredth(bool set);
  void activate_hide_object(bool set);
  void activate_hide_text(bool set);
  void activate_help();
  void activate_helpevent();
  void ok_btn();
  // callbackfunctions from the searchdialog
  void cancel_cb();
  void time_cb(int);

private:
  HistQt* hist;
};

#else
// Dummy for other platforms then OS_LINUX
#include "xtt_hist.h"

class HistQt : public Hist {
public:
  HistQt(void* hist_parent_ctx, char* hist_name, pwr_tAttrRef* arp,
      pwr_tStatus* status) : Hist(hist_parent_ctx, hist_name, arp, status) {}
};

#endif

#endif
