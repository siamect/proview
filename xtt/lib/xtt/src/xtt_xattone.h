/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef xtt_xattone_h
#define xtt_xattone_h

/* xtt_xattone.h -- Single attribute editor */

#include "flow_browapi.h"

class XAttOne {
public:
  void* parent_ctx;
  pwr_sAttrRef aref;
  char name[80];
  unsigned int priv;
  int input_open;
  int access_rw;
  int input_multiline;
  void* object;
  void (*close_cb)(void*, XAttOne*);
  int (*is_authorized_cb)(void*, unsigned int);
  void* client_data;
  brow_tObject input_node;
  char input_name[80];
  pwr_tTid atype;
  unsigned int asize;
  unsigned int aoffs;
  unsigned int aelem;

  XAttOne(void* xa_parent_ctx, pwr_sAttrRef* xa_objar, char* xa_title,
      unsigned int xa_priv, int* xa_sts);
  virtual ~XAttOne();

  virtual void message(char severity, const char* message)
  {
  }
  virtual void set_prompt(char* prompt)
  {
  }
  virtual int change_value(int set_focus)
  {
    return 0;
  }
  virtual void change_value_close()
  {
  }
  virtual void pop()
  {
  }
  virtual int set_value()
  {
    return 0;
  }

  int open_changevalue(char* name);
};

#endif
