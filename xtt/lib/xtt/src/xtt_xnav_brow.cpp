/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#include <string.h>

#include "pwr_baseclasses.h"
#include "pwr_privilege.h"

#include "co_api.h"
#include "co_dcli.h"
#include "co_msg.h"
#include "co_time.h"

#include "rt_gdb.h"
#include "rt_gdh.h"
#include "rt_gdh_msg.h"
#include "rt_xnav_msg.h"

#include "xtt_xnav_brow.h"

XNavBrow::XNavBrow(
    BrowCtx* brow_ctx, void* brow_userdata, brow_eUserType brow_usertype)
    : ctx(brow_ctx), userdata(brow_userdata), usertype(brow_usertype)
{
  strcpy(push_command, "");
}

//
//  Free pixmaps
//
void XNavBrow::free_pixmaps()
{
  brow_FreeAnnotPixmap(ctx, pixmap_leaf);
  brow_FreeAnnotPixmap(ctx, pixmap_map);
  brow_FreeAnnotPixmap(ctx, pixmap_openmap);
  brow_FreeAnnotPixmap(ctx, pixmap_ref);
  brow_FreeAnnotPixmap(ctx, pixmap_crossref);
  brow_FreeAnnotPixmap(ctx, pixmap_openattr);
  brow_FreeAnnotPixmap(ctx, pixmap_attr);
  brow_FreeAnnotPixmap(ctx, pixmap_attrarray);
  brow_FreeAnnotPixmap(ctx, pixmap_attrarrayelem);
  brow_FreeAnnotPixmap(ctx, pixmap_crrread);
  brow_FreeAnnotPixmap(ctx, pixmap_crrwrite);
  brow_FreeAnnotPixmap(ctx, pixmap_script);
  brow_FreeAnnotPixmap(ctx, pixmap_list);
  brow_FreeAnnotPixmap(ctx, pixmap_file);
  brow_FreeAnnotPixmap(ctx, pixmap_graph);
  brow_FreeAnnotPixmap(ctx, pixmap_curve);
  brow_FreeAnnotPixmap(ctx, pixmap_action);
  brow_FreeAnnotPixmap(ctx, pixmap_symbol);
  brow_FreeAnnotPixmap(ctx, pixmap_morehelp);
  brow_FreeAnnotPixmap(ctx, pixmap_closehelp);
  brow_FreeAnnotPixmap(ctx, pixmap_object);
  brow_FreeAnnotPixmap(ctx, pixmap_attrenum);
  brow_FreeAnnotPixmap(ctx, pixmap_attrmask);
  brow_FreeAnnotPixmap(ctx, pixmap_block2);
  brow_FreeAnnotPixmap(ctx, pixmap_blockr);
  brow_FreeAnnotPixmap(ctx, pixmap_blockd);
  brow_FreeAnnotPixmap(ctx, pixmap_alarm2);
  brow_FreeAnnotPixmap(ctx, pixmap_arrowdown);
  brow_FreeAnnotPixmap(ctx, pixmap_arrowright);
  brow_FreeAnnotPixmap(ctx, pixmap_attrref);
  brow_FreeAnnotPixmap(ctx, pixmap_castattr);
  brow_FreeAnnotPixmap(ctx, pixmap_plcpgm);
  brow_FreeAnnotPixmap(ctx, pixmap_inverted);
  brow_FreeAnnotPixmap(ctx, pixmap_teston);
  brow_FreeAnnotPixmap(ctx, pixmap_offline);
  brow_FreeAnnotPixmap(ctx, pixmap_filter);
}

//
//  Create pixmaps for leaf, closed map and open map
//
void XNavBrow::allocate_pixmaps()
{
  brow_LoadPBMs(ctx, "xnav_bitmap_action", &pixmap_action);
  brow_LoadPBMs(ctx, "xnav_bitmap_alarm2", &pixmap_alarm2);
  brow_LoadPBMs(ctx, "xnav_bitmap_arrowdown", &pixmap_arrowdown);
  brow_LoadPBMs(ctx, "xnav_bitmap_arrowright", &pixmap_arrowright);
  brow_LoadPBMs(ctx, "xnav_bitmap_attr", &pixmap_attr);
  brow_LoadPBMs(ctx, "xnav_bitmap_attrarra", &pixmap_attrarray);
  brow_LoadPBMs(ctx, "xnav_bitmap_attrarel", &pixmap_attrarrayelem);
  brow_LoadPBM(ctx, "xnav_bitmap_attrenum", &pixmap_attrenum);
  brow_LoadPBM(ctx, "xnav_bitmap_attrmask", &pixmap_attrmask);
  brow_LoadPBMs(ctx, "xnav_bitmap_attrref", &pixmap_attrref);
  brow_LoadPBMs(ctx, "xnav_bitmap_block2", &pixmap_block2);
  brow_LoadPBMs(ctx, "xnav_bitmap_blockd", &pixmap_blockd);
  brow_LoadPBMs(ctx, "xnav_bitmap_blockr", &pixmap_blockr);
  brow_LoadPBMs(ctx, "xnav_bitmap_castattr", &pixmap_castattr);
  brow_LoadPBM(ctx, "xnav_bitmap_closehelp", &pixmap_closehelp);
  brow_LoadPBMs(ctx, "xnav_bitmap_crossref", &pixmap_crossref);
  brow_LoadPBMs(ctx, "xnav_bitmap_crrread", &pixmap_crrread);
  brow_LoadPBMs(ctx, "xnav_bitmap_crrwrite", &pixmap_crrwrite);
  brow_LoadPBM(ctx, "xnav_bitmap_curve", &pixmap_curve);
  brow_LoadPBM(ctx, "xnav_bitmap_file", &pixmap_file);
  brow_LoadPBMs(ctx, "xnav_bitmap_filter", &pixmap_filter);
  brow_LoadPBM(ctx, "xnav_bitmap_graph", &pixmap_graph);
  brow_LoadPBMs(ctx, "xnav_bitmap_inverted", &pixmap_inverted);
  brow_LoadPBMs(ctx, "xnav_bitmap_leaf", &pixmap_leaf);
  brow_LoadPBM(ctx, "xnav_bitmap_list", &pixmap_list);
  brow_LoadPBMs(ctx, "xnav_bitmap_map", &pixmap_map);
  brow_LoadPBM(ctx, "xnav_bitmap_morehelp", &pixmap_morehelp);
  brow_LoadPBMs(ctx, "xnav_bitmap_object", &pixmap_object);
  brow_LoadPBMs(ctx, "xnav_bitmap_offline", &pixmap_offline);
  brow_LoadPBM(ctx, "xnav_bitmap_openattr", &pixmap_openattr);
  brow_LoadPBMs(ctx, "xnav_bitmap_openmap", &pixmap_openmap);
  brow_LoadPBMs(ctx, "xnav_bitmap_plcpgm", &pixmap_plcpgm);
  brow_LoadPBMs(ctx, "xnav_bitmap_ref", &pixmap_ref);
  brow_LoadPBM(ctx, "xnav_bitmap_script", &pixmap_script);
  brow_LoadPBM(ctx, "xnav_bitmap_symbol", &pixmap_symbol);
  brow_LoadPBMs(ctx, "xnav_bitmap_teston", &pixmap_teston);
}

//
// Create nodeclasses
//
void XNavBrow::create_nodeclasses()
{
  allocate_pixmaps();

  // Create common-class

  brow_CreateNodeClass(
      ctx, "NavigatorDefault", flow_eNodeGroup_Common, &nc_object);
  brow_AddAnnotPixmap(nc_object, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_object, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_object, 2, 1.1, 0.1, flow_eDrawType_LineRed, 2, 0);
  brow_AddAnnotPixmap(nc_object, 3, 1.8, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_object, 2.9, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_object, 7.9, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_object, 11.9, 0.6, 2, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_object, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create attribute nodeclass

  brow_CreateNodeClass(ctx, "NavigatorAttr", flow_eNodeGroup_Common, &nc_attr);
  brow_AddAnnotPixmap(nc_attr, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_attr, 1, 1.4, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_attr, 2.9, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_attr, 8.9, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_attr, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create table nodeclass

  brow_CreateNodeClass(
      ctx, "NavigatorTable", flow_eNodeGroup_Common, &nc_table);
  brow_AddAnnotPixmap(nc_table, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_table, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_table, 2, 1.1, 0.1, flow_eDrawType_LineRed, 2, 0);
  brow_AddAnnot(nc_table, 2.9, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table, 8.9, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 12.9, 0.6, 2, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 16.9, 0.6, 3, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 20.9, 0.6, 4, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 24.9, 0.6, 5, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 28.9, 0.6, 6, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 32.9, 0.6, 7, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 35.9, 0.6, 8, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_table, 38.9, 0.6, 9, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_table, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create text

  brow_CreateNodeClass(ctx, "NavigatorText", flow_eNodeGroup_Common, &nc_text);
  brow_AddAnnotPixmap(nc_text, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_text, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_text, 2.9, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_text, 7.9, 0.6, 1, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddAnnot(nc_text, 11.9, 0.6, 2, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_text, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);

  // Create Header

  brow_CreateNodeClass(
      ctx, "NavigatorHead", flow_eNodeGroup_Common, &nc_header);
  brow_AddAnnotPixmap(nc_header, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_header, 2.9, 0.6, 0, flow_eDrawType_TextHelveticaBold, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_header, 8.9, 0.6, 1, flow_eDrawType_TextHelveticaBold, 2,
      flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_header, 0, 0, 20, 0.83, flow_eDrawType_LineGray, 2, 1);

  // Create Header2

  brow_CreateNodeClass(
      ctx, "NavigatorHeadLarge", flow_eNodeGroup_Common, &nc_headerlarge);
  brow_AddAnnotPixmap(nc_headerlarge, 0, 0.5, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_headerlarge, 2.9, 1.0, 0, flow_eDrawType_TextHelveticaBold,
      4, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_headerlarge, 8.9, 1.0, 1, flow_eDrawType_TextHelveticaBold,
      4, flow_eAnnotType_OneLine, 1);
  brow_AddFrame(nc_headerlarge, 0, 0, 20, 1.4, flow_eDrawType_LineGray, -1, 1);

  // Create TableHeader

  brow_CreateNodeClass(
      ctx, "NavigatorTableHead", flow_eNodeGroup_Common, &nc_table_header);
  brow_AddAnnotPixmap(nc_table_header, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_table_header, 2.9, 0.6, 0, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 8.9, 0.6, 1, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 12.9, 0.6, 2, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 16.9, 0.6, 3, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 20.9, 0.6, 4, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 24.9, 0.6, 5, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 28.9, 0.6, 6, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 32.9, 0.6, 7, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 35.9, 0.6, 8, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddAnnot(nc_table_header, 38.9, 0.6, 9, flow_eDrawType_TextHelveticaBold,
      2, flow_eAnnotType_OneLine, 0);
  brow_AddFrame(nc_table_header, 0, 0, 20, 0.83, flow_eDrawType_LineGray, 2, 1);

  brow_CreateNodeClass(ctx, "NavigatorEnum", flow_eNodeGroup_Common, &nc_enum);
  brow_AddRadiobutton(nc_enum, 12, 0.03, 0.7, 0.7, 0, flow_eDrawType_Line, 1);
  brow_AddAnnotPixmap(nc_enum, 0, 0.2, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnotPixmap(nc_enum, 1, 1.1, 0.1, flow_eDrawType_Line, 2, 0);
  brow_AddAnnot(nc_enum, 2.9, 0.6, 0, flow_eDrawType_TextHelvetica, 2,
      flow_eAnnotType_OneLine, 0);
  brow_AddFrame(nc_enum, 0, 0, 20, 0.83, flow_eDrawType_LineGray, -1, 1);
}

void XNavBrow::brow_setup()
{
  brow_sAttributes brow_attr;
  unsigned long mask;

  mask = 0;
  mask |= brow_eAttr_indentation;
  brow_attr.indentation = 0.5;
  mask |= brow_eAttr_annotation_space;
  brow_attr.annotation_space = 0.5;
  brow_SetAttributes(ctx, &brow_attr, mask);
  brow_SetCtxUserData(ctx, userdata);
}

void XNavBrow::set_push_command(char* cmd)
{
  strcpy(push_command, cmd);
}
