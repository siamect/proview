/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef xtt_fileview_gtk_h
#define xtt_fileview_gtk_h

#include "xtt_fileview.h"

/* xtt_fileview_gtk.h -- view and select files */

class XttFileviewGtk : public XttFileview {
public:
  XttFileviewGtk(void* xn_parent_ctx, GtkWidget* xn_parent_wid, pwr_tOid xn_oid,
      char* xn_title, char* xn_dir, char* xn_pattern, int xn_type,
      char* xn_target_attr, char* xn_trigger_attr, char* xn_filetype);
  ~XttFileviewGtk()
  {
  }

  GtkWidget* toplevel;
  GtkWidget* list;
  GtkWidget* input_text;
  pwr_tFileName dir;
  pwr_tString40 pattern;
  pwr_tAName target_attr;
  pwr_tAName trigger_attr;
  pwr_tString40* filelist;
  pwr_tString40 selected_file;
  pwr_tString40 filetype;
  int filecnt;
  void* parent_ctx;
  pwr_tOid oid;
  int type;

  void execute(char* file);

  static void list_cursor_changed_cb(GtkTreeView* tree_view, gpointer data);
  static void list_row_activated_cb(GtkTreeView* tree_view, GtkTreePath* path,
      GtkTreeViewColumn* column, gpointer data);
  static void list_ok_cb(GtkWidget* w, gpointer data);
  static void list_input_cb(GtkWidget* w, gpointer data);
  static void list_cancel_cb(GtkWidget* w, gpointer data);
  static void list_save_cb(void* ctx, void* data);
};

#endif
