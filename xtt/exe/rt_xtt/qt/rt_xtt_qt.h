/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

#ifndef rt_xtt_qt_h
#define rt_xtt_qt_h

/* rt_xtt_qt.h -- Simple navigator */

#include "cow_wow_qt.h"

#include "rt_xtt_main.h"

#include <QLabel>

class XttHotkey;

class XttQtWidget;

class XttQt : public Xtt {
public:
  XttQtWidget* toplevel;
  QWidget* brow_widget;
  QWidget* form_widget;
  QLabel* msg_label;
  QLabel* cmd_prompt;
  //QWidget* xnav_form;
  CoWowFocusTimerQt focustimer;
  CoWowRecall* cmd_recall;
  CoWowRecall* value_recall;
  CoWowEntryQt* cmd_entry;
  XttHotkey* hotkey;

  XttQt(int argc, char* argv[], int* sts);
  ~XttQt();

  void message(char severity, const char* msg);
  void open_input_dialog(const char* text, const char* title,
      const char* init_text, void (*ok_cb)(Xtt*, char*));
  void set_prompt(const char* prompt);
  void open_change_value();
  void print();

  static void close(void* ctx, int terminate);
  static void set_dimension(void* ctx, int width, int height);
  static void map(void* ctx);

  static void hotkey_Command(char* arg, void* userdata);
  static void hotkey_ToggleDig(char* arg, void* userdata);
  static void hotkey_SetDig(char* arg, void* userdata);
  static void hotkey_ResetDig(char* arg, void* userdata);
};

class XttQtWidget : public QWidget {
  Q_OBJECT

public:
  XttQtWidget(XttQt* parent_ctx) : QWidget(), xtt(parent_ctx) {}
  bool eventFilter(QObject* obj, QEvent* event);

protected:
  void focusInEvent(QFocusEvent* event);
  void closeEvent(QCloseEvent* event);

public slots:
  void activate_change_value();
  void activate_command();
  void activate_print();
  void activate_login();
  void activate_logout();
  void activate_find();
  void activate_findregex();
  void activate_findnext();
  void activate_collapse();
  void activate_openobject();
  void activate_openplc();
  void activate_showcrossref();
  void activate_opengraph();
  void activate_collect_insert();
  void activate_collect_show();
  void activate_collect_remove();
  void activate_collect_clear();
  void activate_collect_opengraph();
  void activate_collect_window();
  void activate_collect_new_window();
  void activate_collect_signals();
  void activate_collect_iosignals();
  void activate_collect_open();
  void activate_advanceduser();
  void activate_zoom_in();
  void activate_zoom_out();
  void activate_zoom_reset();
  void activate_help();
  void activate_help_navigator();
  void activate_help_project();
  void activate_help_proview();
  void activate_back();
  void valchanged_cmd_entry();

private:
  XttQt* xtt;
};

#endif
