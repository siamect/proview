/*
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every
 * copy of the combined work is accompanied by a complete copy of
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU
 * General Public License plus this exception.
 */

/* pwr_rtmonitor_qt.cpp -- Runtime Monitor */

#include <stdlib.h>
#include <locale.h>

#include "co_string.h"

#include "cow_qt_helpers.h"
#include "cow_rtmon_qt.h"
#include "cow_style_qt.h"
#include "cow_xhelp_qt.h"

#include <QApplication>

CoXHelp* xhelp;
RtMon* rtmon;

static void usage()
{
  printf("\nUsage: pwr_rtmonitor\n");
}

static void rtmon_help_cb(void* ctx, const char* topic)
{
  CoXHelp::dhelp(
      "index", "", navh_eHelpFile_Other, "$pwr_lang/rtmon_help.dat", 0);
}

static void rtmon_close_cb(void* ctx)
{
  delete rtmon;
  delete xhelp;
  exit(0);
}

int main(int argc, char* argv[])
{
  log_setLevel(LOG_TRACE);
  int sts;
  char display[80] = "";

  log_debug("%s ", argv[0]);
  for (int i = 1; i < argc; i++) {
    fprintf(stderr, "%s ", argv[i]);
    if (streq(argv[i], "-h")) {
      usage();
      exit(0);
    } else if (streq(argv[i], "--display") && i + 1 < argc) {
      strncpy(display, argv[i + 1], sizeof(display));
    }
  }
  fprintf(stderr, "\n");

  QApplication app(argc, argv);
  QApplication::setStyle(new PwrStyle());

  setlocale(LC_NUMERIC, "POSIX");
  setlocale(LC_TIME, "en_US");

  // Create help window
  xhelp = new CoXHelpQt(NULL, xhelp_eUtility_Xtt, &sts);
  CoXHelp::set_default(xhelp);

  rtmon = new RtMonQt(NULL, "Runtime Monitor", display, &sts);
  rtmon->help_cb = rtmon_help_cb;
  rtmon->close_cb = rtmon_close_cb;

  return app.exec();
}
