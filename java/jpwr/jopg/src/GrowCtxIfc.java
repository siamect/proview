/* 
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

package jpwr.jopg;
import java.util.*;
import java.io.*;


public interface GrowCtxIfc {
    public GlowArrayElem get_nodeclass_from_name(String name);
    public GlowArrayElem get_conclass_from_name(String name);
    public GlowArrayElem get_node_from_name(String name);
    public GlowArrayElem get_object_group( GlowArrayElem object);
    public void draw();
    public void draw( double ll_x, double ll_y, double ur_x, double ur_y);
    public void register_callback_object(int type, GlowArrayElem o);
    public int send_menu_callback( GlowArrayElem object, int item, int type,
				   double x, double y);
    public int send_toolbar_callback( GlowArrayElem object, int category, int idx, int type,
				      double x, double y);
    public int send_table_callback( GlowArrayElem object, int event,
				    double x, double y, int column, int row);
    public void insert(GlowArrayElem e);
    public void remove(GlowArrayElem e);
    public void pop(GlowArrayElem e);
    public Vector<GlowArrayElem> get_object_list();
    public GlowBackgroundObject getBackgroundObjectLimits(int type, double x, double y);
    public void setMoveRestrictions( int restriction, double max_limit, double min_limit, GlowArrayElem object);
    public void zoom( double factor);
    public void zoom( double factor, double x, double y);
    public void scroll( int delta_x, int delta_y);
    public void openVector( BufferedReader reader, Object cmn, Vector<GlowArrayElem> a);
    public int eventHandler(GlowEvent e, double fx, double fy);
    public Object getCmn();
    public void traceConnect();
    public void traceDisconnect();
    public void traceScan();
    public boolean traceStarted();
    public void setSubwindowSource( String name, String source, String owner);
    public void setSliderActive( boolean active);
    public int loadSubgraph( String file);
    public int signalSend( String signalName);
}
