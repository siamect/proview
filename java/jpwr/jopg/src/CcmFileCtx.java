/* 
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

package jpwr.jopg;
import java.util.Vector;

public class CcmFileCtx {
    public CcmFileCtx() {
    }
    CcmLine main_start_line;
    CcmLine main_end_line;
    boolean verify;
    int current_row;
    int error_row;
    String error_line;
    boolean break_before;
    int extfunc_return_mode;
    String last_fgets;
    CcmFuncCtx main_funcctx;
    CcmArg[] main_arg_list;
    int main_arg_count;
    CcmLine extfunc_line;
    Object client_data;
    CcmApplIfc appl;
    public Vector<CcmIntvar> gblint_list = new Vector<CcmIntvar>();
    public Vector<CcmFloatvar>	gblfloat_list = new Vector<CcmFloatvar>();
    public Vector<CcmStringvar> gblstring_list = new Vector<CcmStringvar>();
    Vector<CcmLine> line_list = new Vector<CcmLine>();
    Vector<CcmFunc> func_list = new Vector<CcmFunc>();

    public void updateLines() {
	for ( int i = 0; i < line_list.size(); i++)
	    line_list.get(i).idx =  i;
    }
    public CcmLine lineNext( CcmLine l) {
	if ( l.idx + 1 < line_list.size())
	    return line_list.get(l.idx+1);
	return null;
    }
}

