/* 
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

package jpwr.jop;
import jpwr.rt.*;
//import Logg;
import java.awt.*;
import java.awt.event.*;
import java.awt.font.*;
import java.awt.geom.*;
import java.awt.image.*;
import javax.swing.event.*;
import java.io.*;
import java.net.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import java.awt.event.*;


/**
 *  Applet for Alarm and event list.
 *
 *  @author     JN
 */
public class MhClient extends JApplet
{
  static final long serialVersionUID = 3652214215365767081L;
  BorderLayout borderLayout1 = new BorderLayout();

  BorderLayout borderLayout5 = new BorderLayout();

  JPanel contentPane;
  JLabel labelMessage = new JLabel("MhClient version 1.0");

  JPanel messagePanel = new JPanel();

  boolean sim = false;

  Dimension size;

  JPanel userPanel = new JPanel();


  MhTable mhTable;


  /**  Constructor for the MhClient object */
  public MhClient() { }


  /**
   *  Sets the size attribute of the MhClient object
   *
   *  @param  width   The new size value
   *  @param  height  The new size value
   */
  public void setSize(int width, int height)
  {
    //Logg.logg("MhClient: setSize()", 1);

    super.setSize(width, height);

    validate();
  }



/*
  public String GetAppletInfo()
  {
    return "Applet information";
  }
*/

  /**
   *  Gets the parameterInfo attribute of the MhClient object
   *
   *  @return    The parameterInfo value
   */
  public String[][] getParameterInfo()
  {
    return null;
  }




  public void destroy()
  {
    if(mhTable != null)
      mhTable.close();
    if(!sim)
    {
      super.destroy();
    }
  }


  public void init()
  {
    super.init();
    size = new Dimension(570, 570);
    contentPane = (JPanel)this.getContentPane();
    contentPane.setLayout(borderLayout1);


    Dimension d = messagePanel.getSize();
    d.height += 20;
    messagePanel.setPreferredSize(d);
    contentPane.add(messagePanel, BorderLayout.SOUTH);

    contentPane.setOpaque(true);
    userPanel.setLayout(new GridBagLayout());
    GridBagConstraints gbc = new GridBagConstraints();
    gbc.anchor = GridBagConstraints.WEST;
    gbc.insets = new Insets(2, 2, 2, 2);

    messagePanel.setLayout(borderLayout5);
    contentPane.setOpaque(true);
    contentPane.setBackground(Color.white);
    this.setSize(size);

    messagePanel.add(labelMessage, BorderLayout.NORTH);
    //Logg.logg("MhClient: Before XttTree-creation", 6);
    this.mhTable = new MhTable(this, false, this.labelMessage);
    //Logg.logg("MhClient: mhTable created", 6);
    this.contentPane.add(this.mhTable.splitPane, BorderLayout.CENTER);

  }
  
  public void setMess(String mess, boolean error)
  {
    /*
    if(error)
    {
      this.labelMessage.setColor(Color.red);
    }
    else
    {
      this.labelMessage.setColor(Color.blue);
    }
    */
    this.labelMessage.setText(mess);
  }


  public void start()
  {
  }


  public void stop()
  {
  }
}

