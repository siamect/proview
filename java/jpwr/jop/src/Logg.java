/* 
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

package jpwr.jop;
import java.sql.Timestamp;
import java.util.Date;
import javax.swing.*;
/**
 *  Xtt logg class for debugging.
 *
 *  @author     JN
 */
public class Logg
{
  public static int NOTHING = 0;
  public static int TO_FILE = 1;
  public static int TO_SCREEN = 2;
  public static int loggPrio = 0;
  public static int loggTo = Logg.NOTHING;
  public static JLabel text_lbl = null;

  public static JPanel messagePanel = null;
  public static void logg(String loggText, int prio)
  {
    if(prio <= Logg.loggPrio)
    {
      if((Logg.loggTo & Logg.TO_SCREEN) > 0)
      {
        System.out.println(loggText + " Tid: " + (new Timestamp(new Date().getTime())).toString());
      }
      if((Logg.loggTo & Logg.TO_FILE) > 0)
      {
        //to be written
      }
    }
  }


  public static void loggToApplet(String loggText)
  {
    if(text_lbl != null)
    {
      text_lbl.setText(loggText
      /*
       *  + " Tid: " + (new Timestamp(new Date().getTime())).toString()
       */
          );
      if(messagePanel != null)
      {
        messagePanel.doLayout();
	messagePanel.repaint();
      }
    }
    else
    {
      Logg.logg("To text_lbl: " + loggText, 1);
    }
  }
  public static String getAppletLogStr()
  {
    if(text_lbl != null)
      return text_lbl.getText();
    else
      return "text_lbl = null";
  }

  public static void main(String[] args)
  {
    Logg.loggTo = Logg.TO_SCREEN;
    System.out.println(Logg.loggTo);
    Logg.logg("Logg test", 3);
  }
}

