/* 
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */


package jpwr.jop;
import javax.swing.*;
import java.awt.event.*;
import java.awt.*;
import java.applet.*;
import java.net.*;
import jpwr.rt.*;

/**
   Jop root object when Jop is started as an applet.
   @see JopFrame
*/
public class JopApplet extends JApplet implements GdhApplIfc
{
  static final long serialVersionUID = -6996702709757726425L;
  public JopSession session;
  public JopEngine engine;
  String pwrHost;

  public JopApplet()
  {
  }

  public void init() {
    String instance = this.getParameter("instance");
    pwrHost = getParameter( "pwrhost");
    System.out.println( "Parameter pwrhost: " + pwrHost);

    engine = new JopEngine(1000, this);
    session = new JopSession( engine, (Object)this);
    if ( instance != null && instance.length() != 0) {
      // Substitutes for local char because of mozilla...
	instance = instance.replace( '\\', (char)229);
	instance = instance.replace( '/', (char)228);
	instance = instance.replace( '@', (char)246);

      System.out.println( "Parameter instance: " + instance);
      engine.gdh.logString("Parameter instance: " + instance);
      engine.setInstance( instance);
    }
  }

  public void stop() {
//      System.exit(0);
  }
  public void destroy() {
    engine.close();
  }
  public String getAppletInfo(){
    return "Applet Information";
  }
  public String[][] getParameterInfo() {
    return null;
  }
  public String getPwrHost() {
    if ( pwrHost == null) {
      URL url = getDocumentBase();
      pwrHost = url.getHost();
    }
    return pwrHost;
  }
}
