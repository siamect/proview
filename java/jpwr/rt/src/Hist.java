/* 
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

package jpwr.rt;

/**
 *  Interface to the event log.
 *
 *  @author     Jonas Nylund
 */
public class Hist
{
  static
  {
    System.loadLibrary("jpwr_rt_gdh");
    initHistIDs();  
  }

  
  public static final int EventType_ClearAlarmList = 66;

  private static boolean initDone = false;

  /**
   *  Constructor for the Hist object
   */
  public Hist()
  {
    
    if(!initDone)
    {
      initDone = true;
    }
  }

  private native static void initHistIDs();

  /**
   *  Get events matching the submitted search criteria.
   *  @return  A Vector containing matching events
   *  @see MhrEvent
   */

  public native static MhrEvent[] getHistList(String startTime,
					  String stopTime,
					  boolean typeInfo,
					  boolean typeInfoSuccess,
					  boolean typeAlarm,
					  boolean typeMaintenanceAlarm,
					  boolean typeSystemAlarm,
					  boolean typeUserAlarm1,
					  boolean typeUserAlarm2,
					  boolean typeUserAlarm3,
					  boolean typeUserAlarm4,
					  boolean typeReturn,
					  boolean typeAck,
					  boolean prioA,
					  boolean prioB,
					  boolean prioC,
					  boolean prioD,
					  String name,
					  String text);
}




