/* 
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

package jpwr.rt;

/**
 * Interface to QCom.
 * <p>
 * The functionality is limited to listen to the event init queue for termination and restart
 * events, and to send and receive string messages.
 * @author	cs
 */
public class Qcom {
    static {
	System.loadLibrary("jpwr_rt_gdh");
    }
  
    public Qcom() {
    }
    /** Put a string message. */
    public PwrtStatus put( int qix, int nid, String data) {
	return putString( qix, nid, data);
    }
    
    /** Create a queue. */
    public native QcomrCreateQ createQ( int qix, int nid, String name);
    /** Create the init event queue. */
    public native QcomrCreateQ createIniEventQ(String name);
    /** Get messages from the init event queue. */
    public native QcomrGetIniEvent getIniEvent(int qix, int nid, int timeoutTime);
    /** Put a string message. */
    private native PwrtStatus putString( int qix, int nid, String data);
    /** Get a string msesage. */
    public native CdhrString getString( int qix, int nid);
}
