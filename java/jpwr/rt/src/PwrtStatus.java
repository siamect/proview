/* 
 * ProviewR   Open Source Process Control.
 * Copyright (C) 2005-2021 SSAB EMEA AB.
 *
 * This file is part of ProviewR.
 *
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License as 
 * published by the Free Software Foundation, either version 2 of 
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with ProviewR. If not, see <http://www.gnu.org/licenses/>
 *
 * Linking ProviewR statically or dynamically with other modules is
 * making a combined work based on ProviewR. Thus, the terms and
 * conditions of the GNU General Public License cover the whole 
 * combination.
 *
 * In addition, as a special exception, the copyright holders of
 * ProviewR give you permission to, from the build function in the
 * ProviewR Configurator, combine ProviewR with modules generated by the
 * ProviewR PLC Editor to a PLC program, regardless of the license
 * terms of these modules. You may copy and distribute the resulting
 * combined work under the terms of your choice, provided that every 
 * copy of the combined work is accompanied by a complete copy of 
 * the source code of ProviewR (the version used to produce the
 * combined work), being distributed under the terms of the GNU 
 * General Public License plus this exception.
 */

package jpwr.rt;
import java.io.Serializable;

/**
 * Status value. 
 * <p>
 * A status is a 32-bit word, with the following properties  
 * 
 * <p>
 * Description. The status word can be translated to a string that describes the status. 
 * <p>
 * Severity. There are five types of severity: Success, Info, Warning, Error and Fatal. 
 * The severity is defined by the last 3 bits of the word. Note that status with OK 
 * severity is odd, and not OK severity is even. 001 (1) Success 011 (3) Info 000 (0) 
 * Warning 010 (2) Error 100 (4) Fatal 
 * <p>
 * c-binding. All status values are defined in message includefiles, e.g. GDH__NOSUCHOBJ 
 * is defined in rt_gdh_msg.h Color coding
 * <p>
 * Status values are displayed in graphs with different colors dependent on the severity. 
 * Success Green. Info Green. Warning Yellow. Error Red. Fatal Flashing red. 
 * @author	cs
 */
public class PwrtStatus implements Serializable
{
  static final long serialVersionUID = 3091498754004220412L;
  int sts;
  
  public PwrtStatus( int sts) {
    this.sts = sts;
  }
  public boolean evenSts() { return (sts % 2 == 0);}
  public boolean oddSts() { return (sts % 2 == 1);}
  public int getSts() { return sts;}
}
